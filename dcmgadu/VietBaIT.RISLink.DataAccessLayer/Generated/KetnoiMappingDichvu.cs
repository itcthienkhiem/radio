using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.RISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the KetnoiMappingDichvu class.
	/// </summary>
    [Serializable]
	public partial class KetnoiMappingDichvuCollection : ActiveList<KetnoiMappingDichvu, KetnoiMappingDichvuCollection>
	{	   
		public KetnoiMappingDichvuCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>KetnoiMappingDichvuCollection</returns>
		public KetnoiMappingDichvuCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                KetnoiMappingDichvu o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the KETNOI_MAPPING_DICHVU table.
	/// </summary>
	[Serializable]
	public partial class KetnoiMappingDichvu : ActiveRecord<KetnoiMappingDichvu>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public KetnoiMappingDichvu()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public KetnoiMappingDichvu(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public KetnoiMappingDichvu(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public KetnoiMappingDichvu(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("KETNOI_MAPPING_DICHVU", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "ID";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarHisIdDvu = new TableSchema.TableColumn(schema);
				colvarHisIdDvu.ColumnName = "HIS_ID_DVU";
				colvarHisIdDvu.DataType = DbType.Int32;
				colvarHisIdDvu.MaxLength = 0;
				colvarHisIdDvu.AutoIncrement = false;
				colvarHisIdDvu.IsNullable = true;
				colvarHisIdDvu.IsPrimaryKey = false;
				colvarHisIdDvu.IsForeignKey = false;
				colvarHisIdDvu.IsReadOnly = false;
				colvarHisIdDvu.DefaultSetting = @"";
				colvarHisIdDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHisIdDvu);
				
				TableSchema.TableColumn colvarHisMaDvu = new TableSchema.TableColumn(schema);
				colvarHisMaDvu.ColumnName = "HIS_MA_DVU";
				colvarHisMaDvu.DataType = DbType.String;
				colvarHisMaDvu.MaxLength = 50;
				colvarHisMaDvu.AutoIncrement = false;
				colvarHisMaDvu.IsNullable = true;
				colvarHisMaDvu.IsPrimaryKey = false;
				colvarHisMaDvu.IsForeignKey = false;
				colvarHisMaDvu.IsReadOnly = false;
				colvarHisMaDvu.DefaultSetting = @"";
				colvarHisMaDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHisMaDvu);
				
				TableSchema.TableColumn colvarHisTenDvu = new TableSchema.TableColumn(schema);
				colvarHisTenDvu.ColumnName = "HIS_TEN_DVU";
				colvarHisTenDvu.DataType = DbType.String;
				colvarHisTenDvu.MaxLength = 50;
				colvarHisTenDvu.AutoIncrement = false;
				colvarHisTenDvu.IsNullable = true;
				colvarHisTenDvu.IsPrimaryKey = false;
				colvarHisTenDvu.IsForeignKey = false;
				colvarHisTenDvu.IsReadOnly = false;
				colvarHisTenDvu.DefaultSetting = @"";
				colvarHisTenDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHisTenDvu);
				
				TableSchema.TableColumn colvarHisIdLoaiDvu = new TableSchema.TableColumn(schema);
				colvarHisIdLoaiDvu.ColumnName = "HIS_ID_LOAI_DVU";
				colvarHisIdLoaiDvu.DataType = DbType.Int32;
				colvarHisIdLoaiDvu.MaxLength = 0;
				colvarHisIdLoaiDvu.AutoIncrement = false;
				colvarHisIdLoaiDvu.IsNullable = true;
				colvarHisIdLoaiDvu.IsPrimaryKey = false;
				colvarHisIdLoaiDvu.IsForeignKey = false;
				colvarHisIdLoaiDvu.IsReadOnly = false;
				colvarHisIdLoaiDvu.DefaultSetting = @"";
				colvarHisIdLoaiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHisIdLoaiDvu);
				
				TableSchema.TableColumn colvarHisMaLoaiDvu = new TableSchema.TableColumn(schema);
				colvarHisMaLoaiDvu.ColumnName = "HIS_MA_LOAI_DVU";
				colvarHisMaLoaiDvu.DataType = DbType.String;
				colvarHisMaLoaiDvu.MaxLength = 50;
				colvarHisMaLoaiDvu.AutoIncrement = false;
				colvarHisMaLoaiDvu.IsNullable = true;
				colvarHisMaLoaiDvu.IsPrimaryKey = false;
				colvarHisMaLoaiDvu.IsForeignKey = false;
				colvarHisMaLoaiDvu.IsReadOnly = false;
				colvarHisMaLoaiDvu.DefaultSetting = @"";
				colvarHisMaLoaiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHisMaLoaiDvu);
				
				TableSchema.TableColumn colvarHisTenLoaiDvu = new TableSchema.TableColumn(schema);
				colvarHisTenLoaiDvu.ColumnName = "HIS_TEN_LOAI_DVU";
				colvarHisTenLoaiDvu.DataType = DbType.String;
				colvarHisTenLoaiDvu.MaxLength = 50;
				colvarHisTenLoaiDvu.AutoIncrement = false;
				colvarHisTenLoaiDvu.IsNullable = true;
				colvarHisTenLoaiDvu.IsPrimaryKey = false;
				colvarHisTenLoaiDvu.IsForeignKey = false;
				colvarHisTenLoaiDvu.IsReadOnly = false;
				colvarHisTenLoaiDvu.DefaultSetting = @"";
				colvarHisTenLoaiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHisTenLoaiDvu);
				
				TableSchema.TableColumn colvarHisIdTenDvu = new TableSchema.TableColumn(schema);
				colvarHisIdTenDvu.ColumnName = "HIS_ID_TEN_DVU";
				colvarHisIdTenDvu.DataType = DbType.String;
				colvarHisIdTenDvu.MaxLength = 50;
				colvarHisIdTenDvu.AutoIncrement = false;
				colvarHisIdTenDvu.IsNullable = true;
				colvarHisIdTenDvu.IsPrimaryKey = false;
				colvarHisIdTenDvu.IsForeignKey = false;
				colvarHisIdTenDvu.IsReadOnly = false;
				colvarHisIdTenDvu.DefaultSetting = @"";
				colvarHisIdTenDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHisIdTenDvu);
				
				TableSchema.TableColumn colvarHisMaKieuDvu = new TableSchema.TableColumn(schema);
				colvarHisMaKieuDvu.ColumnName = "HIS_MA_KIEU_DVU";
				colvarHisMaKieuDvu.DataType = DbType.String;
				colvarHisMaKieuDvu.MaxLength = 50;
				colvarHisMaKieuDvu.AutoIncrement = false;
				colvarHisMaKieuDvu.IsNullable = true;
				colvarHisMaKieuDvu.IsPrimaryKey = false;
				colvarHisMaKieuDvu.IsForeignKey = false;
				colvarHisMaKieuDvu.IsReadOnly = false;
				colvarHisMaKieuDvu.DefaultSetting = @"";
				colvarHisMaKieuDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarHisMaKieuDvu);
				
				TableSchema.TableColumn colvarRisIdDvu = new TableSchema.TableColumn(schema);
				colvarRisIdDvu.ColumnName = "RIS_ID_DVU";
				colvarRisIdDvu.DataType = DbType.Int32;
				colvarRisIdDvu.MaxLength = 0;
				colvarRisIdDvu.AutoIncrement = false;
				colvarRisIdDvu.IsNullable = true;
				colvarRisIdDvu.IsPrimaryKey = false;
				colvarRisIdDvu.IsForeignKey = false;
				colvarRisIdDvu.IsReadOnly = false;
				colvarRisIdDvu.DefaultSetting = @"";
				colvarRisIdDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRisIdDvu);
				
				TableSchema.TableColumn colvarRisMaDvu = new TableSchema.TableColumn(schema);
				colvarRisMaDvu.ColumnName = "RIS_MA_DVU";
				colvarRisMaDvu.DataType = DbType.String;
				colvarRisMaDvu.MaxLength = 50;
				colvarRisMaDvu.AutoIncrement = false;
				colvarRisMaDvu.IsNullable = true;
				colvarRisMaDvu.IsPrimaryKey = false;
				colvarRisMaDvu.IsForeignKey = false;
				colvarRisMaDvu.IsReadOnly = false;
				colvarRisMaDvu.DefaultSetting = @"";
				colvarRisMaDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRisMaDvu);
				
				TableSchema.TableColumn colvarRisTenDvu = new TableSchema.TableColumn(schema);
				colvarRisTenDvu.ColumnName = "RIS_TEN_DVU";
				colvarRisTenDvu.DataType = DbType.String;
				colvarRisTenDvu.MaxLength = 50;
				colvarRisTenDvu.AutoIncrement = false;
				colvarRisTenDvu.IsNullable = true;
				colvarRisTenDvu.IsPrimaryKey = false;
				colvarRisTenDvu.IsForeignKey = false;
				colvarRisTenDvu.IsReadOnly = false;
				colvarRisTenDvu.DefaultSetting = @"";
				colvarRisTenDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRisTenDvu);
				
				TableSchema.TableColumn colvarRisIdLoaiDvu = new TableSchema.TableColumn(schema);
				colvarRisIdLoaiDvu.ColumnName = "RIS_ID_LOAI_DVU";
				colvarRisIdLoaiDvu.DataType = DbType.Int32;
				colvarRisIdLoaiDvu.MaxLength = 0;
				colvarRisIdLoaiDvu.AutoIncrement = false;
				colvarRisIdLoaiDvu.IsNullable = true;
				colvarRisIdLoaiDvu.IsPrimaryKey = false;
				colvarRisIdLoaiDvu.IsForeignKey = false;
				colvarRisIdLoaiDvu.IsReadOnly = false;
				colvarRisIdLoaiDvu.DefaultSetting = @"";
				colvarRisIdLoaiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRisIdLoaiDvu);
				
				TableSchema.TableColumn colvarRisMaLoaiDvu = new TableSchema.TableColumn(schema);
				colvarRisMaLoaiDvu.ColumnName = "RIS_MA_LOAI_DVU";
				colvarRisMaLoaiDvu.DataType = DbType.String;
				colvarRisMaLoaiDvu.MaxLength = 50;
				colvarRisMaLoaiDvu.AutoIncrement = false;
				colvarRisMaLoaiDvu.IsNullable = true;
				colvarRisMaLoaiDvu.IsPrimaryKey = false;
				colvarRisMaLoaiDvu.IsForeignKey = false;
				colvarRisMaLoaiDvu.IsReadOnly = false;
				colvarRisMaLoaiDvu.DefaultSetting = @"";
				colvarRisMaLoaiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRisMaLoaiDvu);
				
				TableSchema.TableColumn colvarRisTenLoaiDvu = new TableSchema.TableColumn(schema);
				colvarRisTenLoaiDvu.ColumnName = "RIS_TEN_LOAI_DVU";
				colvarRisTenLoaiDvu.DataType = DbType.String;
				colvarRisTenLoaiDvu.MaxLength = 50;
				colvarRisTenLoaiDvu.AutoIncrement = false;
				colvarRisTenLoaiDvu.IsNullable = true;
				colvarRisTenLoaiDvu.IsPrimaryKey = false;
				colvarRisTenLoaiDvu.IsForeignKey = false;
				colvarRisTenLoaiDvu.IsReadOnly = false;
				colvarRisTenLoaiDvu.DefaultSetting = @"";
				colvarRisTenLoaiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRisTenLoaiDvu);
				
				TableSchema.TableColumn colvarRisMaKieuDvu = new TableSchema.TableColumn(schema);
				colvarRisMaKieuDvu.ColumnName = "RIS_MA_KIEU_DVU";
				colvarRisMaKieuDvu.DataType = DbType.String;
				colvarRisMaKieuDvu.MaxLength = 50;
				colvarRisMaKieuDvu.AutoIncrement = false;
				colvarRisMaKieuDvu.IsNullable = true;
				colvarRisMaKieuDvu.IsPrimaryKey = false;
				colvarRisMaKieuDvu.IsForeignKey = false;
				colvarRisMaKieuDvu.IsReadOnly = false;
				colvarRisMaKieuDvu.DefaultSetting = @"";
				colvarRisMaKieuDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRisMaKieuDvu);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("KETNOI_MAPPING_DICHVU",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("HisIdDvu")]
		[Bindable(true)]
		public int? HisIdDvu 
		{
			get { return GetColumnValue<int?>(Columns.HisIdDvu); }
			set { SetColumnValue(Columns.HisIdDvu, value); }
		}
		  
		[XmlAttribute("HisMaDvu")]
		[Bindable(true)]
		public string HisMaDvu 
		{
			get { return GetColumnValue<string>(Columns.HisMaDvu); }
			set { SetColumnValue(Columns.HisMaDvu, value); }
		}
		  
		[XmlAttribute("HisTenDvu")]
		[Bindable(true)]
		public string HisTenDvu 
		{
			get { return GetColumnValue<string>(Columns.HisTenDvu); }
			set { SetColumnValue(Columns.HisTenDvu, value); }
		}
		  
		[XmlAttribute("HisIdLoaiDvu")]
		[Bindable(true)]
		public int? HisIdLoaiDvu 
		{
			get { return GetColumnValue<int?>(Columns.HisIdLoaiDvu); }
			set { SetColumnValue(Columns.HisIdLoaiDvu, value); }
		}
		  
		[XmlAttribute("HisMaLoaiDvu")]
		[Bindable(true)]
		public string HisMaLoaiDvu 
		{
			get { return GetColumnValue<string>(Columns.HisMaLoaiDvu); }
			set { SetColumnValue(Columns.HisMaLoaiDvu, value); }
		}
		  
		[XmlAttribute("HisTenLoaiDvu")]
		[Bindable(true)]
		public string HisTenLoaiDvu 
		{
			get { return GetColumnValue<string>(Columns.HisTenLoaiDvu); }
			set { SetColumnValue(Columns.HisTenLoaiDvu, value); }
		}
		  
		[XmlAttribute("HisIdTenDvu")]
		[Bindable(true)]
		public string HisIdTenDvu 
		{
			get { return GetColumnValue<string>(Columns.HisIdTenDvu); }
			set { SetColumnValue(Columns.HisIdTenDvu, value); }
		}
		  
		[XmlAttribute("HisMaKieuDvu")]
		[Bindable(true)]
		public string HisMaKieuDvu 
		{
			get { return GetColumnValue<string>(Columns.HisMaKieuDvu); }
			set { SetColumnValue(Columns.HisMaKieuDvu, value); }
		}
		  
		[XmlAttribute("RisIdDvu")]
		[Bindable(true)]
		public int? RisIdDvu 
		{
			get { return GetColumnValue<int?>(Columns.RisIdDvu); }
			set { SetColumnValue(Columns.RisIdDvu, value); }
		}
		  
		[XmlAttribute("RisMaDvu")]
		[Bindable(true)]
		public string RisMaDvu 
		{
			get { return GetColumnValue<string>(Columns.RisMaDvu); }
			set { SetColumnValue(Columns.RisMaDvu, value); }
		}
		  
		[XmlAttribute("RisTenDvu")]
		[Bindable(true)]
		public string RisTenDvu 
		{
			get { return GetColumnValue<string>(Columns.RisTenDvu); }
			set { SetColumnValue(Columns.RisTenDvu, value); }
		}
		  
		[XmlAttribute("RisIdLoaiDvu")]
		[Bindable(true)]
		public int? RisIdLoaiDvu 
		{
			get { return GetColumnValue<int?>(Columns.RisIdLoaiDvu); }
			set { SetColumnValue(Columns.RisIdLoaiDvu, value); }
		}
		  
		[XmlAttribute("RisMaLoaiDvu")]
		[Bindable(true)]
		public string RisMaLoaiDvu 
		{
			get { return GetColumnValue<string>(Columns.RisMaLoaiDvu); }
			set { SetColumnValue(Columns.RisMaLoaiDvu, value); }
		}
		  
		[XmlAttribute("RisTenLoaiDvu")]
		[Bindable(true)]
		public string RisTenLoaiDvu 
		{
			get { return GetColumnValue<string>(Columns.RisTenLoaiDvu); }
			set { SetColumnValue(Columns.RisTenLoaiDvu, value); }
		}
		  
		[XmlAttribute("RisMaKieuDvu")]
		[Bindable(true)]
		public string RisMaKieuDvu 
		{
			get { return GetColumnValue<string>(Columns.RisMaKieuDvu); }
			set { SetColumnValue(Columns.RisMaKieuDvu, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int? varHisIdDvu,string varHisMaDvu,string varHisTenDvu,int? varHisIdLoaiDvu,string varHisMaLoaiDvu,string varHisTenLoaiDvu,string varHisIdTenDvu,string varHisMaKieuDvu,int? varRisIdDvu,string varRisMaDvu,string varRisTenDvu,int? varRisIdLoaiDvu,string varRisMaLoaiDvu,string varRisTenLoaiDvu,string varRisMaKieuDvu)
		{
			KetnoiMappingDichvu item = new KetnoiMappingDichvu();
			
			item.HisIdDvu = varHisIdDvu;
			
			item.HisMaDvu = varHisMaDvu;
			
			item.HisTenDvu = varHisTenDvu;
			
			item.HisIdLoaiDvu = varHisIdLoaiDvu;
			
			item.HisMaLoaiDvu = varHisMaLoaiDvu;
			
			item.HisTenLoaiDvu = varHisTenLoaiDvu;
			
			item.HisIdTenDvu = varHisIdTenDvu;
			
			item.HisMaKieuDvu = varHisMaKieuDvu;
			
			item.RisIdDvu = varRisIdDvu;
			
			item.RisMaDvu = varRisMaDvu;
			
			item.RisTenDvu = varRisTenDvu;
			
			item.RisIdLoaiDvu = varRisIdLoaiDvu;
			
			item.RisMaLoaiDvu = varRisMaLoaiDvu;
			
			item.RisTenLoaiDvu = varRisTenLoaiDvu;
			
			item.RisMaKieuDvu = varRisMaKieuDvu;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,int? varHisIdDvu,string varHisMaDvu,string varHisTenDvu,int? varHisIdLoaiDvu,string varHisMaLoaiDvu,string varHisTenLoaiDvu,string varHisIdTenDvu,string varHisMaKieuDvu,int? varRisIdDvu,string varRisMaDvu,string varRisTenDvu,int? varRisIdLoaiDvu,string varRisMaLoaiDvu,string varRisTenLoaiDvu,string varRisMaKieuDvu)
		{
			KetnoiMappingDichvu item = new KetnoiMappingDichvu();
			
				item.Id = varId;
			
				item.HisIdDvu = varHisIdDvu;
			
				item.HisMaDvu = varHisMaDvu;
			
				item.HisTenDvu = varHisTenDvu;
			
				item.HisIdLoaiDvu = varHisIdLoaiDvu;
			
				item.HisMaLoaiDvu = varHisMaLoaiDvu;
			
				item.HisTenLoaiDvu = varHisTenLoaiDvu;
			
				item.HisIdTenDvu = varHisIdTenDvu;
			
				item.HisMaKieuDvu = varHisMaKieuDvu;
			
				item.RisIdDvu = varRisIdDvu;
			
				item.RisMaDvu = varRisMaDvu;
			
				item.RisTenDvu = varRisTenDvu;
			
				item.RisIdLoaiDvu = varRisIdLoaiDvu;
			
				item.RisMaLoaiDvu = varRisMaLoaiDvu;
			
				item.RisTenLoaiDvu = varRisTenLoaiDvu;
			
				item.RisMaKieuDvu = varRisMaKieuDvu;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn HisIdDvuColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn HisMaDvuColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn HisTenDvuColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn HisIdLoaiDvuColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn HisMaLoaiDvuColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn HisTenLoaiDvuColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn HisIdTenDvuColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn HisMaKieuDvuColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn RisIdDvuColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn RisMaDvuColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn RisTenDvuColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn RisIdLoaiDvuColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn RisMaLoaiDvuColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn RisTenLoaiDvuColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn RisMaKieuDvuColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"ID";
			 public static string HisIdDvu = @"HIS_ID_DVU";
			 public static string HisMaDvu = @"HIS_MA_DVU";
			 public static string HisTenDvu = @"HIS_TEN_DVU";
			 public static string HisIdLoaiDvu = @"HIS_ID_LOAI_DVU";
			 public static string HisMaLoaiDvu = @"HIS_MA_LOAI_DVU";
			 public static string HisTenLoaiDvu = @"HIS_TEN_LOAI_DVU";
			 public static string HisIdTenDvu = @"HIS_ID_TEN_DVU";
			 public static string HisMaKieuDvu = @"HIS_MA_KIEU_DVU";
			 public static string RisIdDvu = @"RIS_ID_DVU";
			 public static string RisMaDvu = @"RIS_MA_DVU";
			 public static string RisTenDvu = @"RIS_TEN_DVU";
			 public static string RisIdLoaiDvu = @"RIS_ID_LOAI_DVU";
			 public static string RisMaLoaiDvu = @"RIS_MA_LOAI_DVU";
			 public static string RisTenLoaiDvu = @"RIS_TEN_LOAI_DVU";
			 public static string RisMaKieuDvu = @"RIS_MA_KIEU_DVU";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
