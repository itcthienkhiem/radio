using SubSonic;

// <auto-generated />

namespace VIETBAIT.ImageServer.Models
{

    #region Tables Struct

    public struct Tables
    {
        public static readonly string Alert = @"Alert";

        public static readonly string AlertCategoryEnum = @"AlertCategoryEnum";

        public static readonly string AlertLevelEnum = @"AlertLevelEnum";

        public static readonly string ApplicationLog = @"ApplicationLog";

        public static readonly string ArchiveQueue = @"ArchiveQueue";

        public static readonly string ArchiveQueueStatusEnum = @"ArchiveQueueStatusEnum";

        public static readonly string ArchiveStudyStorage = @"ArchiveStudyStorage";

        public static readonly string ArchiveTypeEnum = @"ArchiveTypeEnum";

        public static readonly string CannedText = @"CannedText";

        public static readonly string DatabaseVersion = @"DatabaseVersion_";

        public static readonly string Device = @"Device";

        public static readonly string DevicePreferredTransferSyntax = @"DevicePreferredTransferSyntax";

        public static readonly string DeviceTypeEnum = @"DeviceTypeEnum";

        public static readonly string DuplicateSopPolicyEnum = @"DuplicateSopPolicyEnum";

        public static readonly string Filesystem = @"Filesystem";

        public static readonly string FilesystemQueue = @"FilesystemQueue";

        public static readonly string FilesystemQueueTypeEnum = @"FilesystemQueueTypeEnum";

        public static readonly string FilesystemStudyStorage = @"FilesystemStudyStorage";

        public static readonly string FilesystemTierEnum = @"FilesystemTierEnum";

        public static readonly string PartitionArchive = @"PartitionArchive";

        public static readonly string PartitionSopClass = @"PartitionSopClass";

        public static readonly string PartitionTransferSyntax = @"PartitionTransferSyntax";

        public static readonly string Patient = @"Patient";

        public static readonly string QueueStudyStateEnum = @"QueueStudyStateEnum";

        public static readonly string RequestAttribute = @"RequestAttributes";

        public static readonly string RestoreQueue = @"RestoreQueue";

        public static readonly string RestoreQueueStatusEnum = @"RestoreQueueStatusEnum";

        public static readonly string Series = @"Series";

        public static readonly string ServerPartition = @"ServerPartition";

        public static readonly string ServerRule = @"ServerRule";

        public static readonly string ServerRuleApplyTimeEnum = @"ServerRuleApplyTimeEnum";

        public static readonly string ServerRuleTypeEnum = @"ServerRuleTypeEnum";

        public static readonly string ServerSopClass = @"ServerSopClass";

        public static readonly string ServerTransferSyntax = @"ServerTransferSyntax";

        public static readonly string ServiceLock = @"ServiceLock";

        public static readonly string ServiceLockTypeEnum = @"ServiceLockTypeEnum";

        public static readonly string Study = @"Study";

        public static readonly string StudyDeleteRecord = @"StudyDeleteRecord";

        public static readonly string StudyHistory = @"StudyHistory";

        public static readonly string StudyHistoryTypeEnum = @"StudyHistoryTypeEnum";

        public static readonly string StudyIntegrityQueue = @"StudyIntegrityQueue";

        public static readonly string StudyIntegrityQueueUid = @"StudyIntegrityQueueUid";

        public static readonly string StudyIntegrityReasonEnum = @"StudyIntegrityReasonEnum";

        public static readonly string StudyStatusEnum = @"StudyStatusEnum";

        public static readonly string StudyStorage = @"StudyStorage";

        public static readonly string WorkQueue = @"WorkQueue";

        public static readonly string WorkQueuePriorityEnum = @"WorkQueuePriorityEnum";

        public static readonly string WorkQueueStatusEnum = @"WorkQueueStatusEnum";

        public static readonly string WorkQueueTypeEnum = @"WorkQueueTypeEnum";

        public static readonly string WorkQueueTypeProperty = @"WorkQueueTypeProperties";

        public static readonly string WorkQueueUid = @"WorkQueueUid";
    }

    #endregion

    #region Schemas

    public class Schemas
    {
        public static TableSchema.Table Alert
        {
            get { return DataService.GetSchema("Alert", "ORM"); }
        }

        public static TableSchema.Table AlertCategoryEnum
        {
            get { return DataService.GetSchema("AlertCategoryEnum", "ORM"); }
        }

        public static TableSchema.Table AlertLevelEnum
        {
            get { return DataService.GetSchema("AlertLevelEnum", "ORM"); }
        }

        public static TableSchema.Table ApplicationLog
        {
            get { return DataService.GetSchema("ApplicationLog", "ORM"); }
        }

        public static TableSchema.Table ArchiveQueue
        {
            get { return DataService.GetSchema("ArchiveQueue", "ORM"); }
        }

        public static TableSchema.Table ArchiveQueueStatusEnum
        {
            get { return DataService.GetSchema("ArchiveQueueStatusEnum", "ORM"); }
        }

        public static TableSchema.Table ArchiveStudyStorage
        {
            get { return DataService.GetSchema("ArchiveStudyStorage", "ORM"); }
        }

        public static TableSchema.Table ArchiveTypeEnum
        {
            get { return DataService.GetSchema("ArchiveTypeEnum", "ORM"); }
        }

        public static TableSchema.Table CannedText
        {
            get { return DataService.GetSchema("CannedText", "ORM"); }
        }

        public static TableSchema.Table DatabaseVersion
        {
            get { return DataService.GetSchema("DatabaseVersion_", "ORM"); }
        }

        public static TableSchema.Table Device
        {
            get { return DataService.GetSchema("Device", "ORM"); }
        }

        public static TableSchema.Table DevicePreferredTransferSyntax
        {
            get { return DataService.GetSchema("DevicePreferredTransferSyntax", "ORM"); }
        }

        public static TableSchema.Table DeviceTypeEnum
        {
            get { return DataService.GetSchema("DeviceTypeEnum", "ORM"); }
        }

        public static TableSchema.Table DuplicateSopPolicyEnum
        {
            get { return DataService.GetSchema("DuplicateSopPolicyEnum", "ORM"); }
        }

        public static TableSchema.Table Filesystem
        {
            get { return DataService.GetSchema("Filesystem", "ORM"); }
        }

        public static TableSchema.Table FilesystemQueue
        {
            get { return DataService.GetSchema("FilesystemQueue", "ORM"); }
        }

        public static TableSchema.Table FilesystemQueueTypeEnum
        {
            get { return DataService.GetSchema("FilesystemQueueTypeEnum", "ORM"); }
        }

        public static TableSchema.Table FilesystemStudyStorage
        {
            get { return DataService.GetSchema("FilesystemStudyStorage", "ORM"); }
        }

        public static TableSchema.Table FilesystemTierEnum
        {
            get { return DataService.GetSchema("FilesystemTierEnum", "ORM"); }
        }

        public static TableSchema.Table PartitionArchive
        {
            get { return DataService.GetSchema("PartitionArchive", "ORM"); }
        }

        public static TableSchema.Table PartitionSopClass
        {
            get { return DataService.GetSchema("PartitionSopClass", "ORM"); }
        }

        public static TableSchema.Table PartitionTransferSyntax
        {
            get { return DataService.GetSchema("PartitionTransferSyntax", "ORM"); }
        }

        public static TableSchema.Table Patient
        {
            get { return DataService.GetSchema("Patient", "ORM"); }
        }

        public static TableSchema.Table QueueStudyStateEnum
        {
            get { return DataService.GetSchema("QueueStudyStateEnum", "ORM"); }
        }

        public static TableSchema.Table RequestAttribute
        {
            get { return DataService.GetSchema("RequestAttributes", "ORM"); }
        }

        public static TableSchema.Table RestoreQueue
        {
            get { return DataService.GetSchema("RestoreQueue", "ORM"); }
        }

        public static TableSchema.Table RestoreQueueStatusEnum
        {
            get { return DataService.GetSchema("RestoreQueueStatusEnum", "ORM"); }
        }

        public static TableSchema.Table Series
        {
            get { return DataService.GetSchema("Series", "ORM"); }
        }

        public static TableSchema.Table ServerPartition
        {
            get { return DataService.GetSchema("ServerPartition", "ORM"); }
        }

        public static TableSchema.Table ServerRule
        {
            get { return DataService.GetSchema("ServerRule", "ORM"); }
        }

        public static TableSchema.Table ServerRuleApplyTimeEnum
        {
            get { return DataService.GetSchema("ServerRuleApplyTimeEnum", "ORM"); }
        }

        public static TableSchema.Table ServerRuleTypeEnum
        {
            get { return DataService.GetSchema("ServerRuleTypeEnum", "ORM"); }
        }

        public static TableSchema.Table ServerSopClass
        {
            get { return DataService.GetSchema("ServerSopClass", "ORM"); }
        }

        public static TableSchema.Table ServerTransferSyntax
        {
            get { return DataService.GetSchema("ServerTransferSyntax", "ORM"); }
        }

        public static TableSchema.Table ServiceLock
        {
            get { return DataService.GetSchema("ServiceLock", "ORM"); }
        }

        public static TableSchema.Table ServiceLockTypeEnum
        {
            get { return DataService.GetSchema("ServiceLockTypeEnum", "ORM"); }
        }

        public static TableSchema.Table Study
        {
            get { return DataService.GetSchema("Study", "ORM"); }
        }

        public static TableSchema.Table StudyDeleteRecord
        {
            get { return DataService.GetSchema("StudyDeleteRecord", "ORM"); }
        }

        public static TableSchema.Table StudyHistory
        {
            get { return DataService.GetSchema("StudyHistory", "ORM"); }
        }

        public static TableSchema.Table StudyHistoryTypeEnum
        {
            get { return DataService.GetSchema("StudyHistoryTypeEnum", "ORM"); }
        }

        public static TableSchema.Table StudyIntegrityQueue
        {
            get { return DataService.GetSchema("StudyIntegrityQueue", "ORM"); }
        }

        public static TableSchema.Table StudyIntegrityQueueUid
        {
            get { return DataService.GetSchema("StudyIntegrityQueueUid", "ORM"); }
        }

        public static TableSchema.Table StudyIntegrityReasonEnum
        {
            get { return DataService.GetSchema("StudyIntegrityReasonEnum", "ORM"); }
        }

        public static TableSchema.Table StudyStatusEnum
        {
            get { return DataService.GetSchema("StudyStatusEnum", "ORM"); }
        }

        public static TableSchema.Table StudyStorage
        {
            get { return DataService.GetSchema("StudyStorage", "ORM"); }
        }

        public static TableSchema.Table WorkQueue
        {
            get { return DataService.GetSchema("WorkQueue", "ORM"); }
        }

        public static TableSchema.Table WorkQueuePriorityEnum
        {
            get { return DataService.GetSchema("WorkQueuePriorityEnum", "ORM"); }
        }

        public static TableSchema.Table WorkQueueStatusEnum
        {
            get { return DataService.GetSchema("WorkQueueStatusEnum", "ORM"); }
        }

        public static TableSchema.Table WorkQueueTypeEnum
        {
            get { return DataService.GetSchema("WorkQueueTypeEnum", "ORM"); }
        }

        public static TableSchema.Table WorkQueueTypeProperty
        {
            get { return DataService.GetSchema("WorkQueueTypeProperties", "ORM"); }
        }

        public static TableSchema.Table WorkQueueUid
        {
            get { return DataService.GetSchema("WorkQueueUid", "ORM"); }
        }
    }

    #endregion

    #region View Struct

    public struct Views
    {
    }

    #endregion

    #region Query Factories

    public static class DB
    {
        public static DataProvider _provider = DataService.Providers["ORM"];
        private static ISubSonicRepository _repository;

        public static ISubSonicRepository Repository
        {
            get
            {
                if (_repository == null)
                    return new SubSonicRepository(_provider);
                return _repository;
            }
            set { _repository = value; }
        }

        public static Select SelectAllColumnsFrom<T>() where T : RecordBase<T>, new()
        {
            return Repository.SelectAllColumnsFrom<T>();
        }

        public static Select Select()
        {
            return Repository.Select();
        }

        public static Select Select(params string[] columns)
        {
            return Repository.Select(columns);
        }

        public static Select Select(params Aggregate[] aggregates)
        {
            return Repository.Select(aggregates);
        }

        public static Update Update<T>() where T : RecordBase<T>, new()
        {
            return Repository.Update<T>();
        }

        public static Insert Insert()
        {
            return Repository.Insert();
        }

        public static Delete Delete()
        {
            return Repository.Delete();
        }

        public static InlineQuery Query()
        {
            return Repository.Query();
        }
    }

    #endregion
}

#region Databases

public struct Databases
{
    public static readonly string ORM = @"ORM";
}

#endregion