using System;
using System.ComponentModel;
using System.Threading;
using System.Web;
using SubSonic;

// <auto-generated />

namespace VIETBAIT.ImageServer.Models
{
    /// <summary>
    /// Controller class for StudyDeleteRecord
    /// </summary>
    [DataObject]
    public class StudyDeleteRecordController
    {
        // Preload our schema..
        private StudyDeleteRecord thisSchemaLoad = new StudyDeleteRecord();
        private string userName = String.Empty;

        protected string UserName
        {
            get
            {
                if (userName.Length == 0)
                {
                    if (HttpContext.Current != null)
                    {
                        userName = HttpContext.Current.User.Identity.Name;
                    }
                    else
                    {
                        userName = Thread.CurrentPrincipal.Identity.Name;
                    }
                }
                return userName;
            }
        }

        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public StudyDeleteRecordCollection FetchAll()
        {
            var coll = new StudyDeleteRecordCollection();
            var qry = new Query(StudyDeleteRecord.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public StudyDeleteRecordCollection FetchByID(object Guid)
        {
            StudyDeleteRecordCollection coll = new StudyDeleteRecordCollection().Where("GUID", Guid).Load();
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public StudyDeleteRecordCollection FetchByQuery(Query qry)
        {
            var coll = new StudyDeleteRecordCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }

        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Guid)
        {
            return (StudyDeleteRecord.Delete(Guid) == 1);
        }

        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Guid)
        {
            return (StudyDeleteRecord.Destroy(Guid) == 1);
        }


        /// <summary>
        /// Inserts a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public void Insert(Guid Guid, DateTime Timestamp, string Reason, string ServerPartitionAE, Guid FilesystemGUID,
                           string BackupPath, string StudyInstanceUid, string AccessionNumber, string PatientId,
                           string PatientsName, string StudyId, string StudyDescription, string StudyDate,
                           string StudyTime, string ArchiveInfo, string ExtendedInfo)
        {
            var item = new StudyDeleteRecord();

            item.Guid = Guid;

            item.Timestamp = Timestamp;

            item.Reason = Reason;

            item.ServerPartitionAE = ServerPartitionAE;

            item.FilesystemGUID = FilesystemGUID;

            item.BackupPath = BackupPath;

            item.StudyInstanceUid = StudyInstanceUid;

            item.AccessionNumber = AccessionNumber;

            item.PatientId = PatientId;

            item.PatientsName = PatientsName;

            item.StudyId = StudyId;

            item.StudyDescription = StudyDescription;

            item.StudyDate = StudyDate;

            item.StudyTime = StudyTime;

            item.ArchiveInfo = ArchiveInfo;

            item.ExtendedInfo = ExtendedInfo;


            item.Save(UserName);
        }

        /// <summary>
        /// Updates a record, can be used with the Object Data Source
        /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public void Update(Guid Guid, DateTime Timestamp, string Reason, string ServerPartitionAE, Guid FilesystemGUID,
                           string BackupPath, string StudyInstanceUid, string AccessionNumber, string PatientId,
                           string PatientsName, string StudyId, string StudyDescription, string StudyDate,
                           string StudyTime, string ArchiveInfo, string ExtendedInfo)
        {
            var item = new StudyDeleteRecord();
            item.MarkOld();
            item.IsLoaded = true;

            item.Guid = Guid;

            item.Timestamp = Timestamp;

            item.Reason = Reason;

            item.ServerPartitionAE = ServerPartitionAE;

            item.FilesystemGUID = FilesystemGUID;

            item.BackupPath = BackupPath;

            item.StudyInstanceUid = StudyInstanceUid;

            item.AccessionNumber = AccessionNumber;

            item.PatientId = PatientId;

            item.PatientsName = PatientsName;

            item.StudyId = StudyId;

            item.StudyDescription = StudyDescription;

            item.StudyDate = StudyDate;

            item.StudyTime = StudyTime;

            item.ArchiveInfo = ArchiveInfo;

            item.ExtendedInfo = ExtendedInfo;

            item.Save(UserName);
        }
    }
}