using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.RISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the DVungKsat class.
	/// </summary>
    [Serializable]
	public partial class DVungKsatCollection : ActiveList<DVungKsat, DVungKsatCollection>
	{	   
		public DVungKsatCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DVungKsatCollection</returns>
		public DVungKsatCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DVungKsat o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the D_VUNG_KSAT table.
	/// </summary>
	[Serializable]
	public partial class DVungKsat : ActiveRecord<DVungKsat>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DVungKsat()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DVungKsat(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DVungKsat(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DVungKsat(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("D_VUNG_KSAT", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdVungKs = new TableSchema.TableColumn(schema);
				colvarIdVungKs.ColumnName = "ID_VUNG_KS";
				colvarIdVungKs.DataType = DbType.Int32;
				colvarIdVungKs.MaxLength = 0;
				colvarIdVungKs.AutoIncrement = true;
				colvarIdVungKs.IsNullable = false;
				colvarIdVungKs.IsPrimaryKey = true;
				colvarIdVungKs.IsForeignKey = false;
				colvarIdVungKs.IsReadOnly = false;
				colvarIdVungKs.DefaultSetting = @"";
				colvarIdVungKs.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdVungKs);
				
				TableSchema.TableColumn colvarTenVungKs = new TableSchema.TableColumn(schema);
				colvarTenVungKs.ColumnName = "TEN_VUNG_KS";
				colvarTenVungKs.DataType = DbType.String;
				colvarTenVungKs.MaxLength = 200;
				colvarTenVungKs.AutoIncrement = false;
				colvarTenVungKs.IsNullable = true;
				colvarTenVungKs.IsPrimaryKey = false;
				colvarTenVungKs.IsForeignKey = false;
				colvarTenVungKs.IsReadOnly = false;
				colvarTenVungKs.DefaultSetting = @"";
				colvarTenVungKs.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenVungKs);
				
				TableSchema.TableColumn colvarMoTa = new TableSchema.TableColumn(schema);
				colvarMoTa.ColumnName = "MO_TA";
				colvarMoTa.DataType = DbType.String;
				colvarMoTa.MaxLength = 1073741823;
				colvarMoTa.AutoIncrement = false;
				colvarMoTa.IsNullable = true;
				colvarMoTa.IsPrimaryKey = false;
				colvarMoTa.IsForeignKey = false;
				colvarMoTa.IsReadOnly = false;
				colvarMoTa.DefaultSetting = @"";
				colvarMoTa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMoTa);
				
				TableSchema.TableColumn colvarKetLuan = new TableSchema.TableColumn(schema);
				colvarKetLuan.ColumnName = "KET_LUAN";
				colvarKetLuan.DataType = DbType.String;
				colvarKetLuan.MaxLength = 200;
				colvarKetLuan.AutoIncrement = false;
				colvarKetLuan.IsNullable = true;
				colvarKetLuan.IsPrimaryKey = false;
				colvarKetLuan.IsForeignKey = false;
				colvarKetLuan.IsReadOnly = false;
				colvarKetLuan.DefaultSetting = @"";
				colvarKetLuan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKetLuan);
				
				TableSchema.TableColumn colvarDeNghi = new TableSchema.TableColumn(schema);
				colvarDeNghi.ColumnName = "DE_NGHI";
				colvarDeNghi.DataType = DbType.String;
				colvarDeNghi.MaxLength = 200;
				colvarDeNghi.AutoIncrement = false;
				colvarDeNghi.IsNullable = true;
				colvarDeNghi.IsPrimaryKey = false;
				colvarDeNghi.IsForeignKey = false;
				colvarDeNghi.IsReadOnly = false;
				colvarDeNghi.DefaultSetting = @"";
				colvarDeNghi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDeNghi);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = true;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = true;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarKyThuat = new TableSchema.TableColumn(schema);
				colvarKyThuat.ColumnName = "KY_THUAT";
				colvarKyThuat.DataType = DbType.String;
				colvarKyThuat.MaxLength = 2000;
				colvarKyThuat.AutoIncrement = false;
				colvarKyThuat.IsNullable = true;
				colvarKyThuat.IsPrimaryKey = false;
				colvarKyThuat.IsForeignKey = false;
				colvarKyThuat.IsReadOnly = false;
				colvarKyThuat.DefaultSetting = @"";
				colvarKyThuat.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKyThuat);
				
				TableSchema.TableColumn colvarKieuDvu = new TableSchema.TableColumn(schema);
				colvarKieuDvu.ColumnName = "KIEU_DVU";
				colvarKieuDvu.DataType = DbType.AnsiString;
				colvarKieuDvu.MaxLength = 50;
				colvarKieuDvu.AutoIncrement = false;
				colvarKieuDvu.IsNullable = true;
				colvarKieuDvu.IsPrimaryKey = false;
				colvarKieuDvu.IsForeignKey = false;
				colvarKieuDvu.IsReadOnly = false;
				colvarKieuDvu.DefaultSetting = @"";
				colvarKieuDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarKieuDvu);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("D_VUNG_KSAT",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdVungKs")]
		[Bindable(true)]
		public int IdVungKs 
		{
			get { return GetColumnValue<int>(Columns.IdVungKs); }
			set { SetColumnValue(Columns.IdVungKs, value); }
		}
		  
		[XmlAttribute("TenVungKs")]
		[Bindable(true)]
		public string TenVungKs 
		{
			get { return GetColumnValue<string>(Columns.TenVungKs); }
			set { SetColumnValue(Columns.TenVungKs, value); }
		}
		  
		[XmlAttribute("MoTa")]
		[Bindable(true)]
		public string MoTa 
		{
			get { return GetColumnValue<string>(Columns.MoTa); }
			set { SetColumnValue(Columns.MoTa, value); }
		}
		  
		[XmlAttribute("KetLuan")]
		[Bindable(true)]
		public string KetLuan 
		{
			get { return GetColumnValue<string>(Columns.KetLuan); }
			set { SetColumnValue(Columns.KetLuan, value); }
		}
		  
		[XmlAttribute("DeNghi")]
		[Bindable(true)]
		public string DeNghi 
		{
			get { return GetColumnValue<string>(Columns.DeNghi); }
			set { SetColumnValue(Columns.DeNghi, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime? NgayTao 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("KyThuat")]
		[Bindable(true)]
		public string KyThuat 
		{
			get { return GetColumnValue<string>(Columns.KyThuat); }
			set { SetColumnValue(Columns.KyThuat, value); }
		}
		  
		[XmlAttribute("KieuDvu")]
		[Bindable(true)]
		public string KieuDvu 
		{
			get { return GetColumnValue<string>(Columns.KieuDvu); }
			set { SetColumnValue(Columns.KieuDvu, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varTenVungKs,string varMoTa,string varKetLuan,string varDeNghi,string varNguoiTao,DateTime? varNgayTao,string varKyThuat,string varKieuDvu,DateTime? varNgaySua,string varNguoiSua)
		{
			DVungKsat item = new DVungKsat();
			
			item.TenVungKs = varTenVungKs;
			
			item.MoTa = varMoTa;
			
			item.KetLuan = varKetLuan;
			
			item.DeNghi = varDeNghi;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgayTao = varNgayTao;
			
			item.KyThuat = varKyThuat;
			
			item.KieuDvu = varKieuDvu;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdVungKs,string varTenVungKs,string varMoTa,string varKetLuan,string varDeNghi,string varNguoiTao,DateTime? varNgayTao,string varKyThuat,string varKieuDvu,DateTime? varNgaySua,string varNguoiSua)
		{
			DVungKsat item = new DVungKsat();
			
				item.IdVungKs = varIdVungKs;
			
				item.TenVungKs = varTenVungKs;
			
				item.MoTa = varMoTa;
			
				item.KetLuan = varKetLuan;
			
				item.DeNghi = varDeNghi;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgayTao = varNgayTao;
			
				item.KyThuat = varKyThuat;
			
				item.KieuDvu = varKieuDvu;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdVungKsColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn TenVungKsColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn MoTaColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn KetLuanColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn DeNghiColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn KyThuatColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn KieuDvuColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdVungKs = @"ID_VUNG_KS";
			 public static string TenVungKs = @"TEN_VUNG_KS";
			 public static string MoTa = @"MO_TA";
			 public static string KetLuan = @"KET_LUAN";
			 public static string DeNghi = @"DE_NGHI";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string KyThuat = @"KY_THUAT";
			 public static string KieuDvu = @"KIEU_DVU";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string NguoiSua = @"NGUOI_SUA";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
