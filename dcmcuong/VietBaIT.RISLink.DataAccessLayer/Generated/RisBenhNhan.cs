using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.RISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the RisBenhNhan class.
	/// </summary>
    [Serializable]
	public partial class RisBenhNhanCollection : ActiveList<RisBenhNhan, RisBenhNhanCollection>
	{	   
		public RisBenhNhanCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>RisBenhNhanCollection</returns>
		public RisBenhNhanCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                RisBenhNhan o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the RIS_BENH_NHAN table.
	/// </summary>
	[Serializable]
	public partial class RisBenhNhan : ActiveRecord<RisBenhNhan>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public RisBenhNhan()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public RisBenhNhan(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public RisBenhNhan(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public RisBenhNhan(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("RIS_BENH_NHAN", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdBnhan = new TableSchema.TableColumn(schema);
				colvarIdBnhan.ColumnName = "ID_BNHAN";
				colvarIdBnhan.DataType = DbType.Int32;
				colvarIdBnhan.MaxLength = 0;
				colvarIdBnhan.AutoIncrement = true;
				colvarIdBnhan.IsNullable = false;
				colvarIdBnhan.IsPrimaryKey = true;
				colvarIdBnhan.IsForeignKey = false;
				colvarIdBnhan.IsReadOnly = false;
				colvarIdBnhan.DefaultSetting = @"";
				colvarIdBnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdBnhan);
				
				TableSchema.TableColumn colvarPid = new TableSchema.TableColumn(schema);
				colvarPid.ColumnName = "PID";
				colvarPid.DataType = DbType.AnsiString;
				colvarPid.MaxLength = 50;
				colvarPid.AutoIncrement = false;
				colvarPid.IsNullable = true;
				colvarPid.IsPrimaryKey = false;
				colvarPid.IsForeignKey = false;
				colvarPid.IsReadOnly = false;
				colvarPid.DefaultSetting = @"";
				colvarPid.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPid);
				
				TableSchema.TableColumn colvarTenBnhan = new TableSchema.TableColumn(schema);
				colvarTenBnhan.ColumnName = "TEN_BNHAN";
				colvarTenBnhan.DataType = DbType.String;
				colvarTenBnhan.MaxLength = 255;
				colvarTenBnhan.AutoIncrement = false;
				colvarTenBnhan.IsNullable = false;
				colvarTenBnhan.IsPrimaryKey = false;
				colvarTenBnhan.IsForeignKey = false;
				colvarTenBnhan.IsReadOnly = false;
				colvarTenBnhan.DefaultSetting = @"";
				colvarTenBnhan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenBnhan);
				
				TableSchema.TableColumn colvarTenBnhanKdau = new TableSchema.TableColumn(schema);
				colvarTenBnhanKdau.ColumnName = "TEN_BNHAN_KDAU";
				colvarTenBnhanKdau.DataType = DbType.String;
				colvarTenBnhanKdau.MaxLength = 255;
				colvarTenBnhanKdau.AutoIncrement = false;
				colvarTenBnhanKdau.IsNullable = true;
				colvarTenBnhanKdau.IsPrimaryKey = false;
				colvarTenBnhanKdau.IsForeignKey = false;
				colvarTenBnhanKdau.IsReadOnly = false;
				colvarTenBnhanKdau.DefaultSetting = @"";
				colvarTenBnhanKdau.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenBnhanKdau);
				
				TableSchema.TableColumn colvarGtinh = new TableSchema.TableColumn(schema);
				colvarGtinh.ColumnName = "GTINH";
				colvarGtinh.DataType = DbType.AnsiString;
				colvarGtinh.MaxLength = 5;
				colvarGtinh.AutoIncrement = false;
				colvarGtinh.IsNullable = false;
				colvarGtinh.IsPrimaryKey = false;
				colvarGtinh.IsForeignKey = false;
				colvarGtinh.IsReadOnly = false;
				colvarGtinh.DefaultSetting = @"";
				colvarGtinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarGtinh);
				
				TableSchema.TableColumn colvarNgaySinh = new TableSchema.TableColumn(schema);
				colvarNgaySinh.ColumnName = "NGAY_SINH";
				colvarNgaySinh.DataType = DbType.DateTime;
				colvarNgaySinh.MaxLength = 0;
				colvarNgaySinh.AutoIncrement = false;
				colvarNgaySinh.IsNullable = true;
				colvarNgaySinh.IsPrimaryKey = false;
				colvarNgaySinh.IsForeignKey = false;
				colvarNgaySinh.IsReadOnly = false;
				colvarNgaySinh.DefaultSetting = @"";
				colvarNgaySinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySinh);
				
				TableSchema.TableColumn colvarNamSinh = new TableSchema.TableColumn(schema);
				colvarNamSinh.ColumnName = "NAM_SINH";
				colvarNamSinh.DataType = DbType.Int32;
				colvarNamSinh.MaxLength = 0;
				colvarNamSinh.AutoIncrement = false;
				colvarNamSinh.IsNullable = true;
				colvarNamSinh.IsPrimaryKey = false;
				colvarNamSinh.IsForeignKey = false;
				colvarNamSinh.IsReadOnly = false;
				colvarNamSinh.DefaultSetting = @"";
				colvarNamSinh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNamSinh);
				
				TableSchema.TableColumn colvarDiaChi = new TableSchema.TableColumn(schema);
				colvarDiaChi.ColumnName = "DIA_CHI";
				colvarDiaChi.DataType = DbType.String;
				colvarDiaChi.MaxLength = 500;
				colvarDiaChi.AutoIncrement = false;
				colvarDiaChi.IsNullable = true;
				colvarDiaChi.IsPrimaryKey = false;
				colvarDiaChi.IsForeignKey = false;
				colvarDiaChi.IsReadOnly = false;
				colvarDiaChi.DefaultSetting = @"";
				colvarDiaChi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiaChi);
				
				TableSchema.TableColumn colvarMaTpho = new TableSchema.TableColumn(schema);
				colvarMaTpho.ColumnName = "MA_TPHO";
				colvarMaTpho.DataType = DbType.AnsiString;
				colvarMaTpho.MaxLength = 20;
				colvarMaTpho.AutoIncrement = false;
				colvarMaTpho.IsNullable = true;
				colvarMaTpho.IsPrimaryKey = false;
				colvarMaTpho.IsForeignKey = false;
				colvarMaTpho.IsReadOnly = false;
				colvarMaTpho.DefaultSetting = @"";
				colvarMaTpho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaTpho);
				
				TableSchema.TableColumn colvarMaQhuyen = new TableSchema.TableColumn(schema);
				colvarMaQhuyen.ColumnName = "MA_QHUYEN";
				colvarMaQhuyen.DataType = DbType.AnsiString;
				colvarMaQhuyen.MaxLength = 20;
				colvarMaQhuyen.AutoIncrement = false;
				colvarMaQhuyen.IsNullable = true;
				colvarMaQhuyen.IsPrimaryKey = false;
				colvarMaQhuyen.IsForeignKey = false;
				colvarMaQhuyen.IsReadOnly = false;
				colvarMaQhuyen.DefaultSetting = @"";
				colvarMaQhuyen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaQhuyen);
				
				TableSchema.TableColumn colvarMaNnghep = new TableSchema.TableColumn(schema);
				colvarMaNnghep.ColumnName = "MA_NNGHEP";
				colvarMaNnghep.DataType = DbType.AnsiString;
				colvarMaNnghep.MaxLength = 50;
				colvarMaNnghep.AutoIncrement = false;
				colvarMaNnghep.IsNullable = true;
				colvarMaNnghep.IsPrimaryKey = false;
				colvarMaNnghep.IsForeignKey = false;
				colvarMaNnghep.IsReadOnly = false;
				colvarMaNnghep.DefaultSetting = @"";
				colvarMaNnghep.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaNnghep);
				
				TableSchema.TableColumn colvarSoDthoai = new TableSchema.TableColumn(schema);
				colvarSoDthoai.ColumnName = "SO_DTHOAI";
				colvarSoDthoai.DataType = DbType.String;
				colvarSoDthoai.MaxLength = 20;
				colvarSoDthoai.AutoIncrement = false;
				colvarSoDthoai.IsNullable = true;
				colvarSoDthoai.IsPrimaryKey = false;
				colvarSoDthoai.IsForeignKey = false;
				colvarSoDthoai.IsReadOnly = false;
				colvarSoDthoai.DefaultSetting = @"";
				colvarSoDthoai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoDthoai);
				
				TableSchema.TableColumn colvarCmt = new TableSchema.TableColumn(schema);
				colvarCmt.ColumnName = "CMT";
				colvarCmt.DataType = DbType.String;
				colvarCmt.MaxLength = 30;
				colvarCmt.AutoIncrement = false;
				colvarCmt.IsNullable = true;
				colvarCmt.IsPrimaryKey = false;
				colvarCmt.IsForeignKey = false;
				colvarCmt.IsReadOnly = false;
				colvarCmt.DefaultSetting = @"";
				colvarCmt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCmt);
				
				TableSchema.TableColumn colvarMaDtuong = new TableSchema.TableColumn(schema);
				colvarMaDtuong.ColumnName = "MA_DTUONG";
				colvarMaDtuong.DataType = DbType.AnsiString;
				colvarMaDtuong.MaxLength = 50;
				colvarMaDtuong.AutoIncrement = false;
				colvarMaDtuong.IsNullable = true;
				colvarMaDtuong.IsPrimaryKey = false;
				colvarMaDtuong.IsForeignKey = false;
				colvarMaDtuong.IsReadOnly = false;
				colvarMaDtuong.DefaultSetting = @"";
				colvarMaDtuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDtuong);
				
				TableSchema.TableColumn colvarSoBhyt = new TableSchema.TableColumn(schema);
				colvarSoBhyt.ColumnName = "SO_BHYT";
				colvarSoBhyt.DataType = DbType.String;
				colvarSoBhyt.MaxLength = 50;
				colvarSoBhyt.AutoIncrement = false;
				colvarSoBhyt.IsNullable = true;
				colvarSoBhyt.IsPrimaryKey = false;
				colvarSoBhyt.IsForeignKey = false;
				colvarSoBhyt.IsReadOnly = false;
				colvarSoBhyt.DefaultSetting = @"";
				colvarSoBhyt.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoBhyt);
				
				TableSchema.TableColumn colvarIdKhoa = new TableSchema.TableColumn(schema);
				colvarIdKhoa.ColumnName = "ID_KHOA";
				colvarIdKhoa.DataType = DbType.Int32;
				colvarIdKhoa.MaxLength = 0;
				colvarIdKhoa.AutoIncrement = false;
				colvarIdKhoa.IsNullable = true;
				colvarIdKhoa.IsPrimaryKey = false;
				colvarIdKhoa.IsForeignKey = false;
				colvarIdKhoa.IsReadOnly = false;
				colvarIdKhoa.DefaultSetting = @"";
				colvarIdKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoa);
				
				TableSchema.TableColumn colvarSoPhong = new TableSchema.TableColumn(schema);
				colvarSoPhong.ColumnName = "SO_PHONG";
				colvarSoPhong.DataType = DbType.String;
				colvarSoPhong.MaxLength = 50;
				colvarSoPhong.AutoIncrement = false;
				colvarSoPhong.IsNullable = true;
				colvarSoPhong.IsPrimaryKey = false;
				colvarSoPhong.IsForeignKey = false;
				colvarSoPhong.IsReadOnly = false;
				colvarSoPhong.DefaultSetting = @"";
				colvarSoPhong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoPhong);
				
				TableSchema.TableColumn colvarSoGiuong = new TableSchema.TableColumn(schema);
				colvarSoGiuong.ColumnName = "SO_GIUONG";
				colvarSoGiuong.DataType = DbType.String;
				colvarSoGiuong.MaxLength = 50;
				colvarSoGiuong.AutoIncrement = false;
				colvarSoGiuong.IsNullable = true;
				colvarSoGiuong.IsPrimaryKey = false;
				colvarSoGiuong.IsForeignKey = false;
				colvarSoGiuong.IsReadOnly = false;
				colvarSoGiuong.DefaultSetting = @"";
				colvarSoGiuong.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSoGiuong);
				
				TableSchema.TableColumn colvarBvTrangthai = new TableSchema.TableColumn(schema);
				colvarBvTrangthai.ColumnName = "BV_TRANGTHAI";
				colvarBvTrangthai.DataType = DbType.Int32;
				colvarBvTrangthai.MaxLength = 0;
				colvarBvTrangthai.AutoIncrement = false;
				colvarBvTrangthai.IsNullable = true;
				colvarBvTrangthai.IsPrimaryKey = false;
				colvarBvTrangthai.IsForeignKey = false;
				colvarBvTrangthai.IsReadOnly = false;
				colvarBvTrangthai.DefaultSetting = @"";
				colvarBvTrangthai.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBvTrangthai);
				
				TableSchema.TableColumn colvarTrangThaiGui = new TableSchema.TableColumn(schema);
				colvarTrangThaiGui.ColumnName = "TRANG_THAI_GUI";
				colvarTrangThaiGui.DataType = DbType.Int32;
				colvarTrangThaiGui.MaxLength = 0;
				colvarTrangThaiGui.AutoIncrement = false;
				colvarTrangThaiGui.IsNullable = true;
				colvarTrangThaiGui.IsPrimaryKey = false;
				colvarTrangThaiGui.IsForeignKey = false;
				colvarTrangThaiGui.IsReadOnly = false;
				colvarTrangThaiGui.DefaultSetting = @"";
				colvarTrangThaiGui.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrangThaiGui);
				
				TableSchema.TableColumn colvarChanDoan = new TableSchema.TableColumn(schema);
				colvarChanDoan.ColumnName = "CHAN_DOAN";
				colvarChanDoan.DataType = DbType.String;
				colvarChanDoan.MaxLength = 500;
				colvarChanDoan.AutoIncrement = false;
				colvarChanDoan.IsNullable = true;
				colvarChanDoan.IsPrimaryKey = false;
				colvarChanDoan.IsForeignKey = false;
				colvarChanDoan.IsReadOnly = false;
				colvarChanDoan.DefaultSetting = @"";
				colvarChanDoan.ForeignKeyTableName = "";
				schema.Columns.Add(colvarChanDoan);
				
				TableSchema.TableColumn colvarNgayTao = new TableSchema.TableColumn(schema);
				colvarNgayTao.ColumnName = "NGAY_TAO";
				colvarNgayTao.DataType = DbType.DateTime;
				colvarNgayTao.MaxLength = 0;
				colvarNgayTao.AutoIncrement = false;
				colvarNgayTao.IsNullable = false;
				colvarNgayTao.IsPrimaryKey = false;
				colvarNgayTao.IsForeignKey = false;
				colvarNgayTao.IsReadOnly = false;
				colvarNgayTao.DefaultSetting = @"";
				colvarNgayTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgayTao);
				
				TableSchema.TableColumn colvarNguoiTao = new TableSchema.TableColumn(schema);
				colvarNguoiTao.ColumnName = "NGUOI_TAO";
				colvarNguoiTao.DataType = DbType.String;
				colvarNguoiTao.MaxLength = 50;
				colvarNguoiTao.AutoIncrement = false;
				colvarNguoiTao.IsNullable = false;
				colvarNguoiTao.IsPrimaryKey = false;
				colvarNguoiTao.IsForeignKey = false;
				colvarNguoiTao.IsReadOnly = false;
				colvarNguoiTao.DefaultSetting = @"";
				colvarNguoiTao.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiTao);
				
				TableSchema.TableColumn colvarNgaySua = new TableSchema.TableColumn(schema);
				colvarNgaySua.ColumnName = "NGAY_SUA";
				colvarNgaySua.DataType = DbType.DateTime;
				colvarNgaySua.MaxLength = 0;
				colvarNgaySua.AutoIncrement = false;
				colvarNgaySua.IsNullable = true;
				colvarNgaySua.IsPrimaryKey = false;
				colvarNgaySua.IsForeignKey = false;
				colvarNgaySua.IsReadOnly = false;
				colvarNgaySua.DefaultSetting = @"";
				colvarNgaySua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNgaySua);
				
				TableSchema.TableColumn colvarNguoiSua = new TableSchema.TableColumn(schema);
				colvarNguoiSua.ColumnName = "NGUOI_SUA";
				colvarNguoiSua.DataType = DbType.String;
				colvarNguoiSua.MaxLength = 50;
				colvarNguoiSua.AutoIncrement = false;
				colvarNguoiSua.IsNullable = true;
				colvarNguoiSua.IsPrimaryKey = false;
				colvarNguoiSua.IsForeignKey = false;
				colvarNguoiSua.IsReadOnly = false;
				colvarNguoiSua.DefaultSetting = @"";
				colvarNguoiSua.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNguoiSua);
				
				TableSchema.TableColumn colvarMaBenh = new TableSchema.TableColumn(schema);
				colvarMaBenh.ColumnName = "MA_BENH";
				colvarMaBenh.DataType = DbType.String;
				colvarMaBenh.MaxLength = 50;
				colvarMaBenh.AutoIncrement = false;
				colvarMaBenh.IsNullable = true;
				colvarMaBenh.IsPrimaryKey = false;
				colvarMaBenh.IsForeignKey = false;
				colvarMaBenh.IsReadOnly = false;
				colvarMaBenh.DefaultSetting = @"";
				colvarMaBenh.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaBenh);
				
				TableSchema.TableColumn colvarMaVphi = new TableSchema.TableColumn(schema);
				colvarMaVphi.ColumnName = "MA_VPHI";
				colvarMaVphi.DataType = DbType.String;
				colvarMaVphi.MaxLength = 50;
				colvarMaVphi.AutoIncrement = false;
				colvarMaVphi.IsNullable = true;
				colvarMaVphi.IsPrimaryKey = false;
				colvarMaVphi.IsForeignKey = false;
				colvarMaVphi.IsReadOnly = false;
				colvarMaVphi.DefaultSetting = @"";
				colvarMaVphi.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaVphi);
				
				TableSchema.TableColumn colvarAutoGen = new TableSchema.TableColumn(schema);
				colvarAutoGen.ColumnName = "AUTO_GEN";
				colvarAutoGen.DataType = DbType.Int32;
				colvarAutoGen.MaxLength = 0;
				colvarAutoGen.AutoIncrement = false;
				colvarAutoGen.IsNullable = false;
				colvarAutoGen.IsPrimaryKey = false;
				colvarAutoGen.IsForeignKey = false;
				colvarAutoGen.IsReadOnly = false;
				
						colvarAutoGen.DefaultSetting = @"((0))";
				colvarAutoGen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAutoGen);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("RIS_BENH_NHAN",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdBnhan")]
		[Bindable(true)]
		public int IdBnhan 
		{
			get { return GetColumnValue<int>(Columns.IdBnhan); }
			set { SetColumnValue(Columns.IdBnhan, value); }
		}
		  
		[XmlAttribute("Pid")]
		[Bindable(true)]
		public string Pid 
		{
			get { return GetColumnValue<string>(Columns.Pid); }
			set { SetColumnValue(Columns.Pid, value); }
		}
		  
		[XmlAttribute("TenBnhan")]
		[Bindable(true)]
		public string TenBnhan 
		{
			get { return GetColumnValue<string>(Columns.TenBnhan); }
			set { SetColumnValue(Columns.TenBnhan, value); }
		}
		  
		[XmlAttribute("TenBnhanKdau")]
		[Bindable(true)]
		public string TenBnhanKdau 
		{
			get { return GetColumnValue<string>(Columns.TenBnhanKdau); }
			set { SetColumnValue(Columns.TenBnhanKdau, value); }
		}
		  
		[XmlAttribute("Gtinh")]
		[Bindable(true)]
		public string Gtinh 
		{
			get { return GetColumnValue<string>(Columns.Gtinh); }
			set { SetColumnValue(Columns.Gtinh, value); }
		}
		  
		[XmlAttribute("NgaySinh")]
		[Bindable(true)]
		public DateTime? NgaySinh 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySinh); }
			set { SetColumnValue(Columns.NgaySinh, value); }
		}
		  
		[XmlAttribute("NamSinh")]
		[Bindable(true)]
		public int? NamSinh 
		{
			get { return GetColumnValue<int?>(Columns.NamSinh); }
			set { SetColumnValue(Columns.NamSinh, value); }
		}
		  
		[XmlAttribute("DiaChi")]
		[Bindable(true)]
		public string DiaChi 
		{
			get { return GetColumnValue<string>(Columns.DiaChi); }
			set { SetColumnValue(Columns.DiaChi, value); }
		}
		  
		[XmlAttribute("MaTpho")]
		[Bindable(true)]
		public string MaTpho 
		{
			get { return GetColumnValue<string>(Columns.MaTpho); }
			set { SetColumnValue(Columns.MaTpho, value); }
		}
		  
		[XmlAttribute("MaQhuyen")]
		[Bindable(true)]
		public string MaQhuyen 
		{
			get { return GetColumnValue<string>(Columns.MaQhuyen); }
			set { SetColumnValue(Columns.MaQhuyen, value); }
		}
		  
		[XmlAttribute("MaNnghep")]
		[Bindable(true)]
		public string MaNnghep 
		{
			get { return GetColumnValue<string>(Columns.MaNnghep); }
			set { SetColumnValue(Columns.MaNnghep, value); }
		}
		  
		[XmlAttribute("SoDthoai")]
		[Bindable(true)]
		public string SoDthoai 
		{
			get { return GetColumnValue<string>(Columns.SoDthoai); }
			set { SetColumnValue(Columns.SoDthoai, value); }
		}
		  
		[XmlAttribute("Cmt")]
		[Bindable(true)]
		public string Cmt 
		{
			get { return GetColumnValue<string>(Columns.Cmt); }
			set { SetColumnValue(Columns.Cmt, value); }
		}
		  
		[XmlAttribute("MaDtuong")]
		[Bindable(true)]
		public string MaDtuong 
		{
			get { return GetColumnValue<string>(Columns.MaDtuong); }
			set { SetColumnValue(Columns.MaDtuong, value); }
		}
		  
		[XmlAttribute("SoBhyt")]
		[Bindable(true)]
		public string SoBhyt 
		{
			get { return GetColumnValue<string>(Columns.SoBhyt); }
			set { SetColumnValue(Columns.SoBhyt, value); }
		}
		  
		[XmlAttribute("IdKhoa")]
		[Bindable(true)]
		public int? IdKhoa 
		{
			get { return GetColumnValue<int?>(Columns.IdKhoa); }
			set { SetColumnValue(Columns.IdKhoa, value); }
		}
		  
		[XmlAttribute("SoPhong")]
		[Bindable(true)]
		public string SoPhong 
		{
			get { return GetColumnValue<string>(Columns.SoPhong); }
			set { SetColumnValue(Columns.SoPhong, value); }
		}
		  
		[XmlAttribute("SoGiuong")]
		[Bindable(true)]
		public string SoGiuong 
		{
			get { return GetColumnValue<string>(Columns.SoGiuong); }
			set { SetColumnValue(Columns.SoGiuong, value); }
		}
		  
		[XmlAttribute("BvTrangthai")]
		[Bindable(true)]
		public int? BvTrangthai 
		{
			get { return GetColumnValue<int?>(Columns.BvTrangthai); }
			set { SetColumnValue(Columns.BvTrangthai, value); }
		}
		  
		[XmlAttribute("TrangThaiGui")]
		[Bindable(true)]
		public int? TrangThaiGui 
		{
			get { return GetColumnValue<int?>(Columns.TrangThaiGui); }
			set { SetColumnValue(Columns.TrangThaiGui, value); }
		}
		  
		[XmlAttribute("ChanDoan")]
		[Bindable(true)]
		public string ChanDoan 
		{
			get { return GetColumnValue<string>(Columns.ChanDoan); }
			set { SetColumnValue(Columns.ChanDoan, value); }
		}
		  
		[XmlAttribute("NgayTao")]
		[Bindable(true)]
		public DateTime NgayTao 
		{
			get { return GetColumnValue<DateTime>(Columns.NgayTao); }
			set { SetColumnValue(Columns.NgayTao, value); }
		}
		  
		[XmlAttribute("NguoiTao")]
		[Bindable(true)]
		public string NguoiTao 
		{
			get { return GetColumnValue<string>(Columns.NguoiTao); }
			set { SetColumnValue(Columns.NguoiTao, value); }
		}
		  
		[XmlAttribute("NgaySua")]
		[Bindable(true)]
		public DateTime? NgaySua 
		{
			get { return GetColumnValue<DateTime?>(Columns.NgaySua); }
			set { SetColumnValue(Columns.NgaySua, value); }
		}
		  
		[XmlAttribute("NguoiSua")]
		[Bindable(true)]
		public string NguoiSua 
		{
			get { return GetColumnValue<string>(Columns.NguoiSua); }
			set { SetColumnValue(Columns.NguoiSua, value); }
		}
		  
		[XmlAttribute("MaBenh")]
		[Bindable(true)]
		public string MaBenh 
		{
			get { return GetColumnValue<string>(Columns.MaBenh); }
			set { SetColumnValue(Columns.MaBenh, value); }
		}
		  
		[XmlAttribute("MaVphi")]
		[Bindable(true)]
		public string MaVphi 
		{
			get { return GetColumnValue<string>(Columns.MaVphi); }
			set { SetColumnValue(Columns.MaVphi, value); }
		}
		  
		[XmlAttribute("AutoGen")]
		[Bindable(true)]
		public int AutoGen 
		{
			get { return GetColumnValue<int>(Columns.AutoGen); }
			set { SetColumnValue(Columns.AutoGen, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varPid,string varTenBnhan,string varTenBnhanKdau,string varGtinh,DateTime? varNgaySinh,int? varNamSinh,string varDiaChi,string varMaTpho,string varMaQhuyen,string varMaNnghep,string varSoDthoai,string varCmt,string varMaDtuong,string varSoBhyt,int? varIdKhoa,string varSoPhong,string varSoGiuong,int? varBvTrangthai,int? varTrangThaiGui,string varChanDoan,DateTime varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,string varMaBenh,string varMaVphi,int varAutoGen)
		{
			RisBenhNhan item = new RisBenhNhan();
			
			item.Pid = varPid;
			
			item.TenBnhan = varTenBnhan;
			
			item.TenBnhanKdau = varTenBnhanKdau;
			
			item.Gtinh = varGtinh;
			
			item.NgaySinh = varNgaySinh;
			
			item.NamSinh = varNamSinh;
			
			item.DiaChi = varDiaChi;
			
			item.MaTpho = varMaTpho;
			
			item.MaQhuyen = varMaQhuyen;
			
			item.MaNnghep = varMaNnghep;
			
			item.SoDthoai = varSoDthoai;
			
			item.Cmt = varCmt;
			
			item.MaDtuong = varMaDtuong;
			
			item.SoBhyt = varSoBhyt;
			
			item.IdKhoa = varIdKhoa;
			
			item.SoPhong = varSoPhong;
			
			item.SoGiuong = varSoGiuong;
			
			item.BvTrangthai = varBvTrangthai;
			
			item.TrangThaiGui = varTrangThaiGui;
			
			item.ChanDoan = varChanDoan;
			
			item.NgayTao = varNgayTao;
			
			item.NguoiTao = varNguoiTao;
			
			item.NgaySua = varNgaySua;
			
			item.NguoiSua = varNguoiSua;
			
			item.MaBenh = varMaBenh;
			
			item.MaVphi = varMaVphi;
			
			item.AutoGen = varAutoGen;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdBnhan,string varPid,string varTenBnhan,string varTenBnhanKdau,string varGtinh,DateTime? varNgaySinh,int? varNamSinh,string varDiaChi,string varMaTpho,string varMaQhuyen,string varMaNnghep,string varSoDthoai,string varCmt,string varMaDtuong,string varSoBhyt,int? varIdKhoa,string varSoPhong,string varSoGiuong,int? varBvTrangthai,int? varTrangThaiGui,string varChanDoan,DateTime varNgayTao,string varNguoiTao,DateTime? varNgaySua,string varNguoiSua,string varMaBenh,string varMaVphi,int varAutoGen)
		{
			RisBenhNhan item = new RisBenhNhan();
			
				item.IdBnhan = varIdBnhan;
			
				item.Pid = varPid;
			
				item.TenBnhan = varTenBnhan;
			
				item.TenBnhanKdau = varTenBnhanKdau;
			
				item.Gtinh = varGtinh;
			
				item.NgaySinh = varNgaySinh;
			
				item.NamSinh = varNamSinh;
			
				item.DiaChi = varDiaChi;
			
				item.MaTpho = varMaTpho;
			
				item.MaQhuyen = varMaQhuyen;
			
				item.MaNnghep = varMaNnghep;
			
				item.SoDthoai = varSoDthoai;
			
				item.Cmt = varCmt;
			
				item.MaDtuong = varMaDtuong;
			
				item.SoBhyt = varSoBhyt;
			
				item.IdKhoa = varIdKhoa;
			
				item.SoPhong = varSoPhong;
			
				item.SoGiuong = varSoGiuong;
			
				item.BvTrangthai = varBvTrangthai;
			
				item.TrangThaiGui = varTrangThaiGui;
			
				item.ChanDoan = varChanDoan;
			
				item.NgayTao = varNgayTao;
			
				item.NguoiTao = varNguoiTao;
			
				item.NgaySua = varNgaySua;
			
				item.NguoiSua = varNguoiSua;
			
				item.MaBenh = varMaBenh;
			
				item.MaVphi = varMaVphi;
			
				item.AutoGen = varAutoGen;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdBnhanColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn PidColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn TenBnhanColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TenBnhanKdauColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn GtinhColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySinhColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn NamSinhColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn DiaChiColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn MaTphoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn MaQhuyenColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn MaNnghepColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn SoDthoaiColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn CmtColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDtuongColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn SoBhytColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn SoPhongColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn SoGiuongColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn BvTrangthaiColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn TrangThaiGuiColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn ChanDoanColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn NgayTaoColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiTaoColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn NgaySuaColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn NguoiSuaColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn MaBenhColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn MaVphiColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn AutoGenColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdBnhan = @"ID_BNHAN";
			 public static string Pid = @"PID";
			 public static string TenBnhan = @"TEN_BNHAN";
			 public static string TenBnhanKdau = @"TEN_BNHAN_KDAU";
			 public static string Gtinh = @"GTINH";
			 public static string NgaySinh = @"NGAY_SINH";
			 public static string NamSinh = @"NAM_SINH";
			 public static string DiaChi = @"DIA_CHI";
			 public static string MaTpho = @"MA_TPHO";
			 public static string MaQhuyen = @"MA_QHUYEN";
			 public static string MaNnghep = @"MA_NNGHEP";
			 public static string SoDthoai = @"SO_DTHOAI";
			 public static string Cmt = @"CMT";
			 public static string MaDtuong = @"MA_DTUONG";
			 public static string SoBhyt = @"SO_BHYT";
			 public static string IdKhoa = @"ID_KHOA";
			 public static string SoPhong = @"SO_PHONG";
			 public static string SoGiuong = @"SO_GIUONG";
			 public static string BvTrangthai = @"BV_TRANGTHAI";
			 public static string TrangThaiGui = @"TRANG_THAI_GUI";
			 public static string ChanDoan = @"CHAN_DOAN";
			 public static string NgayTao = @"NGAY_TAO";
			 public static string NguoiTao = @"NGUOI_TAO";
			 public static string NgaySua = @"NGAY_SUA";
			 public static string NguoiSua = @"NGUOI_SUA";
			 public static string MaBenh = @"MA_BENH";
			 public static string MaVphi = @"MA_VPHI";
			 public static string AutoGen = @"AUTO_GEN";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
