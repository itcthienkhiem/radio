using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.RISLink.DataAccessLayer
{
	/// <summary>
	/// Strongly-typed collection for the DPhongbanDichvu class.
	/// </summary>
    [Serializable]
	public partial class DPhongbanDichvuCollection : ActiveList<DPhongbanDichvu, DPhongbanDichvuCollection>
	{	   
		public DPhongbanDichvuCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>DPhongbanDichvuCollection</returns>
		public DPhongbanDichvuCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                DPhongbanDichvu o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the D_PHONGBAN_DICHVU table.
	/// </summary>
	[Serializable]
	public partial class DPhongbanDichvu : ActiveRecord<DPhongbanDichvu>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public DPhongbanDichvu()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public DPhongbanDichvu(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public DPhongbanDichvu(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public DPhongbanDichvu(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("D_PHONGBAN_DICHVU", TableType.Table, DataService.GetInstance("ORM"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdLoaiDvu = new TableSchema.TableColumn(schema);
				colvarIdLoaiDvu.ColumnName = "ID_LOAI_DVU";
				colvarIdLoaiDvu.DataType = DbType.Int32;
				colvarIdLoaiDvu.MaxLength = 0;
				colvarIdLoaiDvu.AutoIncrement = false;
				colvarIdLoaiDvu.IsNullable = false;
				colvarIdLoaiDvu.IsPrimaryKey = true;
				colvarIdLoaiDvu.IsForeignKey = false;
				colvarIdLoaiDvu.IsReadOnly = false;
				colvarIdLoaiDvu.DefaultSetting = @"";
				colvarIdLoaiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdLoaiDvu);
				
				TableSchema.TableColumn colvarIdDvu = new TableSchema.TableColumn(schema);
				colvarIdDvu.ColumnName = "ID_DVU";
				colvarIdDvu.DataType = DbType.Int32;
				colvarIdDvu.MaxLength = 0;
				colvarIdDvu.AutoIncrement = false;
				colvarIdDvu.IsNullable = false;
				colvarIdDvu.IsPrimaryKey = true;
				colvarIdDvu.IsForeignKey = false;
				colvarIdDvu.IsReadOnly = false;
				colvarIdDvu.DefaultSetting = @"";
				colvarIdDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDvu);
				
				TableSchema.TableColumn colvarIdKhoa = new TableSchema.TableColumn(schema);
				colvarIdKhoa.ColumnName = "ID_KHOA";
				colvarIdKhoa.DataType = DbType.Int32;
				colvarIdKhoa.MaxLength = 0;
				colvarIdKhoa.AutoIncrement = false;
				colvarIdKhoa.IsNullable = false;
				colvarIdKhoa.IsPrimaryKey = true;
				colvarIdKhoa.IsForeignKey = false;
				colvarIdKhoa.IsReadOnly = false;
				colvarIdKhoa.DefaultSetting = @"";
				colvarIdKhoa.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdKhoa);
				
				TableSchema.TableColumn colvarMaLoaiDvu = new TableSchema.TableColumn(schema);
				colvarMaLoaiDvu.ColumnName = "MA_LOAI_DVU";
				colvarMaLoaiDvu.DataType = DbType.AnsiString;
				colvarMaLoaiDvu.MaxLength = 50;
				colvarMaLoaiDvu.AutoIncrement = false;
				colvarMaLoaiDvu.IsNullable = true;
				colvarMaLoaiDvu.IsPrimaryKey = false;
				colvarMaLoaiDvu.IsForeignKey = false;
				colvarMaLoaiDvu.IsReadOnly = false;
				colvarMaLoaiDvu.DefaultSetting = @"";
				colvarMaLoaiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaLoaiDvu);
				
				TableSchema.TableColumn colvarMaDvu = new TableSchema.TableColumn(schema);
				colvarMaDvu.ColumnName = "MA_DVU";
				colvarMaDvu.DataType = DbType.AnsiString;
				colvarMaDvu.MaxLength = 50;
				colvarMaDvu.AutoIncrement = false;
				colvarMaDvu.IsNullable = true;
				colvarMaDvu.IsPrimaryKey = false;
				colvarMaDvu.IsForeignKey = false;
				colvarMaDvu.IsReadOnly = false;
				colvarMaDvu.DefaultSetting = @"";
				colvarMaDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaDvu);
				
				TableSchema.TableColumn colvarTenLoaiDvu = new TableSchema.TableColumn(schema);
				colvarTenLoaiDvu.ColumnName = "TEN_LOAI_DVU";
				colvarTenLoaiDvu.DataType = DbType.String;
				colvarTenLoaiDvu.MaxLength = 100;
				colvarTenLoaiDvu.AutoIncrement = false;
				colvarTenLoaiDvu.IsNullable = true;
				colvarTenLoaiDvu.IsPrimaryKey = false;
				colvarTenLoaiDvu.IsForeignKey = false;
				colvarTenLoaiDvu.IsReadOnly = false;
				colvarTenLoaiDvu.DefaultSetting = @"";
				colvarTenLoaiDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenLoaiDvu);
				
				TableSchema.TableColumn colvarTenDvu = new TableSchema.TableColumn(schema);
				colvarTenDvu.ColumnName = "TEN_DVU";
				colvarTenDvu.DataType = DbType.String;
				colvarTenDvu.MaxLength = 100;
				colvarTenDvu.AutoIncrement = false;
				colvarTenDvu.IsNullable = true;
				colvarTenDvu.IsPrimaryKey = false;
				colvarTenDvu.IsForeignKey = false;
				colvarTenDvu.IsReadOnly = false;
				colvarTenDvu.DefaultSetting = @"";
				colvarTenDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTenDvu);
				
				TableSchema.TableColumn colvarMaKieuDvu = new TableSchema.TableColumn(schema);
				colvarMaKieuDvu.ColumnName = "MA_KIEU_DVU";
				colvarMaKieuDvu.DataType = DbType.AnsiString;
				colvarMaKieuDvu.MaxLength = 50;
				colvarMaKieuDvu.AutoIncrement = false;
				colvarMaKieuDvu.IsNullable = true;
				colvarMaKieuDvu.IsPrimaryKey = false;
				colvarMaKieuDvu.IsForeignKey = false;
				colvarMaKieuDvu.IsReadOnly = false;
				colvarMaKieuDvu.DefaultSetting = @"";
				colvarMaKieuDvu.ForeignKeyTableName = "";
				schema.Columns.Add(colvarMaKieuDvu);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["ORM"].AddSchema("D_PHONGBAN_DICHVU",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdLoaiDvu")]
		[Bindable(true)]
		public int IdLoaiDvu 
		{
			get { return GetColumnValue<int>(Columns.IdLoaiDvu); }
			set { SetColumnValue(Columns.IdLoaiDvu, value); }
		}
		  
		[XmlAttribute("IdDvu")]
		[Bindable(true)]
		public int IdDvu 
		{
			get { return GetColumnValue<int>(Columns.IdDvu); }
			set { SetColumnValue(Columns.IdDvu, value); }
		}
		  
		[XmlAttribute("IdKhoa")]
		[Bindable(true)]
		public int IdKhoa 
		{
			get { return GetColumnValue<int>(Columns.IdKhoa); }
			set { SetColumnValue(Columns.IdKhoa, value); }
		}
		  
		[XmlAttribute("MaLoaiDvu")]
		[Bindable(true)]
		public string MaLoaiDvu 
		{
			get { return GetColumnValue<string>(Columns.MaLoaiDvu); }
			set { SetColumnValue(Columns.MaLoaiDvu, value); }
		}
		  
		[XmlAttribute("MaDvu")]
		[Bindable(true)]
		public string MaDvu 
		{
			get { return GetColumnValue<string>(Columns.MaDvu); }
			set { SetColumnValue(Columns.MaDvu, value); }
		}
		  
		[XmlAttribute("TenLoaiDvu")]
		[Bindable(true)]
		public string TenLoaiDvu 
		{
			get { return GetColumnValue<string>(Columns.TenLoaiDvu); }
			set { SetColumnValue(Columns.TenLoaiDvu, value); }
		}
		  
		[XmlAttribute("TenDvu")]
		[Bindable(true)]
		public string TenDvu 
		{
			get { return GetColumnValue<string>(Columns.TenDvu); }
			set { SetColumnValue(Columns.TenDvu, value); }
		}
		  
		[XmlAttribute("MaKieuDvu")]
		[Bindable(true)]
		public string MaKieuDvu 
		{
			get { return GetColumnValue<string>(Columns.MaKieuDvu); }
			set { SetColumnValue(Columns.MaKieuDvu, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varIdLoaiDvu,int varIdDvu,int varIdKhoa,string varMaLoaiDvu,string varMaDvu,string varTenLoaiDvu,string varTenDvu,string varMaKieuDvu)
		{
			DPhongbanDichvu item = new DPhongbanDichvu();
			
			item.IdLoaiDvu = varIdLoaiDvu;
			
			item.IdDvu = varIdDvu;
			
			item.IdKhoa = varIdKhoa;
			
			item.MaLoaiDvu = varMaLoaiDvu;
			
			item.MaDvu = varMaDvu;
			
			item.TenLoaiDvu = varTenLoaiDvu;
			
			item.TenDvu = varTenDvu;
			
			item.MaKieuDvu = varMaKieuDvu;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdLoaiDvu,int varIdDvu,int varIdKhoa,string varMaLoaiDvu,string varMaDvu,string varTenLoaiDvu,string varTenDvu,string varMaKieuDvu)
		{
			DPhongbanDichvu item = new DPhongbanDichvu();
			
				item.IdLoaiDvu = varIdLoaiDvu;
			
				item.IdDvu = varIdDvu;
			
				item.IdKhoa = varIdKhoa;
			
				item.MaLoaiDvu = varMaLoaiDvu;
			
				item.MaDvu = varMaDvu;
			
				item.TenLoaiDvu = varTenLoaiDvu;
			
				item.TenDvu = varTenDvu;
			
				item.MaKieuDvu = varMaKieuDvu;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdLoaiDvuColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDvuColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdKhoaColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn MaLoaiDvuColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn MaDvuColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn TenLoaiDvuColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn TenDvuColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn MaKieuDvuColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdLoaiDvu = @"ID_LOAI_DVU";
			 public static string IdDvu = @"ID_DVU";
			 public static string IdKhoa = @"ID_KHOA";
			 public static string MaLoaiDvu = @"MA_LOAI_DVU";
			 public static string MaDvu = @"MA_DVU";
			 public static string TenLoaiDvu = @"TEN_LOAI_DVU";
			 public static string TenDvu = @"TEN_DVU";
			 public static string MaKieuDvu = @"MA_KIEU_DVU";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
