using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.RISLink.DataAccessLayer{
    /// <summary>
    /// Strongly-typed collection for the VPatientExamSearch class.
    /// </summary>
    [Serializable]
    public partial class VPatientExamSearchCollection : ReadOnlyList<VPatientExamSearch, VPatientExamSearchCollection>
    {        
        public VPatientExamSearchCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the V_PatientExamSearch view.
    /// </summary>
    [Serializable]
    public partial class VPatientExamSearch : ReadOnlyRecord<VPatientExamSearch>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("V_PatientExamSearch", TableType.View, DataService.GetInstance("ORM"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarPatientId = new TableSchema.TableColumn(schema);
                colvarPatientId.ColumnName = "Patient_ID";
                colvarPatientId.DataType = DbType.Int64;
                colvarPatientId.MaxLength = 0;
                colvarPatientId.AutoIncrement = false;
                colvarPatientId.IsNullable = false;
                colvarPatientId.IsPrimaryKey = false;
                colvarPatientId.IsForeignKey = false;
                colvarPatientId.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientId);
                
                TableSchema.TableColumn colvarPatientCode = new TableSchema.TableColumn(schema);
                colvarPatientCode.ColumnName = "Patient_Code";
                colvarPatientCode.DataType = DbType.AnsiString;
                colvarPatientCode.MaxLength = 20;
                colvarPatientCode.AutoIncrement = false;
                colvarPatientCode.IsNullable = false;
                colvarPatientCode.IsPrimaryKey = false;
                colvarPatientCode.IsForeignKey = false;
                colvarPatientCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPatientCode);
                
                TableSchema.TableColumn colvarObjectTypeId = new TableSchema.TableColumn(schema);
                colvarObjectTypeId.ColumnName = "ObjectType_ID";
                colvarObjectTypeId.DataType = DbType.Int16;
                colvarObjectTypeId.MaxLength = 0;
                colvarObjectTypeId.AutoIncrement = false;
                colvarObjectTypeId.IsNullable = false;
                colvarObjectTypeId.IsPrimaryKey = false;
                colvarObjectTypeId.IsForeignKey = false;
                colvarObjectTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectTypeId);
                
                TableSchema.TableColumn colvarHosTrans = new TableSchema.TableColumn(schema);
                colvarHosTrans.ColumnName = "Hos_Trans";
                colvarHosTrans.DataType = DbType.Byte;
                colvarHosTrans.MaxLength = 0;
                colvarHosTrans.AutoIncrement = false;
                colvarHosTrans.IsNullable = false;
                colvarHosTrans.IsPrimaryKey = false;
                colvarHosTrans.IsForeignKey = false;
                colvarHosTrans.IsReadOnly = false;
                
                schema.Columns.Add(colvarHosTrans);
                
                TableSchema.TableColumn colvarRelativeName = new TableSchema.TableColumn(schema);
                colvarRelativeName.ColumnName = "Relative_Name";
                colvarRelativeName.DataType = DbType.String;
                colvarRelativeName.MaxLength = 100;
                colvarRelativeName.AutoIncrement = false;
                colvarRelativeName.IsNullable = true;
                colvarRelativeName.IsPrimaryKey = false;
                colvarRelativeName.IsForeignKey = false;
                colvarRelativeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarRelativeName);
                
                TableSchema.TableColumn colvarRelativePhone = new TableSchema.TableColumn(schema);
                colvarRelativePhone.ColumnName = "Relative_Phone";
                colvarRelativePhone.DataType = DbType.AnsiString;
                colvarRelativePhone.MaxLength = 20;
                colvarRelativePhone.AutoIncrement = false;
                colvarRelativePhone.IsNullable = true;
                colvarRelativePhone.IsPrimaryKey = false;
                colvarRelativePhone.IsForeignKey = false;
                colvarRelativePhone.IsReadOnly = false;
                
                schema.Columns.Add(colvarRelativePhone);
                
                TableSchema.TableColumn colvarRelativeAddress = new TableSchema.TableColumn(schema);
                colvarRelativeAddress.ColumnName = "Relative_Address";
                colvarRelativeAddress.DataType = DbType.String;
                colvarRelativeAddress.MaxLength = 255;
                colvarRelativeAddress.AutoIncrement = false;
                colvarRelativeAddress.IsNullable = true;
                colvarRelativeAddress.IsPrimaryKey = false;
                colvarRelativeAddress.IsForeignKey = false;
                colvarRelativeAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarRelativeAddress);
                
                TableSchema.TableColumn colvarInsuranceNum = new TableSchema.TableColumn(schema);
                colvarInsuranceNum.ColumnName = "Insurance_Num";
                colvarInsuranceNum.DataType = DbType.AnsiString;
                colvarInsuranceNum.MaxLength = 30;
                colvarInsuranceNum.AutoIncrement = false;
                colvarInsuranceNum.IsNullable = true;
                colvarInsuranceNum.IsPrimaryKey = false;
                colvarInsuranceNum.IsForeignKey = false;
                colvarInsuranceNum.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsuranceNum);
                
                TableSchema.TableColumn colvarInsuranceFromDate = new TableSchema.TableColumn(schema);
                colvarInsuranceFromDate.ColumnName = "Insurance_FromDate";
                colvarInsuranceFromDate.DataType = DbType.DateTime;
                colvarInsuranceFromDate.MaxLength = 0;
                colvarInsuranceFromDate.AutoIncrement = false;
                colvarInsuranceFromDate.IsNullable = true;
                colvarInsuranceFromDate.IsPrimaryKey = false;
                colvarInsuranceFromDate.IsForeignKey = false;
                colvarInsuranceFromDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsuranceFromDate);
                
                TableSchema.TableColumn colvarInsuranceToDate = new TableSchema.TableColumn(schema);
                colvarInsuranceToDate.ColumnName = "Insurance_ToDate";
                colvarInsuranceToDate.DataType = DbType.DateTime;
                colvarInsuranceToDate.MaxLength = 0;
                colvarInsuranceToDate.AutoIncrement = false;
                colvarInsuranceToDate.IsNullable = true;
                colvarInsuranceToDate.IsPrimaryKey = false;
                colvarInsuranceToDate.IsForeignKey = false;
                colvarInsuranceToDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsuranceToDate);
                
                TableSchema.TableColumn colvarInsuranceSupply = new TableSchema.TableColumn(schema);
                colvarInsuranceSupply.ColumnName = "Insurance_Supply";
                colvarInsuranceSupply.DataType = DbType.String;
                colvarInsuranceSupply.MaxLength = 100;
                colvarInsuranceSupply.AutoIncrement = false;
                colvarInsuranceSupply.IsNullable = true;
                colvarInsuranceSupply.IsPrimaryKey = false;
                colvarInsuranceSupply.IsForeignKey = false;
                colvarInsuranceSupply.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsuranceSupply);
                
                TableSchema.TableColumn colvarInsClinicCode = new TableSchema.TableColumn(schema);
                colvarInsClinicCode.ColumnName = "InsClinic_Code";
                colvarInsClinicCode.DataType = DbType.AnsiString;
                colvarInsClinicCode.MaxLength = 20;
                colvarInsClinicCode.AutoIncrement = false;
                colvarInsClinicCode.IsNullable = true;
                colvarInsClinicCode.IsPrimaryKey = false;
                colvarInsClinicCode.IsForeignKey = false;
                colvarInsClinicCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsClinicCode);
                
                TableSchema.TableColumn colvarInsObjectCode = new TableSchema.TableColumn(schema);
                colvarInsObjectCode.ColumnName = "InsObject_Code";
                colvarInsObjectCode.DataType = DbType.AnsiString;
                colvarInsObjectCode.MaxLength = 20;
                colvarInsObjectCode.AutoIncrement = false;
                colvarInsObjectCode.IsNullable = true;
                colvarInsObjectCode.IsPrimaryKey = false;
                colvarInsObjectCode.IsForeignKey = false;
                colvarInsObjectCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarInsObjectCode);
                
                TableSchema.TableColumn colvarInputDate = new TableSchema.TableColumn(schema);
                colvarInputDate.ColumnName = "Input_Date";
                colvarInputDate.DataType = DbType.DateTime;
                colvarInputDate.MaxLength = 0;
                colvarInputDate.AutoIncrement = false;
                colvarInputDate.IsNullable = false;
                colvarInputDate.IsPrimaryKey = false;
                colvarInputDate.IsForeignKey = false;
                colvarInputDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInputDate);
                
                TableSchema.TableColumn colvarUserId = new TableSchema.TableColumn(schema);
                colvarUserId.ColumnName = "User_ID";
                colvarUserId.DataType = DbType.AnsiString;
                colvarUserId.MaxLength = 50;
                colvarUserId.AutoIncrement = false;
                colvarUserId.IsNullable = false;
                colvarUserId.IsPrimaryKey = false;
                colvarUserId.IsForeignKey = false;
                colvarUserId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserId);
                
                TableSchema.TableColumn colvarHosStatus = new TableSchema.TableColumn(schema);
                colvarHosStatus.ColumnName = "Hos_status";
                colvarHosStatus.DataType = DbType.Byte;
                colvarHosStatus.MaxLength = 0;
                colvarHosStatus.AutoIncrement = false;
                colvarHosStatus.IsNullable = false;
                colvarHosStatus.IsPrimaryKey = false;
                colvarHosStatus.IsForeignKey = false;
                colvarHosStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarHosStatus);
                
                TableSchema.TableColumn colvarDiscountRate = new TableSchema.TableColumn(schema);
                colvarDiscountRate.ColumnName = "Discount_Rate";
                colvarDiscountRate.DataType = DbType.Decimal;
                colvarDiscountRate.MaxLength = 0;
                colvarDiscountRate.AutoIncrement = false;
                colvarDiscountRate.IsNullable = true;
                colvarDiscountRate.IsPrimaryKey = false;
                colvarDiscountRate.IsForeignKey = false;
                colvarDiscountRate.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiscountRate);
                
                TableSchema.TableColumn colvarDiscountType = new TableSchema.TableColumn(schema);
                colvarDiscountType.ColumnName = "Discount_Type";
                colvarDiscountType.DataType = DbType.Byte;
                colvarDiscountType.MaxLength = 0;
                colvarDiscountType.AutoIncrement = false;
                colvarDiscountType.IsNullable = true;
                colvarDiscountType.IsPrimaryKey = false;
                colvarDiscountType.IsForeignKey = false;
                colvarDiscountType.IsReadOnly = false;
                
                schema.Columns.Add(colvarDiscountType);
                
                TableSchema.TableColumn colvarOrgirinMoney = new TableSchema.TableColumn(schema);
                colvarOrgirinMoney.ColumnName = "OrgirinMoney";
                colvarOrgirinMoney.DataType = DbType.Currency;
                colvarOrgirinMoney.MaxLength = 0;
                colvarOrgirinMoney.AutoIncrement = false;
                colvarOrgirinMoney.IsNullable = true;
                colvarOrgirinMoney.IsPrimaryKey = false;
                colvarOrgirinMoney.IsForeignKey = false;
                colvarOrgirinMoney.IsReadOnly = false;
                
                schema.Columns.Add(colvarOrgirinMoney);
                
                TableSchema.TableColumn colvarLastMoney = new TableSchema.TableColumn(schema);
                colvarLastMoney.ColumnName = "LastMoney";
                colvarLastMoney.DataType = DbType.Currency;
                colvarLastMoney.MaxLength = 0;
                colvarLastMoney.AutoIncrement = false;
                colvarLastMoney.IsNullable = true;
                colvarLastMoney.IsPrimaryKey = false;
                colvarLastMoney.IsForeignKey = false;
                colvarLastMoney.IsReadOnly = false;
                
                schema.Columns.Add(colvarLastMoney);
                
                TableSchema.TableColumn colvarDesc = new TableSchema.TableColumn(schema);
                colvarDesc.ColumnName = "Desc";
                colvarDesc.DataType = DbType.String;
                colvarDesc.MaxLength = 500;
                colvarDesc.AutoIncrement = false;
                colvarDesc.IsNullable = true;
                colvarDesc.IsPrimaryKey = false;
                colvarDesc.IsForeignKey = false;
                colvarDesc.IsReadOnly = false;
                
                schema.Columns.Add(colvarDesc);
                
                TableSchema.TableColumn colvarLocked = new TableSchema.TableColumn(schema);
                colvarLocked.ColumnName = "Locked";
                colvarLocked.DataType = DbType.Byte;
                colvarLocked.MaxLength = 0;
                colvarLocked.AutoIncrement = false;
                colvarLocked.IsNullable = true;
                colvarLocked.IsPrimaryKey = false;
                colvarLocked.IsForeignKey = false;
                colvarLocked.IsReadOnly = false;
                
                schema.Columns.Add(colvarLocked);
                
                TableSchema.TableColumn colvarDeleteBy = new TableSchema.TableColumn(schema);
                colvarDeleteBy.ColumnName = "Delete_By";
                colvarDeleteBy.DataType = DbType.String;
                colvarDeleteBy.MaxLength = 50;
                colvarDeleteBy.AutoIncrement = false;
                colvarDeleteBy.IsNullable = true;
                colvarDeleteBy.IsPrimaryKey = false;
                colvarDeleteBy.IsForeignKey = false;
                colvarDeleteBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeleteBy);
                
                TableSchema.TableColumn colvarDeleteDate = new TableSchema.TableColumn(schema);
                colvarDeleteDate.ColumnName = "Delete_Date";
                colvarDeleteDate.DataType = DbType.DateTime;
                colvarDeleteDate.MaxLength = 0;
                colvarDeleteDate.AutoIncrement = false;
                colvarDeleteDate.IsNullable = true;
                colvarDeleteDate.IsPrimaryKey = false;
                colvarDeleteDate.IsForeignKey = false;
                colvarDeleteDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarDeleteDate);
                
                TableSchema.TableColumn colvarReasonBy = new TableSchema.TableColumn(schema);
                colvarReasonBy.ColumnName = "Reason_By";
                colvarReasonBy.DataType = DbType.String;
                colvarReasonBy.MaxLength = 255;
                colvarReasonBy.AutoIncrement = false;
                colvarReasonBy.IsNullable = true;
                colvarReasonBy.IsPrimaryKey = false;
                colvarReasonBy.IsForeignKey = false;
                colvarReasonBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarReasonBy);
                
                TableSchema.TableColumn colvarIndentityNo = new TableSchema.TableColumn(schema);
                colvarIndentityNo.ColumnName = "Indentity_No";
                colvarIndentityNo.DataType = DbType.Int64;
                colvarIndentityNo.MaxLength = 0;
                colvarIndentityNo.AutoIncrement = false;
                colvarIndentityNo.IsNullable = true;
                colvarIndentityNo.IsPrimaryKey = false;
                colvarIndentityNo.IsForeignKey = false;
                colvarIndentityNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarIndentityNo);
                
                TableSchema.TableColumn colvarObjectTypeName = new TableSchema.TableColumn(schema);
                colvarObjectTypeName.ColumnName = "Object_Type_Name";
                colvarObjectTypeName.DataType = DbType.String;
                colvarObjectTypeName.MaxLength = 100;
                colvarObjectTypeName.AutoIncrement = false;
                colvarObjectTypeName.IsNullable = false;
                colvarObjectTypeName.IsPrimaryKey = false;
                colvarObjectTypeName.IsForeignKey = false;
                colvarObjectTypeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarObjectTypeName);
                
                TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
                colvarStatus.ColumnName = "STATUS";
                colvarStatus.DataType = DbType.String;
                colvarStatus.MaxLength = 30;
                colvarStatus.AutoIncrement = false;
                colvarStatus.IsNullable = true;
                colvarStatus.IsPrimaryKey = false;
                colvarStatus.IsForeignKey = false;
                colvarStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarStatus);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["ORM"].AddSchema("V_PatientExamSearch",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VPatientExamSearch()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VPatientExamSearch(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VPatientExamSearch(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VPatientExamSearch(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("PatientId")]
        [Bindable(true)]
        public long PatientId 
	    {
		    get
		    {
			    return GetColumnValue<long>("Patient_ID");
		    }
            set 
		    {
			    SetColumnValue("Patient_ID", value);
            }
        }
	      
        [XmlAttribute("PatientCode")]
        [Bindable(true)]
        public string PatientCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("Patient_Code");
		    }
            set 
		    {
			    SetColumnValue("Patient_Code", value);
            }
        }
	      
        [XmlAttribute("ObjectTypeId")]
        [Bindable(true)]
        public short ObjectTypeId 
	    {
		    get
		    {
			    return GetColumnValue<short>("ObjectType_ID");
		    }
            set 
		    {
			    SetColumnValue("ObjectType_ID", value);
            }
        }
	      
        [XmlAttribute("HosTrans")]
        [Bindable(true)]
        public byte HosTrans 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Hos_Trans");
		    }
            set 
		    {
			    SetColumnValue("Hos_Trans", value);
            }
        }
	      
        [XmlAttribute("RelativeName")]
        [Bindable(true)]
        public string RelativeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Relative_Name");
		    }
            set 
		    {
			    SetColumnValue("Relative_Name", value);
            }
        }
	      
        [XmlAttribute("RelativePhone")]
        [Bindable(true)]
        public string RelativePhone 
	    {
		    get
		    {
			    return GetColumnValue<string>("Relative_Phone");
		    }
            set 
		    {
			    SetColumnValue("Relative_Phone", value);
            }
        }
	      
        [XmlAttribute("RelativeAddress")]
        [Bindable(true)]
        public string RelativeAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("Relative_Address");
		    }
            set 
		    {
			    SetColumnValue("Relative_Address", value);
            }
        }
	      
        [XmlAttribute("InsuranceNum")]
        [Bindable(true)]
        public string InsuranceNum 
	    {
		    get
		    {
			    return GetColumnValue<string>("Insurance_Num");
		    }
            set 
		    {
			    SetColumnValue("Insurance_Num", value);
            }
        }
	      
        [XmlAttribute("InsuranceFromDate")]
        [Bindable(true)]
        public DateTime? InsuranceFromDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Insurance_FromDate");
		    }
            set 
		    {
			    SetColumnValue("Insurance_FromDate", value);
            }
        }
	      
        [XmlAttribute("InsuranceToDate")]
        [Bindable(true)]
        public DateTime? InsuranceToDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Insurance_ToDate");
		    }
            set 
		    {
			    SetColumnValue("Insurance_ToDate", value);
            }
        }
	      
        [XmlAttribute("InsuranceSupply")]
        [Bindable(true)]
        public string InsuranceSupply 
	    {
		    get
		    {
			    return GetColumnValue<string>("Insurance_Supply");
		    }
            set 
		    {
			    SetColumnValue("Insurance_Supply", value);
            }
        }
	      
        [XmlAttribute("InsClinicCode")]
        [Bindable(true)]
        public string InsClinicCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("InsClinic_Code");
		    }
            set 
		    {
			    SetColumnValue("InsClinic_Code", value);
            }
        }
	      
        [XmlAttribute("InsObjectCode")]
        [Bindable(true)]
        public string InsObjectCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("InsObject_Code");
		    }
            set 
		    {
			    SetColumnValue("InsObject_Code", value);
            }
        }
	      
        [XmlAttribute("InputDate")]
        [Bindable(true)]
        public DateTime InputDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("Input_Date");
		    }
            set 
		    {
			    SetColumnValue("Input_Date", value);
            }
        }
	      
        [XmlAttribute("UserId")]
        [Bindable(true)]
        public string UserId 
	    {
		    get
		    {
			    return GetColumnValue<string>("User_ID");
		    }
            set 
		    {
			    SetColumnValue("User_ID", value);
            }
        }
	      
        [XmlAttribute("HosStatus")]
        [Bindable(true)]
        public byte HosStatus 
	    {
		    get
		    {
			    return GetColumnValue<byte>("Hos_status");
		    }
            set 
		    {
			    SetColumnValue("Hos_status", value);
            }
        }
	      
        [XmlAttribute("DiscountRate")]
        [Bindable(true)]
        public decimal? DiscountRate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Discount_Rate");
		    }
            set 
		    {
			    SetColumnValue("Discount_Rate", value);
            }
        }
	      
        [XmlAttribute("DiscountType")]
        [Bindable(true)]
        public byte? DiscountType 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Discount_Type");
		    }
            set 
		    {
			    SetColumnValue("Discount_Type", value);
            }
        }
	      
        [XmlAttribute("OrgirinMoney")]
        [Bindable(true)]
        public decimal? OrgirinMoney 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("OrgirinMoney");
		    }
            set 
		    {
			    SetColumnValue("OrgirinMoney", value);
            }
        }
	      
        [XmlAttribute("LastMoney")]
        [Bindable(true)]
        public decimal? LastMoney 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("LastMoney");
		    }
            set 
		    {
			    SetColumnValue("LastMoney", value);
            }
        }
	      
        [XmlAttribute("Desc")]
        [Bindable(true)]
        public string Desc 
	    {
		    get
		    {
			    return GetColumnValue<string>("Desc");
		    }
            set 
		    {
			    SetColumnValue("Desc", value);
            }
        }
	      
        [XmlAttribute("Locked")]
        [Bindable(true)]
        public byte? Locked 
	    {
		    get
		    {
			    return GetColumnValue<byte?>("Locked");
		    }
            set 
		    {
			    SetColumnValue("Locked", value);
            }
        }
	      
        [XmlAttribute("DeleteBy")]
        [Bindable(true)]
        public string DeleteBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("Delete_By");
		    }
            set 
		    {
			    SetColumnValue("Delete_By", value);
            }
        }
	      
        [XmlAttribute("DeleteDate")]
        [Bindable(true)]
        public DateTime? DeleteDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Delete_Date");
		    }
            set 
		    {
			    SetColumnValue("Delete_Date", value);
            }
        }
	      
        [XmlAttribute("ReasonBy")]
        [Bindable(true)]
        public string ReasonBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("Reason_By");
		    }
            set 
		    {
			    SetColumnValue("Reason_By", value);
            }
        }
	      
        [XmlAttribute("IndentityNo")]
        [Bindable(true)]
        public long? IndentityNo 
	    {
		    get
		    {
			    return GetColumnValue<long?>("Indentity_No");
		    }
            set 
		    {
			    SetColumnValue("Indentity_No", value);
            }
        }
	      
        [XmlAttribute("ObjectTypeName")]
        [Bindable(true)]
        public string ObjectTypeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("Object_Type_Name");
		    }
            set 
		    {
			    SetColumnValue("Object_Type_Name", value);
            }
        }
	      
        [XmlAttribute("Status")]
        [Bindable(true)]
        public string Status 
	    {
		    get
		    {
			    return GetColumnValue<string>("STATUS");
		    }
            set 
		    {
			    SetColumnValue("STATUS", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string PatientId = @"Patient_ID";
            
            public static string PatientCode = @"Patient_Code";
            
            public static string ObjectTypeId = @"ObjectType_ID";
            
            public static string HosTrans = @"Hos_Trans";
            
            public static string RelativeName = @"Relative_Name";
            
            public static string RelativePhone = @"Relative_Phone";
            
            public static string RelativeAddress = @"Relative_Address";
            
            public static string InsuranceNum = @"Insurance_Num";
            
            public static string InsuranceFromDate = @"Insurance_FromDate";
            
            public static string InsuranceToDate = @"Insurance_ToDate";
            
            public static string InsuranceSupply = @"Insurance_Supply";
            
            public static string InsClinicCode = @"InsClinic_Code";
            
            public static string InsObjectCode = @"InsObject_Code";
            
            public static string InputDate = @"Input_Date";
            
            public static string UserId = @"User_ID";
            
            public static string HosStatus = @"Hos_status";
            
            public static string DiscountRate = @"Discount_Rate";
            
            public static string DiscountType = @"Discount_Type";
            
            public static string OrgirinMoney = @"OrgirinMoney";
            
            public static string LastMoney = @"LastMoney";
            
            public static string Desc = @"Desc";
            
            public static string Locked = @"Locked";
            
            public static string DeleteBy = @"Delete_By";
            
            public static string DeleteDate = @"Delete_Date";
            
            public static string ReasonBy = @"Reason_By";
            
            public static string IndentityNo = @"Indentity_No";
            
            public static string ObjectTypeName = @"Object_Type_Name";
            
            public static string Status = @"STATUS";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
