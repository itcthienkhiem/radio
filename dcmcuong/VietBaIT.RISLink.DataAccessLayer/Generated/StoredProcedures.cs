using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.RISLink.DataAccessLayer{
    public partial class SPs{
        
        /// <summary>
        /// Creates an object wrapper for the BACHMAI_RIS_LAYSOPHIEU_THEOPHONG Procedure
        /// </summary>
        public static StoredProcedure BachmaiRisLaysophieuTheophong(string MAPBAN, DateTime? DatetimeX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("BACHMAI_RIS_LAYSOPHIEU_THEOPHONG", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@MAPBAN", MAPBAN, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Datetime", DatetimeX, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the BACHMAI_RIS_LAYTHONGTIN_DICHVU Procedure
        /// </summary>
        public static StoredProcedure BachmaiRisLaythongtinDichvu(string MaKieuDV, string MaDTUONG, string TenDVu)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("BACHMAI_RIS_LAYTHONGTIN_DICHVU", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@MaKieuDV", MaKieuDV, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Ma_DTUONG", MaDTUONG, DbType.String, null, null);
        	
            sp.Command.AddParameter("@TenDVu", TenDVu, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_addtosourcecontrol Procedure
        /// </summary>
        public static StoredProcedure DtAddtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_addtosourcecontrol", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@vchSourceSafeINI", vchSourceSafeINI, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchProjectName", vchProjectName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_addtosourcecontrol_u Procedure
        /// </summary>
        public static StoredProcedure DtAddtosourcecontrolU(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_addtosourcecontrol_u", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@vchSourceSafeINI", vchSourceSafeINI, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchProjectName", vchProjectName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_adduserobject Procedure
        /// </summary>
        public static StoredProcedure DtAdduserobject()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_adduserobject", DataService.GetInstance("ORM"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_adduserobject_vcs Procedure
        /// </summary>
        public static StoredProcedure DtAdduserobjectVcs(string vchProperty)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_adduserobject_vcs", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@vchProperty", vchProperty, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_checkinobject Procedure
        /// </summary>
        public static StoredProcedure DtCheckinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, int? iVCSFlags, int? iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_checkinobject", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@iVCSFlags", iVCSFlags, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iActionFlag", iActionFlag, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@txStream1", txStream1, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@txStream2", txStream2, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@txStream3", txStream3, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_checkinobject_u Procedure
        /// </summary>
        public static StoredProcedure DtCheckinobjectU(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, int? iVCSFlags, int? iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_checkinobject_u", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            sp.Command.AddParameter("@iVCSFlags", iVCSFlags, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iActionFlag", iActionFlag, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@txStream1", txStream1, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@txStream2", txStream2, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@txStream3", txStream3, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_checkoutobject Procedure
        /// </summary>
        public static StoredProcedure DtCheckoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, int? iVCSFlags, int? iActionFlag)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_checkoutobject", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@iVCSFlags", iVCSFlags, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iActionFlag", iActionFlag, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_checkoutobject_u Procedure
        /// </summary>
        public static StoredProcedure DtCheckoutobjectU(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, int? iVCSFlags, int? iActionFlag)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_checkoutobject_u", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            sp.Command.AddParameter("@iVCSFlags", iVCSFlags, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iActionFlag", iActionFlag, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_displayoaerror Procedure
        /// </summary>
        public static StoredProcedure DtDisplayoaerror(int? iObject, int? iresult)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_displayoaerror", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@iObject", iObject, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iresult", iresult, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_displayoaerror_u Procedure
        /// </summary>
        public static StoredProcedure DtDisplayoaerrorU(int? iObject, int? iresult)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_displayoaerror_u", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@iObject", iObject, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iresult", iresult, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_droppropertiesbyid Procedure
        /// </summary>
        public static StoredProcedure DtDroppropertiesbyid(int? id, string propertyX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_droppropertiesbyid", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_dropuserobjectbyid Procedure
        /// </summary>
        public static StoredProcedure DtDropuserobjectbyid(int? id)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_dropuserobjectbyid", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_generateansiname Procedure
        /// </summary>
        public static StoredProcedure DtGenerateansiname(string name)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_generateansiname", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddOutputParameter("@name", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getobjwithprop Procedure
        /// </summary>
        public static StoredProcedure DtGetobjwithprop(string propertyX, string valueX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getobjwithprop", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@value", valueX, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getobjwithprop_u Procedure
        /// </summary>
        public static StoredProcedure DtGetobjwithpropU(string propertyX, string uvalue)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getobjwithprop_u", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@uvalue", uvalue, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getpropertiesbyid Procedure
        /// </summary>
        public static StoredProcedure DtGetpropertiesbyid(int? id, string propertyX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getpropertiesbyid", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getpropertiesbyid_u Procedure
        /// </summary>
        public static StoredProcedure DtGetpropertiesbyidU(int? id, string propertyX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getpropertiesbyid_u", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getpropertiesbyid_vcs Procedure
        /// </summary>
        public static StoredProcedure DtGetpropertiesbyidVcs(int? id, string propertyX, string valueX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getpropertiesbyid_vcs", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@value", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getpropertiesbyid_vcs_u Procedure
        /// </summary>
        public static StoredProcedure DtGetpropertiesbyidVcsU(int? id, string propertyX, string valueX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getpropertiesbyid_vcs_u", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@value", DbType.String, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_isundersourcecontrol Procedure
        /// </summary>
        public static StoredProcedure DtIsundersourcecontrol(string vchLoginName, string vchPassword, int? iWhoToo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_isundersourcecontrol", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@iWhoToo", iWhoToo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_isundersourcecontrol_u Procedure
        /// </summary>
        public static StoredProcedure DtIsundersourcecontrolU(string vchLoginName, string vchPassword, int? iWhoToo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_isundersourcecontrol_u", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            sp.Command.AddParameter("@iWhoToo", iWhoToo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_removefromsourcecontrol Procedure
        /// </summary>
        public static StoredProcedure DtRemovefromsourcecontrol()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_removefromsourcecontrol", DataService.GetInstance("ORM"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_setpropertybyid Procedure
        /// </summary>
        public static StoredProcedure DtSetpropertybyid(int? id, string propertyX, string valueX, byte[] lvalue)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_setpropertybyid", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@value", valueX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@lvalue", lvalue, DbType.Binary, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_setpropertybyid_u Procedure
        /// </summary>
        public static StoredProcedure DtSetpropertybyidU(int? id, string propertyX, string uvalue, byte[] lvalue)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_setpropertybyid_u", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@uvalue", uvalue, DbType.String, null, null);
        	
            sp.Command.AddParameter("@lvalue", lvalue, DbType.Binary, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_validateloginparams Procedure
        /// </summary>
        public static StoredProcedure DtValidateloginparams(string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_validateloginparams", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_validateloginparams_u Procedure
        /// </summary>
        public static StoredProcedure DtValidateloginparamsU(string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_validateloginparams_u", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_vcsenabled Procedure
        /// </summary>
        public static StoredProcedure DtVcsenabled()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_vcsenabled", DataService.GetInstance("ORM"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_verstamp006 Procedure
        /// </summary>
        public static StoredProcedure DtVerstamp006()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_verstamp006", DataService.GetInstance("ORM"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_whocheckedout Procedure
        /// </summary>
        public static StoredProcedure DtWhocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_whocheckedout", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_whocheckedout_u Procedure
        /// </summary>
        public static StoredProcedure DtWhocheckedoutU(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_whocheckedout_u", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetMa_NhanVien Procedure
        /// </summary>
        public static StoredProcedure GetMaNhanVien(string PatientCode)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetMa_NhanVien", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddOutputParameter("@PatientCode", DbType.String, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetPatientCode Procedure
        /// </summary>
        public static StoredProcedure GetPatientCode(string PatientCode)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetPatientCode", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddOutputParameter("@PatientCode", DbType.String, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the KETNOI_INSERT_THONGTIN_BENHNHAN Procedure
        /// </summary>
        public static StoredProcedure KetnoiInsertThongtinBenhnhan(string PID, string SoBA, string TenBenhNhan, int? NamSinh, int? GioiTinh, DateTime? NgaySinh, string DiaChi, string MADOITUONG, string MaBenh, string Chandoan, string SoPhong, string SoGiuong, string SOBHYT, int? IDKhoaCD, int? TrangThai, string NguoiTao)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("KETNOI_INSERT_THONGTIN_BENHNHAN", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@PID", PID, DbType.String, null, null);
        	
            sp.Command.AddParameter("@SoBA", SoBA, DbType.String, null, null);
        	
            sp.Command.AddParameter("@TenBenhNhan", TenBenhNhan, DbType.String, null, null);
        	
            sp.Command.AddParameter("@NamSinh", NamSinh, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@GioiTinh", GioiTinh, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@NgaySinh", NgaySinh, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@DiaChi", DiaChi, DbType.String, null, null);
        	
            sp.Command.AddParameter("@MA_DOITUONG", MADOITUONG, DbType.String, null, null);
        	
            sp.Command.AddParameter("@MaBenh", MaBenh, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Chandoan", Chandoan, DbType.String, null, null);
        	
            sp.Command.AddParameter("@SoPhong", SoPhong, DbType.String, null, null);
        	
            sp.Command.AddParameter("@SoGiuong", SoGiuong, DbType.String, null, null);
        	
            sp.Command.AddParameter("@SO_BHYT", SOBHYT, DbType.String, null, null);
        	
            sp.Command.AddParameter("@IDKhoaCD", IDKhoaCD, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@TrangThai", TrangThai, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@NguoiTao", NguoiTao, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the KETNOI_LAY_THONGTIN_PHIEU Procedure
        /// </summary>
        public static StoredProcedure KetnoiLayThongtinPhieu(string SoPhieu)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("KETNOI_LAY_THONGTIN_PHIEU", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@SoPhieu", SoPhieu, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the KETNOI_LayMa_PID Procedure
        /// </summary>
        public static StoredProcedure KetnoiLayMaPid(DateTime? DatetimeX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("KETNOI_LayMa_PID", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@Datetime", DatetimeX, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the KETNOI_RIS_LAYTHONGTIN_DICHVU Procedure
        /// </summary>
        public static StoredProcedure KetnoiRisLaythongtinDichvu(string MaKieuDV)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("KETNOI_RIS_LAYTHONGTIN_DICHVU", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@MaKieuDV", MaKieuDV, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the KETNOI_Sinh_BarCode_XN Procedure
        /// </summary>
        public static StoredProcedure KetnoiSinhBarCodeXn(DateTime? DatetimeX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("KETNOI_Sinh_BarCode_XN", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@Datetime", DatetimeX, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the RIS_BAOCAO_DSACH_BNHAN Procedure
        /// </summary>
        public static StoredProcedure RisBaocaoDsachBnhan(DateTime? FromDate, DateTime? ToDate, string MaDtuong, string GTinh, int? HosStaus, string UserName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("RIS_BAOCAO_DSACH_BNHAN", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@FromDate", FromDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ToDate", ToDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@Ma_Dtuong", MaDtuong, DbType.String, null, null);
        	
            sp.Command.AddParameter("@GTinh", GTinh, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Hos_Staus", HosStaus, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the RIS_BAOCAO_SLUONG_DVU Procedure
        /// </summary>
        public static StoredProcedure RisBaocaoSluongDvu(DateTime? FromDate, DateTime? ToDate, string IDKhoaCD, int? DichVu, string NguoiDung, int? TrangThai)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("RIS_BAOCAO_SLUONG_DVU", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@FromDate", FromDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ToDate", ToDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ID_KhoaCD", IDKhoaCD, DbType.String, null, null);
        	
            sp.Command.AddParameter("@DichVu", DichVu, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@NguoiDung", NguoiDung, DbType.String, null, null);
        	
            sp.Command.AddParameter("@TrangThai", TrangThai, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the RIS_IN_PHIEU_KETQUA Procedure
        /// </summary>
        public static StoredProcedure RisInPhieuKetqua(int? IDPhieuChiTiet)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("RIS_IN_PHIEU_KETQUA", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@IDPhieuChiTiet", IDPhieuChiTiet, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the RIS_LayPhieuChiTiet Procedure
        /// </summary>
        public static StoredProcedure RisLayPhieuChiTiet(int? IDBenhNhan, string PID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("RIS_LayPhieuChiTiet", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@IDBenhNhan", IDBenhNhan, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PID", PID, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the RIS_LAYTHONGTIN_DICHVU Procedure
        /// </summary>
        public static StoredProcedure RisLaythongtinDichvu(string MaKieuDV, string MaDTUONG)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("RIS_LAYTHONGTIN_DICHVU", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@MaKieuDV", MaKieuDV, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Ma_DTUONG", MaDTUONG, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the RIS_LAYTHONGTIN_QHE_TBI_DICHVU Procedure
        /// </summary>
        public static StoredProcedure RisLaythongtinQheTbiDichvu(int? IDDVu, int? IDLoaiDvu)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("RIS_LAYTHONGTIN_QHE_TBI_DICHVU", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@ID_DVu", IDDVu, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@ID_Loai_Dvu", IDLoaiDvu, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the RIS_LayThongTinPhieu Procedure
        /// </summary>
        public static StoredProcedure RisLayThongTinPhieu(int? IDPhieu, int? TrangThai, int? DaIn, string KieuDVu)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("RIS_LayThongTinPhieu", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@ID_Phieu", IDPhieu, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@TrangThai", TrangThai, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DaIn", DaIn, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@KieuDVu", KieuDVu, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the RIS_SearchDanhMucChung Procedure
        /// </summary>
        public static StoredProcedure RisSearchDanhMucChung(string Loai, string Ma)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("RIS_SearchDanhMucChung", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@Loai", Loai, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Ma", Ma, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the RIS_SINHMA_PHIEU Procedure
        /// </summary>
        public static StoredProcedure RisSinhmaPhieu(DateTime? DatetimeX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("RIS_SINHMA_PHIEU", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@Datetime", DatetimeX, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the RIS_THONGTIN_QHE_PBAN_DICHVU Procedure
        /// </summary>
        public static StoredProcedure RisThongtinQhePbanDichvu(int? IDPBAN)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("RIS_THONGTIN_QHE_PBAN_DICHVU", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@ID_PBAN", IDPBAN, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the RIS_THONGTIN_QHE_PBAN_TBI_DICHVU Procedure
        /// </summary>
        public static StoredProcedure RisThongtinQhePbanTbiDichvu(string MaTBi, int? IDPBAN)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("RIS_THONGTIN_QHE_PBAN_TBI_DICHVU", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@Ma_TBi", MaTBi, DbType.String, null, null);
        	
            sp.Command.AddParameter("@ID_PBAN", IDPBAN, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the RIS_TIMKIEM_CHUYENPHONG Procedure
        /// </summary>
        public static StoredProcedure RisTimkiemChuyenphong(DateTime? FromDate, DateTime? ToDate, int? TrangThai, string TenBNhan, string Gtinh, string MaDoiTuong, int? IDPhieu, string MaPhieu, int? IDDichVu, int? DaIn, int? IDKHOATHIEN, string MaTBi, string KieuDVu)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("RIS_TIMKIEM_CHUYENPHONG", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@FromDate", FromDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ToDate", ToDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@TrangThai", TrangThai, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@TenBNhan", TenBNhan, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Gtinh", Gtinh, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Ma_DoiTuong", MaDoiTuong, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ID_Phieu", IDPhieu, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@MaPhieu", MaPhieu, DbType.String, null, null);
        	
            sp.Command.AddParameter("@ID_DichVu", IDDichVu, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DaIn", DaIn, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@ID_KHOA_THIEN", IDKHOATHIEN, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Ma_TBi", MaTBi, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@KieuDVu", KieuDVu, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the RIS_TIMKIEM_NHAPKETQUA Procedure
        /// </summary>
        public static StoredProcedure RisTimkiemNhapketqua(DateTime? FromDate, DateTime? ToDate, int? TrangThai, string TenBNhan, string Gtinh, string MaDoiTuong, int? IDPhieu, string MaPhieu, int? IDDichVu, int? DaIn, int? IDKHOATHIEN, string MaTBi, string KieuDVu)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("RIS_TIMKIEM_NHAPKETQUA", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@FromDate", FromDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ToDate", ToDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@TrangThai", TrangThai, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@TenBNhan", TenBNhan, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Gtinh", Gtinh, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Ma_DoiTuong", MaDoiTuong, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ID_Phieu", IDPhieu, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@MaPhieu", MaPhieu, DbType.String, null, null);
        	
            sp.Command.AddParameter("@ID_DichVu", IDDichVu, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DaIn", DaIn, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@ID_KHOA_THIEN", IDKHOATHIEN, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Ma_TBi", MaTBi, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@KieuDVu", KieuDVu, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the spGetTestList Procedure
        /// </summary>
        public static StoredProcedure SpGetTestList(string pToDate, string pFromDate, string pPatientID, string pPatientName, short? pLoai)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("spGetTestList", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@pToDate", pToDate, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pFromDate", pFromDate, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pPatientID", pPatientID, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pPatientName", pPatientName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pLoai", pLoai, DbType.Int16, 0, 5);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the spGetTestList_Data_Sync Procedure
        /// </summary>
        public static StoredProcedure SpGetTestListDataSync(string pToDate, string pFromDate, string pPatientID, string pPatientName, short? pLoai)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("spGetTestList_Data_Sync", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@pToDate", pToDate, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pFromDate", pFromDate, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pPatientID", pPatientID, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pPatientName", pPatientName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pLoai", pLoai, DbType.Int16, 0, 5);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the spGetTestListForInsert2 Procedure
        /// </summary>
        public static StoredProcedure SpGetTestListForInsert2(string PID, string pAeTitle)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("spGetTestListForInsert2", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@PID", PID, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pAeTitle", pAeTitle, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the spGetTestListFromPid Procedure
        /// </summary>
        public static StoredProcedure SpGetTestListFromPid(string pID, string pAETITLE)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("spGetTestListFromPid", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@pID", pID, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pAETITLE", pAETITLE, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the spInsertTestResultGT Procedure
        /// </summary>
        public static StoredProcedure SpInsertTestResultGT(long? pTESTID, long? pPATIENTID, int? pTestTypeID, string pTestDate, string pBarcode, string pParaName, string pImageFolder, string pNote, string StudyInstanseUid, string SERIESINSTANCEUID, string SOPINSTANCEUID, string Position)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("spInsertTestResultGT", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@pTEST_ID", pTESTID, DbType.Int64, 0, 19);
        	
            sp.Command.AddParameter("@pPATIENT_ID", pPATIENTID, DbType.Int64, 0, 19);
        	
            sp.Command.AddParameter("@pTestType_ID", pTestTypeID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@pTestDate", pTestDate, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pBarcode", pBarcode, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pParaName", pParaName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pImageFolder", pImageFolder, DbType.String, null, null);
        	
            sp.Command.AddParameter("@pNote", pNote, DbType.String, null, null);
        	
            sp.Command.AddParameter("@StudyInstanseUid", StudyInstanseUid, DbType.String, null, null);
        	
            sp.Command.AddParameter("@SERIES_INSTANCE_UID", SERIESINSTANCEUID, DbType.String, null, null);
        	
            sp.Command.AddParameter("@SOP_INSTANCE_UID", SOPINSTANCEUID, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Position", Position, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the TIM_THONGTIN_BENHNHAN Procedure
        /// </summary>
        public static StoredProcedure TimThongtinBenhnhan(int? IDBenhNhan, string PID, string TenBenhNhan, string GioiTinh, DateTime? FromDate, DateTime? ToDate, string MaDTuong)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("TIM_THONGTIN_BENHNHAN", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@ID_BenhNhan", IDBenhNhan, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PID", PID, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Ten_BenhNhan", TenBenhNhan, DbType.String, null, null);
        	
            sp.Command.AddParameter("@GioiTinh", GioiTinh, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@FromDate", FromDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ToDate", ToDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@Ma_DTuong", MaDTuong, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the TrunCateTable Procedure
        /// </summary>
        public static StoredProcedure TrunCateTable()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("TrunCateTable", DataService.GetInstance("ORM"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the YHHQ_PhieuHinhAnh Procedure
        /// </summary>
        public static StoredProcedure YhhqPhieuHinhAnh(int? AssignDetailID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("YHHQ_PhieuHinhAnh", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@AssignDetail_ID", AssignDetailID, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the YHHQ_RIS_TIMKIEM_NHAPKETQUA_SIEUAM Procedure
        /// </summary>
        public static StoredProcedure YhhqRisTimkiemNhapketquaSieuam(DateTime? FromDate, DateTime? ToDate, int? TrangThai, string TenBNhan, string Gtinh, string MaDoiTuong, int? IDPhieu, string MaPhieu, int? IDDichVu, int? DaIn, int? IDKHOATHIEN, string KieuDVu)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("YHHQ_RIS_TIMKIEM_NHAPKETQUA_SIEUAM", DataService.GetInstance("ORM"), "dbo");
        	
            sp.Command.AddParameter("@FromDate", FromDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ToDate", ToDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@TrangThai", TrangThai, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@TenBNhan", TenBNhan, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Gtinh", Gtinh, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Ma_DoiTuong", MaDoiTuong, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ID_Phieu", IDPhieu, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@MaPhieu", MaPhieu, DbType.String, null, null);
        	
            sp.Command.AddParameter("@ID_DichVu", IDDichVu, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DaIn", DaIn, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@ID_KHOA_THIEN", IDKHOATHIEN, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@KieuDVu", KieuDVu, DbType.String, null, null);
        	
            return sp;
        }
        
    }
    
}
