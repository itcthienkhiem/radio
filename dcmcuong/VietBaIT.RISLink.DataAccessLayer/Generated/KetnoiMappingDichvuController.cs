using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace VietBaIT.RISLink.DataAccessLayer
{
    /// <summary>
    /// Controller class for KETNOI_MAPPING_DICHVU
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class KetnoiMappingDichvuController
    {
        // Preload our schema..
        KetnoiMappingDichvu thisSchemaLoad = new KetnoiMappingDichvu();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public KetnoiMappingDichvuCollection FetchAll()
        {
            KetnoiMappingDichvuCollection coll = new KetnoiMappingDichvuCollection();
            Query qry = new Query(KetnoiMappingDichvu.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public KetnoiMappingDichvuCollection FetchByID(object Id)
        {
            KetnoiMappingDichvuCollection coll = new KetnoiMappingDichvuCollection().Where("ID", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public KetnoiMappingDichvuCollection FetchByQuery(Query qry)
        {
            KetnoiMappingDichvuCollection coll = new KetnoiMappingDichvuCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (KetnoiMappingDichvu.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (KetnoiMappingDichvu.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? HisIdDvu,string HisMaDvu,string HisTenDvu,int? HisIdLoaiDvu,string HisMaLoaiDvu,string HisTenLoaiDvu,string HisIdTenDvu,string HisMaKieuDvu,int? RisIdDvu,string RisMaDvu,string RisTenDvu,int? RisIdLoaiDvu,string RisMaLoaiDvu,string RisTenLoaiDvu,string RisMaKieuDvu)
	    {
		    KetnoiMappingDichvu item = new KetnoiMappingDichvu();
		    
            item.HisIdDvu = HisIdDvu;
            
            item.HisMaDvu = HisMaDvu;
            
            item.HisTenDvu = HisTenDvu;
            
            item.HisIdLoaiDvu = HisIdLoaiDvu;
            
            item.HisMaLoaiDvu = HisMaLoaiDvu;
            
            item.HisTenLoaiDvu = HisTenLoaiDvu;
            
            item.HisIdTenDvu = HisIdTenDvu;
            
            item.HisMaKieuDvu = HisMaKieuDvu;
            
            item.RisIdDvu = RisIdDvu;
            
            item.RisMaDvu = RisMaDvu;
            
            item.RisTenDvu = RisTenDvu;
            
            item.RisIdLoaiDvu = RisIdLoaiDvu;
            
            item.RisMaLoaiDvu = RisMaLoaiDvu;
            
            item.RisTenLoaiDvu = RisTenLoaiDvu;
            
            item.RisMaKieuDvu = RisMaKieuDvu;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,int? HisIdDvu,string HisMaDvu,string HisTenDvu,int? HisIdLoaiDvu,string HisMaLoaiDvu,string HisTenLoaiDvu,string HisIdTenDvu,string HisMaKieuDvu,int? RisIdDvu,string RisMaDvu,string RisTenDvu,int? RisIdLoaiDvu,string RisMaLoaiDvu,string RisTenLoaiDvu,string RisMaKieuDvu)
	    {
		    KetnoiMappingDichvu item = new KetnoiMappingDichvu();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.HisIdDvu = HisIdDvu;
				
			item.HisMaDvu = HisMaDvu;
				
			item.HisTenDvu = HisTenDvu;
				
			item.HisIdLoaiDvu = HisIdLoaiDvu;
				
			item.HisMaLoaiDvu = HisMaLoaiDvu;
				
			item.HisTenLoaiDvu = HisTenLoaiDvu;
				
			item.HisIdTenDvu = HisIdTenDvu;
				
			item.HisMaKieuDvu = HisMaKieuDvu;
				
			item.RisIdDvu = RisIdDvu;
				
			item.RisMaDvu = RisMaDvu;
				
			item.RisTenDvu = RisTenDvu;
				
			item.RisIdLoaiDvu = RisIdLoaiDvu;
				
			item.RisMaLoaiDvu = RisMaLoaiDvu;
				
			item.RisTenLoaiDvu = RisTenLoaiDvu;
				
			item.RisMaKieuDvu = RisMaKieuDvu;
				
	        item.Save(UserName);
	    }
    }
}
