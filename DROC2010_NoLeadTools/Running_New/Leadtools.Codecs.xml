<?xml version="1.0"?>
<doc processed="true">
  <assembly>
    <name>Leadtools.Codecs</name>
  </assembly>
  <members>
    <member name="T:Leadtools.Codecs.CodecsXpsLoadOptions">
      <summary>Provides the options for loading Open XML Paper Specification (XPS) documents as a raster image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>XML Paper Specification|XPS</keywords>
      <remarks>
        <para>Open XML Paper Specification (XPS) files have no physical width or height in pixels. You can use
            the <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentOptions" /> to control
            how the final document is rendered as a raster image. For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
        <para>For more information, refer to  <see cref="T:L.Topics.FileFormatsXPSFormat">File Formats - XPS Format</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsXpsOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsXpsSaveOptions">
      <summary>Provides the options for saving a raster image as an Open XML Paper Specification (XPS) document. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>XML Paper Specification|XPS</keywords>
      <remarks>
        <para>The Open XML Paper Specification Format supports saving images with either PNG or JPEG Compression.</para>
        <para>The following table shows the quality factor used when an image is saved with a particular
            format:</para>
        <list type="table">
          <listheader>
            <term>Format</term>
            <description>Property</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.Xps</see>
            </term>
            <description>
              <see cref="P:Leadtools.Codecs.CodecsXpsSaveOptions.PngQualityFactor">CodecsXpsSaveOptions.PngQualityFactor</see>
            </description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.XpsJpeg</see>
            </term>
            <description>
              <see cref="P:Leadtools.Codecs.CodecsXpsSaveOptions.PngQualityFactor">CodecsXpsSaveOptions.JpegQualityFactor</see>
            </description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.XpsJpeg422</see>
            </term>
            <description>
              <see cref="P:Leadtools.Codecs.CodecsXpsSaveOptions.PngQualityFactor">CodecsXpsSaveOptions.JpegQualityFactor</see>
            </description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.XpsJpeg411</see>
            </term>
            <description>
              <see cref="P:Leadtools.Codecs.CodecsXpsSaveOptions.PngQualityFactor">CodecsXpsSaveOptions.JpegQualityFactor</see>
            </description>
          </item>
        </list>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsXpsOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsXpsSaveOptions.PngQualityFactor">
      <summary>Gets or sets the PNG quality factor used saving a raster image as an Open XML Paper Specification (XPS) document. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>XML Paper Specification|XPS</keywords>
      <value>
            Any value between 0 and 9. 0 = (default compression), 1 (fastest compression) ...
            9 (highest compression ratio). Default value is 3.
            </value>
      <remarks>
            The <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will use the <see cref="P:Leadtools.Codecs.CodecsXpsSaveOptions.PngQualityFactor" /> value when images are
            saved with the <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.Xps</see> format.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsXpsOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsXpsSaveOptions.JpegQualityFactor">
      <summary>Gets or sets the JPEG quality factor used saving a raster image as an Open XML Paper Specification (XPS) document. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>XML Paper Specification|XPS</keywords>
      <value>
            A value from 2 to 255, where 2 is the highest quality and 255 is the most compression. You can also use
            a factor of 0 to produce lossless JPEG compressed images. Default value is 2 (Highest quality).
            </value>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will use the <see cref="P:Leadtools.Codecs.CodecsXpsSaveOptions.JpegQualityFactor" /> value when images are
            saved with the following formats:</para>
        <para>
          <list type="bullet">
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.XpsJpeg</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.XpsJpeg422</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.XpsJpeg411</see>
              </description>
            </item>
          </list>
        </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsXpsOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsXpsOptions">
      <summary>Provides the options for loading or saving an Open XML Paper Specification (XPS) document. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>XML Paper Specification|XPS</keywords>
      <remarks>
        <para>Open XML Paper Specification (XPS) files have no physical width or height in pixels. You can use
            the <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentOptions" /> to control
            how the final document is rendered as a raster image. For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
        <para>For more information, refer to  <see cref="T:L.Topics.FileFormatsXPSFormat">File Formats - XPS Format</see>.</para>
      </remarks>
      <example>
        <!--CodecsXpsOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsXpsOptions.Load">
      <summary>Get the object to set the options for loading Open XML Paper Specification (XPS) documents as a raster image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>XML Paper Specification|XPS</keywords>
      <value>The XPS options used to load Open XML Paper Specification (XPS) documents as a raster image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsXpsOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsXpsOptions.Save">
      <summary>Get the object to set the options for saving a raster image as an Open XML Paper Specification (XPS) document. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>XML Paper Specification|XPS</keywords>
      <value>The XPS options used to save Open XML Paper Specification (XPS) documents as a raster image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsXpsOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsExtension">
      <summary>Exif extension information. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
            For more information on this class members and their use, refer to the Exif documentation for the "FlashPix" extensions,
            inside the APP2 markers.
            </remarks>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
      <objectivec>
        <pre>@interface LTCodecsExtension : NSObject {</pre>
      </objectivec>
      <java>
        <pre>public final class CodecsExtension</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsExtension.Name">
      <summary>Gets the name of the extension. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.String" /> that represents the name of the extension.</value>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, copy) NSString* name;</pre>
      </objectivec>
      <java>
        <pre>public String getName()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsExtension.Data">
      <summary>Gets an unmanaged pointer to the extension data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>An <see cref="T:System.IntPtr" /> that points to the unmanaged extension data. If the extension data is a stream, this
            property will be IntPtr.Zero.</value>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) NSData* data;</pre>
      </objectivec>
      <java>
        <pre>public byte[] getData()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsExtension.DataLength">
      <summary>Gets the size in bytes of the extension data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The size in bytes of the extension data. If the extension data is a stream, this value should be 0xFFFFFFFF</value>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
      <java>
        <pre>public long getDataLength()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsExtension.Clsid">
      <summary>Gets the CLSID that describes the extension data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.Guid" /> that describes the extension data.  This is valid only if <see cref="P:Leadtools.Codecs.CodecsExtension.DataLength" /> is 0xFFFFFFFF.</value>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) CFUUIDRef clsid;</pre>
      </objectivec>
      <java>
        <pre>public UUID getClsid()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsExtension.UCDefault">
      <summary>Reserved for internal use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            Reserved for internal use.
            </value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned char ucDefault;</pre>
      </objectivec>
      <java>
        <pre>public byte getUCDefault()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsExtension.Data_WinRT">
      <summary>
            Gets a <see cref="T:Leadtools.RasterNativeBuffer" /> that contains the extension data.
            </summary>
      <value>An <see cref="T:Leadtools.RasterNativeBuffer" /> that contains the extension data.</value>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
      <winrt />
    </member>
    <member name="T:Leadtools.Codecs.CodecsExtensionListFlags">
      <summary>Flags that indicate the type of data contained in the  Exif extensions. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
      <objectivec>
        <pre>typedef unsigned int LTCodecsExtensionListFlags;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsExtensionListFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.Codecs.CodecsExtensionListFlags.None">
      <summary>
            No flags being used.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsExtensionListFlags.Stamp">
      <summary>
        <para>A stamp is present. Most likely suitable for LCD displays (and bigger than the stamp stored in the Exif data).</para>
        <para>The stamp can be loaded with <see cref="M:Leadtools.Codecs.CodecsExtensionList.CreateStamp">CodecsExtensionList.CreateStamp</see>.</para>
        <para>Note that this stamp is independent of the regular stamp present in Exif files. Some Exif files have two stamps. The
            regular stamp is loaded with <see cref="M:Leadtools.Codecs.RasterCodecs.ReadStamp(System.String,System.Int32)">RasterCodecs.ReadStamp</see>, while the extension stamp is
            loaded with <see cref="M:Leadtools.Codecs.CodecsExtensionList.CreateStamp">CodecsExtensionList.CreateStamp</see>.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsExtensionListFlags.Audio">
      <summary>
            Embedded audio data is present. The <see cref="M:Leadtools.Codecs.CodecsExtensionList.GetAudioData(System.Int32)">CodecsExtensionList.GetAudioData</see>
            method can be called to get to the audio data.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsExtensionList">
      <summary>Exif extension information. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
      <objectivec>
        <pre>@interface LTCodecsExtensionList : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsExtensionList</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.CodecsExtensionList.Dispose">
      <summary>Releases all resources used by this <see cref="T:Leadtools.Codecs.CodecsExtensionList" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <seealso cref="T:System.IDisposable" />
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsExtensionList.Finalize">
      <summary>This member overrides <see cref="M:System.Object.Finalize" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <seealso cref="T:System.IDisposable" />
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsExtensionList.Dispose(System.Boolean)">
      <summary>Releases all the resources used by this <see cref="T:Leadtools.Codecs.CodecsExtensionList" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsExtensionList.GetExtensions">
      <summary>Gets an array of objects containing the extension data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <returns>The array of <see cref="T:Leadtools.Codecs.CodecsExtension" /> objects containing the extension data.</returns>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
      <objectivec>
        <pre>-(NSArray*)getExtensions;</pre>
      </objectivec>
      <java>
        <pre>public CodecsExtension[] getExtensions()</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.CodecsExtensionList.CreateStamp">
      <summary>Creates a stamp image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <returns>The stamp image created by this method.</returns>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
      <objectivec>
        <pre>-(LTRasterImage*)createStamp:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage createStamp()</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.CodecsExtensionList.GetAudioData(System.Int32)">
      <summary>Gets the embedded audio data from the specified extension list. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="stream">Index of the audio stream to retrieve. The extensions may have more than one audio stream. This index
            is 0-based. Therefore, the first stream is stream 0, the second stream is stream 1, etc. To retrieve all the audio streams,
            retrieve the streams one by one until an empty <see cref="T:Leadtools.RasterNativeBuffer" /> is returned (empty
            <see cref="T:Leadtools.RasterNativeBuffer" /> will have a <see cref="P:Leadtools.RasterNativeBuffer.Data">RasterNativeBuffer.Data</see> set to
            IntPtr.Zero and <see cref="P:Leadtools.RasterNativeBuffer.Length">RasterNativeBuffer.Length</see> set to 0.</param>
      <returns>A <see cref="T:Leadtools.RasterNativeBuffer" /> object containing the audio data.</returns>
      <remarks>
        <para>The audio data is stored inside extensions in the WAVE format.</para>
        <para>The audio data can be played directly from memory, or the data can be written to a disk file and played from the
            disk. When writing the audio data to a disk file, give the file a .WAV extension.</para>
        <para>The audio data pointer returned is freed automatically when this <see cref="T:Leadtools.Codecs.CodecsExtensionList" /> object is disposed.
            so do not try to free this memory.</para>
      </remarks>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
      <objectivec>
        <pre>-(NSData*)getAudioData:(int)stream error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterNativeBuffer getAudioData(int stream)</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsExtensionList.Flags">
      <summary>Flags that indicate the type of data contained in the extensions. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The extension list flags.</value>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">RasterCodecs.ReadExtensions</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) LTCodecsExtensionListFlags flags;</pre>
      </objectivec>
      <java>
        <pre>public CodecsExtensionListFlags getFlags()</pre>
      </java>
    </member>
    <member name="T:Leadtools.Codecs.CodecsLoadByteOrder">
      <summary>Indicates the desired byte order when loading image files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public enum CodecsLoadByteOrder</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsLoadByteOrder.Rgb">
      <summary>
            Red-green-blue order.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsLoadByteOrder.Bgr">
      <summary>
            Blue-green-red order.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsLoadByteOrder.Gray">
      <summary>
            12 or 16-bit grayscale image.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsLoadByteOrder.RgbOrGray">
      <summary>
            Load the image as red, green, blue OR as a 12 or 16-bit grayscale image.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsLoadByteOrder.BgrOrGray">
      <summary>
            Load the image as blue, green, red OR as a 12 or 16-bit grayscale image.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsLoadByteOrder.Romm">
      <summary>
            ROMM order. ROMM only supports 24 and 48-bit images.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsLoadByteOrder.BgrOrGrayOrRomm">
      <summary>
            Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. ROMM only supports 24 and 48-bit color
            images.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPlanarConfiguration">
      <summary>Indicates the planar configuration of the image data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public enum CodecsPlanarConfiguration</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPlanarConfiguration.Chunky">
      <summary>
            Chunky
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPlanarConfiguration.PlanarFormat">
      <summary>
            Planar format
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPsdChannelType">
      <summary>Indicates the PSD channel type. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.Codecs.CodecsPsdChannelType.Alpha">
      <summary>
            Alpha channel.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPsdChannelType.Red">
      <summary>
            Red channel.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPsdChannelType.Green">
      <summary>
            Green channel.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPsdChannelType.Blue">
      <summary>
            Blue channel.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPsdChannelType.Cyan">
      <summary>
            Cyan channel.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPsdChannelType.Magenta">
      <summary>
            Magenta channel.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPsdChannelType.Yellow">
      <summary>
            Yellow channel.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPsdChannelType.Key">
      <summary>
            Key channel.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPsdChannelType.Gray">
      <summary>
            Gray channel.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPsdChannelType.Bitmap">
      <summary>
            Bitmap channel.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPsdChannelType.Lightness">
      <summary>
            Lightness channel.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPsdChannelType.A">
      <summary>
            A channel.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPsdChannelType.B">
      <summary>
            B channel.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsTiffPhotometricInterpretation">
      <summary>Indicates the photometric interpretation value for TIFF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public enum CodecsTiffPhotometricInterpretation</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTiffPhotometricInterpretation.MinimumIsWhite">
      <summary>
            Grayscale image, minimum value is white.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTiffPhotometricInterpretation.MinimumIsBlack">
      <summary>
            Grayscale image, minimum value is black.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTiffPhotometricInterpretation.Rgb">
      <summary>
            RGB color model.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTiffPhotometricInterpretation.Palette">
      <summary>
            color map indexed (palletized).
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTiffPhotometricInterpretation.Mask">
      <summary>
            1-bit transparency mask.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTiffPhotometricInterpretation.Separated">
      <summary>
            color separations (usually CMYK).
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTiffPhotometricInterpretation.YcbCr">
      <summary>
            CCIR 601 YcbCr image.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTiffPhotometricInterpretation.CieLab">
      <summary>
            1976 CIE L*a*b* image.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsSavePageMode">
      <summary>Indicates the operation to perform when saving multipage files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public enum CodecsSavePageMode</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsSavePageMode.Append">
      <summary>
            Append the page to the end of the file.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsSavePageMode.Insert">
      <summary>
            Insert the page at the specified index.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsSavePageMode.Replace">
      <summary>
            Replace the page at the specified index.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsSavePageMode.Overwrite">
      <summary>
            Overwrite the entire file.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsOverlayCallbackMode">
      <summary>Indicates the overlay callback mode. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <java>
        <pre>public enum CodecsOverlayCallbackMode</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsOverlayCallbackMode.LoadCall">
      <summary>
            First, try loading the overlay image from disk. If the load fails, the <see cref="T:Leadtools.Codecs.CodecsOverlayCallback" /> method will be
            asked to provide the overlay image.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsOverlayCallbackMode.CallLoad">
      <summary>
            First, call the <see cref="T:Leadtools.Codecs.CodecsOverlayCallback" /> method. If the handler did not supply an overlay image, try loading the
            overlay image from disk.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsOverlayCallbackMode.CallOnly">
      <summary>
            Call the <see cref="T:Leadtools.Codecs.CodecsOverlayCallback" /> method. If there is no <see cref="T:Leadtools.Codecs.CodecsOverlayCallback" /> method passed, there
            is no overlay image.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsOverlayCallbackMode.LoadOnly">
      <summary>
            Try to load the overlay image from disk. If the load fails, there is no overlay.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRasterizeDocumentUnit">
      <summary>Specifies the unit of a document page width, height or margins. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentUnit" /> is used to specify the unit of a document page width, height or margins. By using
            this enumeration, you can define document (logical) sizes in pixels, inches or millimeters.</para>
        <para>The CodecsRasterizeDocumentUnit enumeration is used as the value for the following class members:</para>
        <list type="table">
          <listheader>
            <term>Class Member</term>
            <description>Units</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.Unit">CodecsDocumentImageInfo.Unit</see>
            </term>
            <description>
              <para>As the units for <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageWidth">CodecsDocumentImageInfo.PageWidth</see> and
            <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageHeight">CodecsDocumentImageInfo.PageHeight</see></para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit">CodecsRasterizeDocumentLoadOptions.Unit</see>
            </term>
            <description>
              <para>As the units for <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">CodecsRasterizeDocumentLoadOptions.PageWidth</see>,
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">CodecsRasterizeDocumentLoadOptions.PageHeight</see>,
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.LeftMargin">CodecsRasterizeDocumentLoadOptions.LeftMargin</see>,
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.TopMargin">CodecsRasterizeDocumentLoadOptions.TopMargin</see>,
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.RightMargin">CodecsRasterizeDocumentLoadOptions.RightMargin</see> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.BottomMargin">CodecsRasterizeDocumentLoadOptions.BottomMargin</see></para>
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterizeDocumentUnit.Pixel">
      <summary>
        <para>The page width, height or margins are in pixels.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterizeDocumentUnit.Inch">
      <summary>
        <para>The page width, height or margins are in inches.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterizeDocumentUnit.Millimeter">
      <summary>
        <para>The page width, height or margins are in millimeters.</para>
      </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">
      <summary>Specifies the transformation to use when converting the logical size specified in the current document rasterization options
            to the final physical raster image size. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode" /> enumeration type is used as the value for
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.SizeMode">CodecsRasterizeDocumentLoadOptions.SizeMode</see> property.</para>
        <para>LEADTOOLS provides support for loading a document as a raster image. Document formats such as PDF, XPS, DOC/DOCX(2007/2010), PPT/PPTX(2007/2010), XLS/XLSX(2007/2010), RTF and Text
            do not contain physical width, height or resolution. It is up to the loader (in this case, the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object) to
            specify the transformation from logical coordinates to physical pixels through a process called rasterization.
            For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
        <para>You can use the <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.SizeMode">CodecsRasterizeDocumentLoadOptions.SizeMode</see> property
            to control how to use <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">CodecsRasterizeDocumentLoadOptions.PageWidth</see> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">CodecsRasterizeDocumentLoadOptions.PageHeight</see> to control the final
            raster image size. LEADTOOLS will determine the original document size (a value that can be obtained in
            <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageWidth">CodecsDocumentImageInfo.PageWidth</see> and
            <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageHeight">CodecsDocumentImageInfo.PageHeight</see> and then apply the transformation
            from this value to determine the final <see cref="T:Leadtools.RasterImage" /> width and height.</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode.None">
      <summary>
        <para>Use the original document width and height. No transformation will be performed and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">CodecsRasterizeDocumentLoadOptions.PageWidth</see> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">CodecsRasterizeDocumentLoadOptions.PageHeight</see> are not used.</para>
        <para>The final <see cref="T:Leadtools.RasterImage" /> will have a width or height value equals to the original document size.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode.Fit">
      <summary>
        <para>Fit the resulting raster image into
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">CodecsRasterizeDocumentLoadOptions.PageWidth</see> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">CodecsRasterizeDocumentLoadOptions.PageHeight</see> while
            maintaining the aspect ratio. If the original document size is smaller than the requested page size, no transformation is performed.</para>
        <para>The final <see cref="T:Leadtools.RasterImage" /> will have a width or height equal to or less than the requested
            page width or height but not greater.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode.FitAlways">
      <summary>
        <para>Always fit the resulting raster image into
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">CodecsRasterizeDocumentLoadOptions.PageWidth</see> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">CodecsRasterizeDocumentLoadOptions.PageHeight</see> while
            maintaining the aspect ratio. If the original document size is smaller than the requested page size, then the result
            image is scaled up.</para>
        <para>The final <see cref="T:Leadtools.RasterImage" /> will have a width or height equal to the requested
            page width or height. Not less and not greater.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode.FitWidth">
      <summary>
        <para>Fit the resulting raster image width into
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">CodecsRasterizeDocumentLoadOptions.PageWidth</see> while
            maintaining the aspect ratio. The image height will be calculated based on the transformation and 
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">CodecsRasterizeDocumentLoadOptions.PageHeight</see> is not used.</para>
        <para>The final <see cref="T:Leadtools.RasterImage" /> will have a width equal to the requested
            page width. The height depends on the original document height.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode.Stretch">
      <summary>
        <para>The resulting raster image width and height will be exactly equal to
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">CodecsRasterizeDocumentLoadOptions.PageWidth</see> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">CodecsRasterizeDocumentLoadOptions.PageHeight</see>. Aspect ratio
            might be different than the original document.</para>
        <para>The final <see cref="T:Leadtools.RasterImage" /> will have a width and height equal to the requested
            page width and height.</para>
      </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsWmfLoadOptions">
      <summary>Provides options specifically for loading WMF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsWmfOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsWmfLoadOptions.XResolution">
      <summary>Gets or sets the horizontal resolution (DPI) to load. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The horizontal resolution (DPI) to load.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsWmfOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsWmfLoadOptions.YResolution">
      <summary>Gets or sets the vertical (DPI) to load. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The vertical resolution (DPI) to load.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsWmfOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsWmfOptions">
      <summary>Provides extra options for loading and saving WMF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>
        <!--CodecsWmfOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsWmfOptions.Load">
      <summary>Gets the options for loading WMF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The WMF load options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsWmfOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsDocumentImageInfo">
      <summary>Provides information specific to document images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>LEADTOOLS provides support for loading a document as a raster image. Document formats such as PDF, XPS, DOC/DOCX(2007/2010), PPT/PPTX(2007/2010), XLS/XLSX(2007/2010), RTF and Text
            do not contain physical width, height or resolution. It is up to the loader (in this case, the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object) to
            specify the transformation from logical coordinates to physical pixels through a process called rasterization.
            For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
        <para>The <see cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" /> class contains properties that specify the original document logical size on disk.
            This can be useful when calculating the rasterization parameters based on your application viewing needs. The
            <see cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" /> class contains the following members:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.IsDocumentFile" />
            </term>
            <description>
              <para>
                <strong>true</strong> if the image file or stream passed to
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see> or <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> was a document file such as PDF or XPS and the other
            members of <see cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" /> are valid. <strong>false</strong>, otherwise.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageWidth" />
            </term>
            <description>
              <para>The original width of the document page in <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.Unit" /></para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageHeight" />
            </term>
            <description>
              <para>The original height of the document page in <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.Unit" /></para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.Unit" />
            </term>
            <description>
              <para>The unit for <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageWidth" /> and <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageHeight" /></para>
            </description>
          </item>
        </list>
        <para>These values specify the original size of the document on disk regardless of the settings of current document rasterization. The
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.Width">CodecsImageInfo.Width</see>, <see cref="P:Leadtools.Codecs.CodecsImageInfo.Height">CodecsImageInfo.Height</see>,
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.XResolution">CodecsImageInfo.XResolution</see> and
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.YResolution">CodecsImageInfo.YResolution</see> contains the size of the final rasterized document in
            physical units.</para>
        <para>The original document format is returned as usual in <see cref="P:Leadtools.Codecs.CodecsImageInfo.Format">CodecsImageInfo.Format</see>.</para>
        <para>The <see cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" /> instance is returned in the
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.Document">CodecsImageInfo.Document</see> property of the
            <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object returned by all the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see> or
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> methods.</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsDocumentImageInfo : NSObject {</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsDocumentImageInfo.IsDocumentFile">
      <summary>Gets a value indicating whether the image file or stream is a document format. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> if the image file or stream is a document format, <strong>false</strong>; otherwise.</value>
      <remarks>
        <para>When the value of <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.IsDocumentFile" /> is <strong>true</strong>, then the image file or stream passed to the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see> or <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> is a document file such as PDF or XPS. The rest of
            the members of this class are valid and contain the original document logical size. The physical load (rasterization size) is
            calculated based on the current rasterization values and is stored in <see cref="P:Leadtools.Codecs.CodecsImageInfo.Width">CodecsImageInfo.Width</see>,
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.Height">CodecsImageInfo.Height</see>,
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.XResolution">CodecsImageInfo.XResolution</see> and
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.YResolution">CodecsImageInfo.YResolution</see>.
            For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
        <para>If the value of <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.IsDocumentFile" /> is <strong>false</strong>, then the image file or stream is a raster image
            such as JPEG or TIFF. These files have physical size and the rest of the values of this class should not be used.</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL isDocumentFile;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageWidth">
      <summary>Gets the logical width of the document. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.Double" /> value that contains the logical width of the document. This value is in <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.Unit" />.</value>
      <remarks>
        <para>The logical width and height of the document is the original size before rasterization. LEADTOOLS usually returns the logical
            size in inches.</para>
        <para>The <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageWidth" />, <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageHeight" /> and <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.Unit" /> properties are only valid if the
            value of <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.IsDocumentFile" /> is <strong>true</strong>.</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) double pageWidth;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageHeight">
      <summary>Gets the logical height of the document. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.Double" /> value that contains the logical height of the document. This value is in <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.Unit" />.</value>
      <remarks>
        <para>The logical width and height of the document is the original size before rasterization. LEADTOOLS usually returns the logical
            size in inches.</para>
        <para>The <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageWidth" />, <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageHeight" /> and <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.Unit" /> properties are only valid if the
            value of <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.IsDocumentFile" /> is <strong>true</strong>.</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) double pageHeight;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsDocumentImageInfo.Unit">
      <summary>Gets the unit of the logical width and height of this document. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentUnit" /> enumeration member that specifies the unit for
            <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageWidth" /> and <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageHeight" />.</value>
      <remarks>
        <para>The logical width and height of the document is the original size before rasterization. LEADTOOLS usually returns the logical
            size in inches.</para>
        <para>The <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageWidth" />, <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageHeight" /> and <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.Unit" /> properties are only valid if the
            value of <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.IsDocumentFile" /> is <strong>true</strong>.</para>
        <para>Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentUnit">CodecsRasterizeDocumentUnit.Pixel</see>
            </term>
            <description>
              <para>The page width and height are in pixels</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentUnit">CodecsRasterizeDocumentUnit.Inch</see>
            </term>
            <description>
              <para>The page width and height are in inches</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentUnit">CodecsRasterizeDocumentUnit.Millimeter</see>
            </term>
            <description>
              <para>The page width and height are in millimeters</para>
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LTCodecsRasterizeDocumentUnit unit;</pre>
      </objectivec>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPdfTextEncoding">
      <summary>Indicates the type of text encoding to perform when saving PDF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.CodecsPdfTextEncoding" /> enumeration is used as the type for the <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.TextEncoding">CodecsPdfSaveOptions.TextEncoding</see>
            property.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>typedef enum LTCodecsPdfTextEncoding LTCodecsPdfTextEncoding;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsPdfTextEncoding</pre>
      </java>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPdfTextEncoding.None">
      <summary>
            No text encoding at all.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPdfTextEncoding.Base85">
      <summary>
            Use ASCII 85 text encoding algorithm.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPdfTextEncoding.Hex">
      <summary>
            Use ASCII HEX text encoding technique.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPdfLoadOptions">
      <summary>Provides options specifically for loading PDF, PS and EPS file options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <remarks>
        <para>LEADTOOLS uses the same <strong>Leadtools.Pdf.dll</strong> assembly to load Adobe Portable Document Format (PDF), PostScript (PS)
            and Encapsulated PostScript (EPS) files.</para>
        <para>PDF, PS and EPS files have no physical width or height in pixels. You can use
            the <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentOptions" /> to control
            how the final document is rendered as a raster image. For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
        <para>To obtain extra information of a raster PDF file saved with <see cref="T:Leadtools.Codecs.RasterCodecs" />, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" />.</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <keywords>PDFv14|PDFv15|PDFA|PDF/A|PDF v1.4|PDF v1.5|PDF v1.6</keywords>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsPdfLoadOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsPdfLoadOptions</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfLoadOptions.HideNoApAnnotations">
      <summary>Gets or sets a value that indicate whether to hide annotation objects that have no appearance stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> to hide annotation objects, <strong>false</strong> show annotation objects.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfLoadOptions.HideAllAnnotations">
      <summary>Gets or sets a value that indicate whether to hide all annotation objects. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> to hide all annotation objects, <strong>false</strong> show all annotation objects.</value>
      <noremarks />
      <noexample />
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfLoadOptions.UseLibFonts">
      <summary>Gets a value that indicate whether to use the library installed fonts. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> to use the library installed fonts, <strong>false</strong> to use the system fonts. Default value is <strong>true</strong>.</value>
      <remarks>
        <para>The value of this property is used only when <strong>Leadtools.PdfEngine.dll</strong> is used by the application. For more information,
            refer to <see cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</see>.</para>
        <para>This option affects the PDF format when <see cref="P:Leadtools.Codecs.CodecsPdfLoadOptions.UsePdfEngine">UsePdfEngine</see> is set to true to use Leadtools.PdfEngine.dll. It also affects the Postscript format.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useLibFonts;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseLibFonts()
public void setUseLibFonts(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfLoadOptions.DisplayDepth">
      <summary>Gets or sets the resulting raster image pixel depth. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The resulting raster image pixel depth, valid values are 0, 1, 4, 8, or 24. The default value is 0 for auto-detect.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <remarks>
            Possible values are:
              <list type="table"><listheader><term>Value</term><description>Description</description></listheader><item><term>0</term><description>Auto-detect. The resulting image will have the same bits per pixel as the requested page in the source PDF file. Internally, the
            toolkit will use the bits per pixel value of the first image item found on the page. If the page does not have any image items, the result will be
            24 bits per pixel. Use this value only when the source file is a raster PDF.</description></item><item><term>1</term><description>1 bit per pixel in the resulting image.</description></item><item><term>4</term><description>4 bit per pixel in the resulting image.</description></item><item><term>8</term><description>8 bit per pixel in the resulting image.</description></item><item><term>24</term><description>24 bit per pixel in the resulting image.</description></item></list><para>Refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> for information on how to use
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetRasterPdfInfo(System.String,System.Int32)">RasterCodecs.GetRasterPdfInfo</see> to obtain this value from a PDF file saved with <see cref="T:Leadtools.Codecs.RasterCodecs" />.</para><para>This option affect pdf format when <see cref="P:Leadtools.Codecs.CodecsPdfLoadOptions.UsePdfEngine">UsePdfEngine</see> is set to true to use Leadtools.PdfEngine.dll, it still affects Postscript format.</para></remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int displayDepth;</pre>
      </objectivec>
      <java>
        <pre>
public int getDisplayDepth()
public void setDisplayDepth(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfLoadOptions.TextAlpha">
      <summary>Gets or sets a value that indicate the type of font anti-aliasing to use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <para>The type of anti-aliasing to use. Default value is 1.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>1</term>
            <description>Do not use font anti-aliasing.</description>
          </item>
          <item>
            <term>2</term>
            <description>Use 2-bit font anti-aliasing.</description>
          </item>
          <item>
            <term>4</term>
            <description>Use 4-bit font anti-aliasing.</description>
          </item>
        </list>
      </value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <remarks>
        <para>The value of this property is used only when the
            <strong>Leadtools.PdfEngine.dll</strong> is used by the application. 
            For more information,
            refer to <see cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</see>.</para>
        <para>Aliasing is the effect on all pixel devices where diagonal and curved 
            lines have a zigzag appearance. As pixels get larger, this effect becomes more noticeable.
            Anti-aliasing refers to methods designed to decrease or eliminate this effect. 
            Anti-aliasing is done by shading the pixels along the borders of the affected lines.</para>
        <para>This affects the PDF format when <see cref="P:Leadtools.Codecs.CodecsPdfLoadOptions.UsePdfEngine">UsePdfEngine</see> is set to true to use Leadtools.PdfEngine.dll. It also affects the Postscript format.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int textAlpha;</pre>
      </objectivec>
      <java>
        <pre>
public int getTextAlpha()
public void setTextAlpha(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfLoadOptions.GraphicsAlpha">
      <summary>Gets or sets a value that indicate the type of graphics anti-aliasing to use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <para>The type of anti-aliasing to use. Default value is 1.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>1</term>
            <description>Do not use graphics anti-aliasing.</description>
          </item>
          <item>
            <term>2</term>
            <description>Use 2-bit graphics anti-aliasing.</description>
          </item>
          <item>
            <term>4</term>
            <description>Use 4-bit graphics anti-aliasing.</description>
          </item>
        </list>
      </value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <remarks>
        <para>The value of this property is used only when <strong>Leadtools.PdfEngine.dll</strong> is used by the application. For more information,
            refer to <see cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</see>.</para>
        <para>Aliasing is the effect on all pixel devices where diagonal and curved lines have a zigzag appearance. As pixels get larger, this effect becomes more noticeable.
            Anti-aliasing refers to methods designed to decrease or eliminate this effect. This is done by shading the pixels along the borders of the affected lines.</para>
        <para>This option affect pdf format when <see cref="P:Leadtools.Codecs.CodecsPdfLoadOptions.UsePdfEngine">UsePdfEngine</see> is set to true to use Leadtools.PdfEngine.dll, it still affects Postscript format.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int graphicsAlpha;</pre>
      </objectivec>
      <java>
        <pre>
public int getGraphicsAlpha()
public void setGraphicsAlpha(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfLoadOptions.Password">
      <summary>Gets or sets the password to use when loading encrypted files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The password to use when loading encrypted files. Default value is an empty string.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <remarks>
        <para>Use an empty string a null reference (Nothing in Visual Basic) to disable the use of a password.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, copy) NSString* password;</pre>
      </objectivec>
      <java>
        <pre>
public String getPassword()
public void setPassword(String value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfLoadOptions.DisableCropping">
      <summary>Gets a value that indicate whether to crop of PostScript (PS) and Encapsulated PostScript (EPS) files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> to disable cropping of PostScript (PS) and Encapsulated PostScript (EPS) files, <strong>false</strong> otherwise.
            Default value is <strong>false</strong>.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <remarks>
        <para>The PDF codecs is also used to load PostScript (PS) and Encapsulated PostScript (EPS) files. Use this option to enable/disable cropping the resulting raster
            image size to the dimensions of the actual drawing inside the PostScript file. This option is not used when loading PDF files.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL disableCropping;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getDisableCropping()
public void setDisableCropping(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfLoadOptions.DisableCieColors">
      <summary>Gets or sets a value that indicate whether CIE colors are disabled when loading PDF<a href="#PDF">*</a>, PS or EPS files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> to disable the use of CIE colors, <strong>false</strong> otherwise.
            Default value is <strong>false</strong>.</value>
      <remarks>
        <para>The value of this property is used only when <strong>Leadtools.PdfEngine.dll</strong> is used by the application. For more information,
            refer to <see cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</see>.</para>
        <para>Disabling the use of CIE colors will result in faster loading. This options is used when loading both PDF, PostScript (PS)
            and Encapsulated PostScript (EPS) files.</para>
        <a id="PDF">
        </a>
        <para>* This option affect pdf format when <see cref="P:Leadtools.Codecs.CodecsPdfLoadOptions.UsePdfEngine">UsePdfEngine</see> is set to true to use Leadtools.PdfEngine.dll, it still affects Postscript format.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL disableCieColors;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getDisableCieColors()
public void setDisableCieColors(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfLoadOptions.EnableInterpolate">
      <summary>Gets or sets a value that indicate whether to use interpolation when loading PDF<a href="#PDF">*</a>, PS or EPS files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> to use interpolation when loading PDF, PS or EPS files, <strong>false</strong> otherwise.
            Default value is <strong>false</strong>.</value>
      <remarks>
        <para>The value of this property is used only when <strong>Leadtools.PdfEngine.dll</strong> is used by the application. For more information,
            refer to <see cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</see>.</para>
        <para>Enabling the use of interpolation will result in slower loading but produces higher quality images. This options is used when loading PDF, PostScript (PS)
            and Encapsulated PostScript (EPS) files.</para>
        <a id="PDF">
        </a>
        <para>* This option affects the PDF format when <see cref="P:Leadtools.Codecs.CodecsPdfLoadOptions.UsePdfEngine">UsePdfEngine</see> is set to true to use Leadtools.PdfEngine.dll. It also affects the Postscript format.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL enableInterpolate;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getEnableInterpolate()
public void setEnableInterpolate(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfLoadOptions.UsePdfEngine">
      <summary>Gets or sets a value to force using the LEADTOOLS PDF Engine (<strong>Leadtools.PdfEngine.dll</strong>) when loading PDF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> to force using the LEADTOOLS PDF Engine (<strong>Leadtools.PdfEngine.dll</strong>) when loading PDF files,
            otherwise; <strong>false</strong>. Default value is <strong>false</strong>.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <remarks>
        <para>To load or save PDF documents to/from a raster image in LEADTOOLS, you use the <strong>Leadtools.Pdf.dll</strong> assembly. This is the file
            filter for the PDF format (as well as Postscript and Enhanced Postscript). Use this assembly as any other file filter in LEADTOOLS, such as
            Leadtools.Codecs.Bmp.dll for BMP support and Leadtools.Codecs.Tif.dll for TIF support.</para>
        <para>In addition to <strong>Leadtools.Pdf.dll</strong>, the <strong>Leadtools.PdfEngine.dll</strong> assembly is required in the following
            situations:</para>
        <list type="bullet">
          <item>
            <description>
              <para>When loading Postscript (PS) or Enhanced Postscript (EPS) files. This is always needed regardless of the value of the
            <strong>UsePdfEngine</strong> option described below.</para>
            </description>
          </item>
          <item>
            <description>
              <para>When using the <strong>LEADTOOLS DocumentReaders</strong> to read the objects of a PDF file (using the
            <strong>Leadtools.DocumentReaders.dll</strong> and <strong>Leadtools.DocumentReaders.Pdf.dll</strong> assemblies). Again,
            <strong>Leadtools.PdfEngine.dll</strong> is required regardless of the value of the <strong>UsePdfEngine</strong> option described below.</para>
            </description>
          </item>
          <item>
            <description>
              <para>When the value of <see cref="P:Leadtools.Codecs.CodecsPdfLoadOptions.UsePdfEngine">CodecsPdfLoadOptions.UsePdfEngine</see> is set to <strong>true</strong> (the
            default value is <strong>false</strong>). When this option is used, then LEADTOOLS will use both <strong>Leadtools.Pdf.dll</strong> and
            <strong>Leadtools.PdfEngine.dll</strong> when loading PDF files. This is provided for legacy support.</para>
            </description>
          </item>
        </list>
        <para>
          <strong>Leadtools.PdfEngine.dll</strong> contains many resources such as tables and fonts required to render a PDF image (if one of the
            options above is satisfied and also always for PS and EPS files). This DLL is not referenced in a direct way by the file filter; instead it is
            loaded dynamically and out of a process if needed. You must ensure that this DLL is present on the machine. By default, it is required to have
            this DLL in the same directory where the file filter is located. However, to share many instances of the
            <strong>Leadtools.PdfEngine.dll</strong> assembly between many applications, use the <see cref="P:Leadtools.Codecs.CodecsPdfOptions.InitialPath">CodecsPdfOptions.InitialPath</see>
            property.</para>
        <para>Note that if the application does not required PDF Engine, for example, the application is only loading and saving PDF files as raster images.
            Then, <strong>Leadtools.PdfEngine.dll</strong> is not required to be present on the machine. <strong>Leadtools.Pdf.dll</strong> is always
            required regardless. <strong>Leadtools.PdfEngine.dll</strong> is used out of process and may slow down loading PDF documents. It is
            recommended that you load PDF files with the <see cref="P:Leadtools.Codecs.CodecsPdfLoadOptions.UsePdfEngine" /> set to <strong>false</strong> (the default value) for maximum
            performance.</para>
      </remarks>
      <noexample />
    </member>
    <member name="T:Leadtools.Codecs.CodecsPdfSaveOptions">
      <summary>Provides options specifically for saving PDF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>PDFv14|PDFv15|PDFA|PDF/A | PDF v1.4|PDF v1.5|PDF v1.6</keywords>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <remarks>
        <para>To obtain extra information of a raster PDF file saved with <see cref="T:Leadtools.Codecs.RasterCodecs" />, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsPdfSaveOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsPdfSaveOptions</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.UserPassword">
      <summary>Gets or sets the user password to use when saving encrypted files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The user password to use when saving encrypted files.</value>
      <remarks>
            This should be provided to protect the document from being opened/read.
            </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, copy) NSString* userPassword;</pre>
      </objectivec>
      <java>
        <pre>
public String getUserPassword()
public void setUserPassword(String value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.OwnerPassword">
      <summary>Gets or sets the owner password to use when saving encrypted files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The owner password to use when saving encrypted files.</value>
      <remarks>
            This should be provided to prevent users from changing access/protection settings.
            </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, copy) NSString* ownerPassword;</pre>
      </objectivec>
      <java>
        <pre>
public String getOwnerPassword()
public void setOwnerPassword(String value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.Use128BitEncryption">
      <summary>Gets or sets a value which control the type of encryption to use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to use an RC4 128-bit encryption key, false to use an RC4 40-bit encryption key.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL use128BitEncryption;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUse128BitEncryption()
public void setUse128BitEncryption(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.PrintDocument">
      <summary>Enables or disables printing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to give the user of the PDF document permission to print the document.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL printDocument;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getPrintDocument()
public void setPrintDocument(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.PrintFaithful">
      <summary>Enables or disables high-quality printing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to give the user of the PDF document permission to print the document in high quality.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL printFaithful;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getPrintFaithful()
public void setPrintFaithful(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.ModifyDocument">
      <summary>Enables or disables editing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to give the user of the PDF document permission to edit the document.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL modifyDocument;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getModifyDocument()
public void setModifyDocument(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.ExtractText">
      <summary>Enables or disables text copying. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to give the user of the PDF document permission to extract text from the document.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL extractText;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getExtractText()
public void setExtractText(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.ExtractTextGraphics">
      <summary>Enables or disables graphics copying. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to give the user of the PDF document permission to extract graphics from the document.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL extractTextGraphics;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getExtractTextGraphics()
public void setExtractTextGraphics(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.ModifyAnnotation">
      <summary>Enables or disables annotation editing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to give the user of the PDF document permission to edit annotations in the document.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL modifyAnnotation;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getModifyAnnotation()
public void setModifyAnnotation(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.FillForm">
      <summary>Enables or disables form filling. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to give the user of the PDF document permission to fill in forms in the document.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL fillForm;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getFillForm()
public void setFillForm(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.AssembleDocument">
      <summary>Enables or disables document assembly. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to give the user of the PDF document permission to add pages to or delete pages from the document.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL assembleDocument;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getAssembleDocument()
public void setAssembleDocument(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.TextEncoding">
      <summary>Gets or sets the text encoding to use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The text encoding to use.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsPdfTextEncoding textEncoding;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsPdfTextEncoding getTextEncoding()
public void setTextEncoding(CodecsPdfTextEncoding value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.LowMemoryUsage">
      <summary>Gets or sets a value indicating whether to use less memory when creating a PDF file with JPEG or Fax compression. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to use less memory when creating a PDF file with JPEG or Fax compression; otherwise, false.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL lowMemoryUsage;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getLowMemoryUsage()
public void setLowMemoryUsage(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.UseImageResolution">
      <summary>Gets or sets a value indicating whether to use the image resolution (DPI) in calculating page dimensions when saving a PDF file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to use the image resolution (DPI) in calculating page dimensions when saving a PDF file; otherwise, false.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <remarks>
        <para>Refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> for information on how to use
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetRasterPdfInfo(System.String,System.Int32)">RasterCodecs.GetRasterPdfInfo</see> to obtain the resolution of a PDF file saved with <see cref="T:Leadtools.Codecs.RasterCodecs" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useImageResolution;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseImageResolution()
public void setUseImageResolution(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version">
      <summary>Gets or sets a value indicating the version of the PDF file saved by this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>PDFv14|PDFv15|PDFA|PDF/A | PDF v1.4|PDF v1.5|PDF v1.6</keywords>
      <value>A <see cref="T:Leadtools.Codecs.CodecsRasterPdfVersion" /> enumeration member indicating the version of the PDF file saved by this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.</value>
      <remarks>
        <para>Note: It is recommended you use the <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> property instead of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfA" />,
            <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv13" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv14" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv15" /> and <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv16" />. <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> provides a clearer view of what
            the final version of the raster PDF will be when saving with LEADTOOLS. Setting <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> will automatically toggles the various
            SavePdfXYZ properties accordingly and setting these properties might change the value of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" />.</para>
        <para>PDF/A is a subset of the PDF standard that contains only those features that are suited for long-term archival. Primarily this means that the
            document will be completely self-contained: it includes all content, font and color information.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsRasterPdfVersion version;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsRasterPdfVersion getVersion()
public void setVersion(CodecsRasterPdfVersion value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfA">
      <summary>Gets or sets a value indicating whether the PDF file should be saved as
            PDF/A-1b. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>PDFA|PDF A</keywords>
      <value>true to save the file as PDF/A; otherwise it will be saved as PDF.</value>
      <remarks>
        <para>Note: It is recommended you use the <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> property instead of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfA" />,
            <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv13" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv14" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv15" /> and <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv16" />. <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> provides a clearer view of what
            the final version of the raster PDF will be when saving with LEADTOOLS. Setting <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> will automatically toggles the various
            SavePdfXYZ properties accordingly and setting these properties might change the value of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" />.</para>
        <para>PDF/A is a subset of the PDF standard that contains only those features that are suited for long-term archival. Primarily this means that the
            document will be completely self-contained: it includes all content, font and color information.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <java>
        <pre>
public boolean getSavePdfA()
public void setSavePdfA(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv14">
      <summary>Gets or sets a value indicating whether the PDF file should be saved as PDF v1.4. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>PDFv14|PDFv15|PDFA|PDF/A | PDF v1.4|PDF v1.5|PDF v1.6</keywords>
      <value>true to save the file as PDF v1.4; otherwise it will be saved as PDF v1.2.</value>
      <remarks>
        <para>Note: It is recommended you use the <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> property instead of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfA" />,
            <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv13" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv14" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv15" /> and <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv16" />. <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> provides a clearer view of what
            the final version of the raster PDF will be when saving with LEADTOOLS. Setting <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> will automatically toggles the various
            SavePdfXYZ properties accordingly and setting these properties might change the value of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" />.</para>
        <para>PDF/A is a subset of the PDF standard that contains only those features that are suited for long-term archival. Primarily this means that the
            document will be completely self-contained: it includes all content, font and color information.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <java>
        <pre>
public boolean getSavePdfv14()
public void setSavePdfv14(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv15">
      <summary>Gets or sets a value indicating whether the PDF file should be saved as PDF v1.5. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>PDFv14|PDFv15|PDFA|PDF/A | PDF v1.4|PDF v1.5|PDF v1.6</keywords>
      <value>true to save the file as PDF v1.5; otherwise it will be saved as PDF v1.2.</value>
      <remarks>
        <para>Note: It is recommended you use the <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> property instead of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfA" />,
            <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv13" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv14" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv15" /> and <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv16" />. <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> provides a clearer view of what
            the final version of the raster PDF will be when saving with LEADTOOLS. Setting <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> will automatically toggles the various
            SavePdfXYZ properties accordingly and setting these properties might change the value of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" />.</para>
        <para>PDF/A is a subset of the PDF standard that contains only those features that are suited for long-term archival. Primarily this means that the
            document will be completely self-contained: it includes all content, font and color information.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <java>
        <pre>
public boolean getSavePdfv15()
public void setSavePdfv15(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv16">
      <summary>Gets or sets a value indicating whether the PDF file should be saved as PDF v1.6. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>PDFv14|PDFv15|PDFA|PDF/A | PDF v1.4|PDF v1.5|PDF v1.6</keywords>
      <value>true to save the file as PDF v1.6; otherwise it will be saved as PDF v1.2.</value>
      <remarks>
        <para>Note: It is recommended you use the <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> property instead of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfA" />,
            <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv13" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv14" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv15" /> and <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv16" />. <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> provides a clearer view of what
            the final version of the raster PDF will be when saving with LEADTOOLS. Setting <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> will automatically toggles the various
            SavePdfXYZ properties accordingly and setting these properties might change the value of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" />.</para>
        <para>PDF/A is a subset of the PDF standard that contains only those features that are suited for long-term archival. Primarily this means that the
            document will be completely self-contained: it includes all content, font and color information.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <java>
        <pre>
public boolean getSavePdfv16()
public void setSavePdfv16(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv13">
      <summary>Gets or sets a value indicating whether the PDF file should be saved as PDF v1.3. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>PDFv14|PDFv15|PDFA|PDF/A | PDF v1.4|PDF v1.5|PDF v1.6</keywords>
      <value>true to save the file as PDF v1.3; otherwise it will be saved as PDF v1.2.</value>
      <remarks>
        <para>Note: It is recommended you use the <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> property instead of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfA" />,
            <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv13" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv14" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv15" /> and <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv16" />. <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> provides a clearer view of what
            the final version of the raster PDF will be when saving with LEADTOOLS. Setting <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> will automatically toggles the various
            SavePdfXYZ properties accordingly and setting these properties might change the value of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" />.</para>
        <para>PDF/A is a subset of the PDF standard that contains only those features that are suited for long-term archival. Primarily this means that the
            document will be completely self-contained: it includes all content, font and color information.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <java>
        <pre>
public boolean getSavePdfv13()
public void setSavePdfv13(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv17">
      <summary>Gets or sets a value indicating whether the PDF file should be saved as PDF v1.7. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>PDFv14|PDFv15|PDFA|PDF/A | PDF v1.4|PDF v1.5|PDF v1.6|PDF v1.7</keywords>
      <value>true to save the file as PDF v1.7; otherwise it will be saved as PDF v1.2.</value>
      <remarks>
        <para>Note: It is recommended you use the <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> property instead of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfA" />,
            <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv13" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv14" />, <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv15" /> and <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.SavePdfv16" />. <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> provides a clearer view of what
            the final version of the raster PDF will be when saving with LEADTOOLS. Setting <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" /> will automatically toggles the various
            SavePdfXYZ properties accordingly and setting these properties might change the value of <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version" />.</para>
        <para>PDF/A is a subset of the PDF standard that contains only those features that are suited for long-term archival. Primarily this means that the
            document will be completely self-contained: it includes all content, font and color information.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPdfOptions">
      <summary>Provides extra options for loading and saving PDF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>PDFv14|PDFv15|PDFA|PDF/A | PDF v1.4|PDF v1.5|PDF v1.6</keywords>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <remarks>
        <para>To load or save PDF documents to/from a raster image in LEADTOOLS, you use the <strong>Leadtools.Pdf.dll</strong> assembly. This is the file
            filter for the PDF format (as well as Postscript and Enhanced Postscript). Use this assembly as any other file filter in LEADTOOLS, such as
            Leadtools.Codecs.Bmp.dll for BMP support and Leadtools.Codecs.Tif.dll for TIF support.</para>
        <para>In addition to <strong>Leadtools.Pdf.dll</strong>, the <strong>Leadtools.PdfEngine.dll</strong> assembly is required in the following
            situations:</para>
        <list type="bullet">
          <item>
            <description>
              <para>When loading Postscript (PS) or Enhanced Postscript (EPS) files. This is always needed regardless of the value of the
            <strong>UsePdfEngine</strong> option described below.</para>
            </description>
          </item>
          <item>
            <description>
              <para>When using the <strong>LEADTOOLS DocumentReaders</strong> to read the objects of a PDF file (using the
            <strong>Leadtools.DocumentReaders.dll</strong> and <strong>Leadtools.DocumentReaders.Pdf.dll</strong> assemblies). Again,
            <strong>Leadtools.PdfEngine.dll</strong> is required regardless of the value of the <strong>UsePdfEngine</strong> option described below.</para>
            </description>
          </item>
          <item>
            <description>
              <para>When the value of <see cref="P:Leadtools.Codecs.CodecsPdfLoadOptions.UsePdfEngine">CodecsPdfLoadOptions.UsePdfEngine</see> is set to <strong>true</strong> (the
            default value is <strong>false</strong>). When this option is used, then LEADTOOLS will use both <strong>Leadtools.Pdf.dll</strong> and
            <strong>Leadtools.PdfEngine.dll</strong> when loading PDF files. This is provided for legacy support.</para>
            </description>
          </item>
        </list>
        <para>
          <strong>Leadtools.PdfEngine.dll</strong> contains many resources such as tables and fonts required to render a PDF image (if one of the
            options above is satisfied and also always for PS and EPS files). This DLL is not referenced in a direct way by the file filter; instead it is
            loaded dynamically and out of a process if needed. You must ensure that this DLL is present on the machine. By default, it is required to have
            this DLL in the same directory where the file filter is located. However, to share many instances of the
            <strong>Leadtools.PdfEngine.dll</strong> assembly between many applications, use the <see cref="P:Leadtools.Codecs.CodecsPdfOptions.InitialPath">CodecsPdfOptions.InitialPath</see>
            property.</para>
        <para>Note that if the application does not required PDF Engine, for example, the application is only loading and saving PDF files as raster images.
            Then, <strong>Leadtools.PdfEngine.dll</strong> is not required to be present on the machine. <strong>Leadtools.Pdf.dll</strong> is always
            required regardless.</para>
      </remarks>
      <example>
        <!--CodecsPdfOptions-->
      </example>
      <objectivec>
        <pre>@interface LTCodecsPdfOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsPdfOptions</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfOptions.Load">
      <summary>Gets the options for loading PDF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>PDFv14|PDFv15|PDFA|PDF/A | PDF v1.4|PDF v1.5|PDF v1.6</keywords>
      <value>The PDF load options.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsPdfLoadOptions* load;</pre>
      </objectivec>
      <java>
        <pre>public CodecsPdfLoadOptions getLoad()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfOptions.Save">
      <summary>Gets the options for saving PDF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The PDF save options.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsPdfSaveOptions* save;</pre>
      </objectivec>
      <java>
        <pre>public CodecsPdfSaveOptions getSave()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfOptions.InitialPath">
      <summary>Gets and sets the path to the PDF engine runtime DLL. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>The value of this property is used only when <strong>Leadtools.PdfEngine.dll</strong> is used by the application. For more information,
            refer to <see cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</see>.</para>
        <para>The PDF engine runtime DLL is <strong>Leadtools.PdfEngine.dll</strong>. This DLL is never referenced directly by the LEADTOOLS Raster PDF
            file filter (<strong>Leadtools.Pdf.dll</strong>) or PDF document readers (<strong>Leadtools.DocumentReaders.Pdf</strong>) instead it is loaded
            dynamically and out of process by the filter.</para>
        <para>By default, the LEADTOOLS installer will copy this DLL next to the filter (in the Bin\DotNet\Win32, Bin\DotNet\x64, Bin\DotNet4\Win32 and Bin\DotNet4\x64
            folders) and the filter will look for the engine DLL in the same folder it is located (default location).</para>
        <para>In some cases, you can share the same copy of <strong>Leadtools.PdfEngine.dll</strong> between different applications. For example, many
            ASP.NET web applications, in this case, you can copy <strong>Leadtools.PdfEngine.dll</strong> to a fixed directory on your server and pass the
            name of this directory to <see cref="P:Leadtools.Codecs.CodecsPdfOptions.InitialPath" />. From this point on, LEADTOOLS will use this value to locate and load
            <strong>Leadtools.PdfEngine.dll</strong>.</para>
        <para>
          <strong>Leadtools.PdfEngine.dll</strong> is not a standard .NET assembly. In some project types, such as web applications or services,
            the compiler will not copy this file to your binary folder even though you have a reference to it in your project. This could cause PDF files
            to fail to load since IIS will create a temporary folder and copy all other LEADTOOLS referenced assemblies to service a request, but it will
            not copy <strong>Leadtools.PdfEngine.dll</strong>. So, when using PDF in a web application, you must always use
            <see cref="P:Leadtools.Codecs.CodecsPdfOptions.InitialPath" /> to instruct LEADTOOLS on the location of the PDF engine DLL.</para>
        <para>You do not have access to this property when using the LEADTOOLS WCF services to load PDF files, instead you must add a section in the
            web configuration to instruct the LEADTOOLS WCF service on the location of the PDF engine's DLL. Refer to
            <see cref="T:Leadtools.Topics.ProgrammingWithWCF">Programming with LEADTOOLS WCF Services</see> for more information.</para>
        <para>Note that setting this value in a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will affect all the <see cref="T:Leadtools.Codecs.RasterCodecs" /> objects that are
            currently created in the application (in all threads) or will be created in the future, for example:</para>
        <para>
          <pre>
            <code>
            RasterCodecs codecs1 = new RasterCodecs();
            codecs1.Options.Pdf.InitialPath = @"C:\MyApp\Bin";
            codecs1.Dispose();
            RasterCodecs codecs2 = new RasterCodecs();
            // This will work even though the RasterCodecs object that set this value has been disposed.
            System.Diagnostics.Debug.Assert(codecs2.Options.Pdf.InitialPath == @"C:\MyApp\Bin");
            </code>
          </pre>
        </para>
      </remarks>
      <value>The path to the PDF runtime files, or an empty string or null (Nothing in Visual Basic), if the default location is to be used.</value>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>
            For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.
            </example>
      <java>
        <pre>
public String getInitialPath()
public void setInitialPath(String value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPdfOptions.IsEngineInstalled">
      <summary>Determines whether or not the LEADTOOLS PDF Engine Runtime files are installed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> if the LEADTOOLS PDF Engine Runtime files are installed, <strong>false</strong> if they are missing.</value>
      <remarks>
        <para>Use this property to determine if the LEADTOOLS PDF Engine Runtime files (<strong>Leadtools.PDfEngine.dll</strong>) are installed on
            the system.</para>
        <para>The value of this property is used only when <strong>Leadtools.PdfEngine.dll</strong> is used by the application. For more information,
            refer to <see cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</see>.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <java>
        <pre>public boolean isEngineInstalled()</pre>
      </java>
    </member>
    <member name="T:Leadtools.Codecs.CodecsLoadOptions">
      <summary>Provides access to generic file load options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsLoadOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsLoadOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsLoadOptions.Reset">
      <summary>Resets this instance of <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> to the default values. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>-(void)reset;</pre>
      </objectivec>
      <java>
        <pre>public void reset()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.Markers">
      <summary>Enables or disables loading metadata markers during image file load. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to enable loading metadata markers if present in the file, false to ignore them.</value>
      <remarks>
        <para>When the value of the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers" /> property is set to <strong>true</strong>, any subsequent load operation
            performed by this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will automatically try to load all the metadata (tags and comments)
            found in the file and store them in the <see cref="P:Leadtools.RasterImage.Markers">RasterImage.Markers</see> collection of the resulting image.</para>
        <para>Note that any load method that uses tiles, offset or resizing will not load any file metadata automatically regardless of
            the value of this property.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL markers;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getMarkers()
public void setMarkers(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.Tags">
      <summary>Gets or sets a value that indicates whether any tags found in the file should be automatically loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <strong>true</strong> to automatically load any tags found in the file; otherwise it is <strong>false</strong>.</value>
      <remarks>
        <para>When the value of the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" /> property is set to <strong>true</strong>, any subsequent load operation
            performed by this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will automatically try to load all the tags found in the file and
            store them in the <see cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</see> collection of the resulting image.</para>
        <para>Internally, the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will call <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" /> on the image and only
            tries to load the tags if the value returned was true.</para>
        <para>When loading more than one page from a multi-page file, only the tags found in the first page will be automatically
            loaded when the value of this property is set to true. To manually load all the tags in any page, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</para>
        <para>You must set the value of the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers" /> property to <strong>false</strong> to enable automatically loading
            the tags. If the value of both <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers" /> and <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" /> is set to true, then the markers will take
            take precedence and no tags will be loaded.</para>
        <para>Note that any load method that uses tiles, offset or resizing will not load any file metadata automatically regardless of
            the value of this property.</para>
      </remarks>
      <example>
        <para>This example will browse to a file and load it along with any tags, geo-keys and comments found.</para>
        <!--RasterCodecs.MetadataAutoLoadExample-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL tags;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getTags()
public void setTags(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.GeoKeys">
      <summary>Gets or sets a value that indicates whether any TIFF Geo key tags found in the file should be automatically loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <strong>true</strong> to automatically load any TIFF Geo key tags found in the file, otherwise; <strong>false</strong>.</value>
      <remarks>
        <para>When the value of the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.GeoKeys" /> property is set to <strong>true</strong>, any subsequent load operation
            performed by this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will automatically try to load all the TIFF Geo key tags found in the file and
            store them in the <see cref="P:Leadtools.RasterImage.GeoKeys">RasterImage.GeoKeys</see> collection of the resulting image.</para>
        <para>Internally, the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will call <see cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" /> on the image and only
            tries to load the GeoKeys if the value returned was true.</para>
        <para>When loading more than one page from a multi-page file, only the GeoKeys found in the first page will be automatically
            loaded when the value of this property is set to true. To manually load all the GeoKeys in any page, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKeys(System.String,System.Int32)" />.</para>
        <para>You must set the value of the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers" /> property to <strong>false</strong> to enable automatically loading
            the GeoKeys. If the value of both <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers" /> and <see cref="P:Leadtools.Codecs.CodecsLoadOptions.GeoKeys" /> is set to true, then the markers will take
            take precedence and no GeoKeys will be loaded.</para>
        <para>Note that any load method that uses tiles, offset or resizing will not load any file metadata automatically regardless of
            the value of this property.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL geoKeys;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getGeoKeys()
public void setGeoKeys(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.Comments">
      <summary>Gets or sets a value that indicate whether any comment fields found in the file should be automatically loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <strong>true</strong> to automatically load any comment fields found in the file; otherwise it is <strong>false</strong>.</value>
      <remarks>
        <para>When the value of the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Comments" /> property is set to <strong>true</strong>, any subsequent load operation
            performed by this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will automatically try to load all the comment fields found in the file and
            store them in the <see cref="P:Leadtools.RasterImage.Comments">RasterImage.Comments</see> collection of the resulting image.</para>
        <para>Internally, the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will call <see cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" /> on the image and only
            try to load the comments if the value returned is true.</para>
        <para>When loading more than one page from a multi-page file, only the comments found in the first page will be automatically
            loaded when the value of this property is set to true. To manually load all the comments in any page, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComments(System.String,System.Int32)" />.</para>
        <para>You must set the value of the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers" /> property to <strong>false</strong> to enable automatic loading
            the comments. If the value of both <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers" /> and <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Comments" /> is set to true, the markers will take
            take precedence and no comments will be loaded.</para>
        <para>Note that any load method that uses tiles, offset or resizing will not load any file metadata automatically regardless of
            the value of this property.</para>
      </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL comments;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getComments()
public void setComments(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.AllocateImage">
      <summary>Enables or disables the allocation of memory for the storage of the image data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to have Leadtools do the necessary allocation, false to disable it.</value>
      <remarks>
            If you do not allow Leadtools to allocate the memory for the storage of the image data, then you should process the data
            manually using the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage_EV">RasterCodecs.LoadImage</see> event.
            </remarks>
      <example>
        <!--CodecsOptions.AllocateImage-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL allocateImage;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getAllocateImage()
public void setAllocateImage(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.StoreDataInImage">
      <summary>Enables or disables the automatic storage of the image data into the <see cref="T:Leadtools.RasterImage" /> during a file load process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to have Leadtools store the loaded image data into the <see cref="T:Leadtools.RasterImage" />, false to disable it.</value>
      <remarks>
            If you do not allow Leadtools to allocate the memory for the storage of the image data, then you should process the data
            manually using the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage_EV">RasterCodecs.LoadImage</see> event.
            </remarks>
      <example>For an example, refer to <see cref="P:Leadtools.Codecs.CodecsLoadOptions.AllocateImage" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL storeDataInImage;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getStoreDataInImage()
public void setStoreDataInImage(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.Format">
      <summary>Gets or sets the load format. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.RasterImageFormat" /> enumeration value that specifies the load format.</value>
      <remarks>
            By default, the value of this property is set to false.  This means that the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object should try
            and recognize the format of the image its trying to load itself.  If you know the format of the file, pass it to this member
            prior to calling <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)">RasterCodecs.Load</see> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see>, this will skip the format recognition process and
            speed up the load operation.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterImageFormat format;</pre>
      </objectivec>
      <java>
        <pre>
public RasterImageFormat getFormat()
public void setFormat(RasterImageFormat value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.XResolution">
      <summary>Gets or sets the horizontal resolution (DPI). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The horizontal resolution (DPI).</value>
      <remarks>Use this property to set the X resolution member of the RasterImage 
            when the file format being loaded either does not support resolution 
            or the file has no value stored.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int xResolution;</pre>
      </objectivec>
      <java>
        <pre>
public int getXResolution()
public void setXResolution(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.YResolution">
      <summary>Gets or sets the vertical resolution (DPI). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The vertical resolution (DPI).</value>
      <remarks>Use this property to set the Y resolution member of 
            the RasterImage when the file format being loaded either does not support resolution 
            or the file has no value stored.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int yResolution;</pre>
      </objectivec>
      <java>
        <pre>
public int getYResolution()
public void setYResolution(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.Passes">
      <summary>Gets or sets the number of passes (scans through the image) when loading a progressive image (JPEG mainly). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>The number of passes (scans through the image) when loading a progressive image.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>Any positive number.</term>
            <description>Load a progressive file showing at most the specified number of passes.</description>
          </item>
          <item>
            <term>0</term>
            <description>Load the file in one pass.</description>
          </item>
          <item>
            <term>-1</term>
            <description>Load a progressive file showing only significant scans.</description>
          </item>
          <item>
            <term>-2</term>
            <description>Load a progressive file showing all the scans.</description>
          </item>
        </list>
      </value>
      <remarks>
        <para>This value is also used when loading JBIG files to determine the number of resolutions to load to create a
            progressive load effect.</para>
        <para>This property controls the number of times the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage_EV">RasterCodecs.LoadImage</see> event
            can be called for a particular row. If you do not use the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage_EV">RasterCodecs.LoadImage</see>
            event, this value is ignored.The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage_EV">RasterCodecs.LoadImage</see> event can be used to
            implement a paint while load feature. For progressive files, the event is called several times for the same image row. The
            quality of the row is improved with every call. The improvements in some passes do not have visual improvements, so it is
            recommended you show only the significant scans (-1).</para>
      </remarks>
      <seealso cref="T:L.Topics.ControllingProgressiveLoadsAndSaves">Controlling Progressive Loads and Saves</seealso>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing JBIG Features</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.Passes">CodecsJpegSaveOptions.Passes</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int passes;</pre>
      </objectivec>
      <java>
        <pre>
public int getPasses()
public void setPasses(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.Rotated">
      <summary>Indicates whether or not to load files without rotating them. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to load files rotated, false to ignore the view perspective stored in the file.</value>
      <remarks>This affects files that can be saved with a rotated view perspective.</remarks>
      <seealso cref="T:Leadtools.Topics.AccountingForViewPerspective">Accounting for View Perspective</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL rotated;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getRotated()
public void setRotated(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.Signed">
      <summary>Indicates whether or not to load the image with negative pixel values. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to load and keep negative pixel values, false to set negative pixel values to 0.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL isSigned;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getSigned()
public void setSigned(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.InitAlpha">
      <summary>Indicates whether or not to initialize the alpha channel when loading images as 32 or 64-bit. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to set the alpha channel to ones (0xFF for 8-bit and OxFFFF for 16-bit), false to set the alpha channel to zeros.</value>
      <remarks>
        <para>The default value for this property has changed from <strong>false</strong> to <strong>true</strong> in LEADTOOLS v16.5.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL initAlpha;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getInitAlpha()
public void setInitAlpha(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.UseWriteableBitmap">
      <summary>Indicates whether or not to use a Silverlight <see cref="T:Leadtools.RasterMemoryFlags">WriteableBitmap</see> object for storing the image data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use a Silverlight <see cref="T:Leadtools.RasterMemoryFlags">WriteableBitmap</see> object for storing the image data; false otherwise.</value>
      <remarks>
        <para>This property is only supported in Silverlight versions of LEADTOOLS.</para>
        <para>Setting this property to true can speed up image loading, image processing and image display by using a Silverlight <see cref="T:Leadtools.RasterMemoryFlags">WriteableBitmap</see> object for storing the image data.</para>
        <para>Setting this property to true will force the image data to be loaded as 32-bit, and will ignore the bitsPerPixel parameter passed to <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)">RasterCodecs.Load</see>.</para>
      </remarks>
      <noexample />
      <seealso cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.WriteableBitmap</seealso>
      <seealso cref="M:Leadtools.Windows.Media.RasterImageConverter.ConvertToSource(Leadtools.RasterImage,Leadtools.Windows.Media.ConvertToSourceOptions)">RasterImageConverter.ConvertToSource</seealso>
      <seealso cref="T:Leadtools.Windows.Media.ConvertToSourceOptions">ConvertToSourceOptions.AutoDetectAlpha</seealso>
      <seealso cref="T:Leadtools.Windows.Media.ConvertFromSourceOptions">ConvertFromSourceOptions.AutoDetectAlpha</seealso>
      <seealso cref="T:Leadtools.ImageProcessing.DetectAlphaCommand">DetectAlphaCommand</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.AutoDetectAlpha">CodecsLoadOptions.AutoDetectAlpha</seealso>
      <seealso cref="P:Leadtools.RasterImage.PremultiplyAlpha">RasterImage.PremultiplyAlpha</seealso>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.AutoDetectAlpha">
      <summary>Indicates whether or not to automatically detect if the image has meaningful alpha channel values. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true automatically detect if the image has meaningful alpha channel values; false otherwise.</value>
      <remarks>
        <para>This property is only supported in Silverlight versions of LEADTOOLS.</para>
        <para>This property only has an effect when using a Silverlight <see cref="T:Leadtools.RasterMemoryFlags">WriteableBitmap</see> object for image data storage.</para>
        <para>Setting this property to true can slow down image loading and image processing.  If you know that your images have 
            meaningful alpha channel values or if you know that your images have only 0xFF for alpha channel values, set this property to false.</para>
        <para>When this property is true, LEADTOOLS will detect if the loaded image data contains meaningful alpha channel values and then set 
            the <see cref="P:Leadtools.RasterImage.PremultiplyAlpha">RasterImage.PremultiplyAlpha</see> property accordingly.</para>
      </remarks>
      <noexample />
      <seealso cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.WriteableBitmap</seealso>
      <seealso cref="M:Leadtools.Windows.Media.RasterImageConverter.ConvertToSource(Leadtools.RasterImage,Leadtools.Windows.Media.ConvertToSourceOptions)">RasterImageConverter.ConvertToSource</seealso>
      <seealso cref="T:Leadtools.Windows.Media.ConvertToSourceOptions">ConvertToSourceOptions.AutoDetectAlpha</seealso>
      <seealso cref="T:Leadtools.Windows.Media.ConvertFromSourceOptions">ConvertFromSourceOptions.AutoDetectAlpha</seealso>
      <seealso cref="T:Leadtools.ImageProcessing.DetectAlphaCommand">DetectAlphaCommand</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.UseWriteableBitmap">CodecsLoadOptions.UseWriteableBitmap</seealso>
      <seealso cref="P:Leadtools.RasterImage.PremultiplyAlpha">RasterImage.PremultiplyAlpha</seealso>
      <java>
        <pre>
public boolean getAutoDetectAlpha()
public void setAutoDetectAlpha(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.UseNativeLoad">
      <summary>Indicates whether or not to use the native image load capabilities of Silverlight. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use the native image load capabilities of Silverlight; false otherwise.</value>
      <remarks>
        <para>
          <strong>NOTE:</strong> This property is only supported in Silverlight versions of LEADTOOLS.</para>
        <para>When using this property, if the input image is of a format that is supported natively by Silverlight, then LEADTOOLS
            will use the native image load capabilities to decode the data.</para>
        <para>Setting this property to true will speed up image load times for natively supported file formats.</para>
        <para>If the input file is not a format natively supported by Silverlight, then the LEADTOOLS codecs will decode the file.</para>
        <para>When this property is true and the file is a format natively supported by Silverlight, the resulting image data will
            be stored in a Silverlight WriteableBitmap.  For more information, see <see cref="P:Leadtools.Codecs.CodecsLoadOptions.UseWriteableBitmap">CodecsLoadOptions.UseWriteableBitmap</see> 
            and <see cref="P:Leadtools.RasterImage.IsGlobalMemory">RasterImage.IsGlobalMemory</see>.</para>
      </remarks>
      <noexample />
      <seealso cref="T:Leadtools.RasterMemoryFlags">RasterMemoryFlags.WriteableBitmap</seealso>
      <seealso cref="M:Leadtools.Windows.Media.RasterImageConverter.ConvertToSource(Leadtools.RasterImage,Leadtools.Windows.Media.ConvertToSourceOptions)">RasterImageConverter.ConvertToSource</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.UseWriteableBitmap">CodecsLoadOptions.UseWriteableBitmap</seealso>
      <java>
        <pre>
public boolean getUseNativeLoad()
public void setUseNativeLoad(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.FixedPalette">
      <summary>Enables or disables loading the image to the LEAD fixed palette. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to force a palletized image to be dithered to the LEAD fixed palette.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL fixedPalette;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getFixedPalette()
public void setFixedPalette(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.NoInterlace">
      <summary>Enables or disables loading files as interlaced. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>When set to true, the Load methods pass image data in the order that is displayed, regardless of how it is
            stored in the file.</value>
      <remarks>
            Set this flag if your program does not handle interlaced file formats.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL noInterlace;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getNoInterlace()
public void setNoInterlace(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.Compressed">
      <summary>Enables or disables keeping the loaded image data compressed in memory. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to keep loaded data compressed in memory.</value>
      <remarks>
        <para>If possible, load the file as a 1-bit RLE-compressed image.</para>
        <strong>Note:</strong> This requires <see cref="T:Leadtools.Topics.RasterProDocMed">Document and Medical</see> Support.
            </remarks>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL compressed;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getCompressed()
public void setCompressed(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.SuperCompressed">
      <summary>Enables or disables keeping the loaded image data compressed in memory. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to keep loaded data compressed in memory.</value>
      <remarks>
        <para>If possible, load the file as a 24-bit LEAD Super-compressed image.</para>
        <strong>Note:</strong> This requires <see cref="T:Leadtools.Topics.RasterProDocMed">Document and Medical</see> Support.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL superCompressed;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getSuperCompressed()
public void setSuperCompressed(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.TiledMemory">
      <summary>Gets or sets a value indicating whether to use tiled memory when loading an image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to load the image using tiled; false otherwise.</value>
      <remarks>
            When the value of this property is true, the image is created where the data pointers are maintained in tiles,
            useful for very large images.
            </remarks>
      <example>For an example on changing the default load memory mode, refer to <see cref="P:Leadtools.Codecs.CodecsLoadOptions.DiskMemory" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL tiledMemory;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getTiledMemory()
public void setTiledMemory(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.NoTiledMemory">
      <summary>Gets or sets a value indicating whether to allow tiled images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to prevent tiled image; false otherwise.</value>
      <remarks>
            When using tiled memory, the image is created where the data pointers are maintained in tiles,
            useful for very large images.  Setting the value of this property to true will prevent the image
            from being created in tiles.
            </remarks>
      <example>For an example on changing the default load memory mode, refer to <see cref="P:Leadtools.Codecs.CodecsLoadOptions.DiskMemory" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL noTiledMemory;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getNoTiledMemory()
public void setNoTiledMemory(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.DiskMemory">
      <summary>Gets or sets a value indicating whether to use disk memory when loading an image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to load the image using disk memory; false otherwise.</value>
      <remarks>
            When the value of this property is true, the image is stored in disk and not in conventional memory.
            </remarks>
      <example>
        <!--CodecsOptions.DiskMemory-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL diskMemory;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getDiskMemory()
public void setDiskMemory(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.NoDiskMemory">
      <summary>Gets or sets a value indicating whether to allow disk memory when loading an image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to prevent loading the image using disk memory; false otherwise.</value>
      <remarks>
            When using tiled memory, the image data is stored in disk and not in conventional memory.  Setting the
            value of this property to true will prevent the image from being created in disk.
            </remarks>
      <example>For an example on changing the default load memory mode, refer to <see cref="P:Leadtools.Codecs.CodecsLoadOptions.DiskMemory" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL noDiskMemory;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getNoDiskMemory()
public void setNoDiskMemory(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadOptions.LoadCorrupted">
      <summary>Indicates whether or not to load corrupted files without throwing an exception. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to load corrupted files, false to throw an exception if the file cannot be completely loaded successfully.</value>
      <remarks>This mainly applies to JPEG compressed files that have corruption in the compressed data.  If this property is set to True, then LEADTOOLS will load as much of the image data as possible, and will not throw an exception.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL loadCorrupted;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getLoadCorrupted()
public void setLoadCorrupted(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsSaveOptions">
      <summary>Provides access to generic file save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsSaveOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsSaveOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsSaveOptions.Reset">
      <summary>Initializes this instance of <see cref="T:Leadtools.Codecs.CodecsSaveOptions" /> to the default values. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>-(void)reset;</pre>
      </objectivec>
      <java>
        <pre>public void reset()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsSaveOptions.GetResolutions">
      <summary>Gets the resolutions to save when saving multi-resolution files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>An array of <see cref="T:Leadtools.LeadSize" /> structures indicating the resolutions to save.</returns>
      <remarks>
        <para>Currently, this only works with the JBIG format.</para>
        <para>For JBIG, the maximum number of resolutions that can be saved is 29.</para>
        <para>For a JBIG file, the values of different resolutions are implied because the dimensions of each resolution layer are
            half the dimensions of the one directly above it.</para>
        <para>
          <see cref="M:Leadtools.Codecs.CodecsSaveOptions.GetResolutions" /> and <see cref="M:Leadtools.Codecs.CodecsSaveOptions.SetResolutions(Leadtools.LeadSize[])" /> are used to determine the highest resolution layer
            which will be saved in a file. You can fill the array with an actual width and height, or you can fill either the width or
            height with a valid value, and specify 0 for the other dimension to allow LEADTOOLS to calculate that dimension based on
            the image's aspect ratio during the next save operation.  Note that for JBIG, all the values set in the array are stored,
            but only the first item is used during an actual file save process.</para>
        <para>Ex.</para>
        <para>
          <code>
              uCount = 3
              Resolution[0].Width = 800
              Resolution[0].Height = 0
            </code>
        </para>
        <para>If you then save an image that is 1600 x 1200, the resolutions that are stored in the file would be:</para>
        <para>
          <code>
               800 x 600
               400 x 300
               200 x 150
            </code>
        </para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing JBIG Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>- (NSArray*)getResolutions;</pre>
      </objectivec>
      <java>
        <pre>public LeadSize[] getResolutions()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsSaveOptions.SetResolutions(Leadtools.LeadSize[])">
      <summary>Sets the resolutions to save when saving multi-resolution files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="resolutions">An array of <see cref="T:Leadtools.LeadSize" /> structures indicating the resolutions to save.</param>
      <remarks>
        <para>Currently, this only works with the JBIG format.</para>
        <para>For JBIG, the maximum number of resolutions that can be saved is 29.</para>
        <para>For a JBIG file, the values of different resolutions are implied because the dimensions of each resolution layer are
            half the dimensions of the one directly above it.</para>
        <para>
          <see cref="M:Leadtools.Codecs.CodecsSaveOptions.GetResolutions" /> and <see cref="M:Leadtools.Codecs.CodecsSaveOptions.SetResolutions(Leadtools.LeadSize[])" /> are used to determine the highest resolution layer
            which will be saved in a file. You can fill the array with an actual width and height, or you can fill either the width or
            height with a valid value, and specify 0 for the other dimension to allow LEADTOOLS to calculate that dimension based on
            the image's aspect ratio during the next save operation.  Note that for JBIG, all the values set in the array are stored,
            but only the first item is used during an actual file save process.</para>
        <para>Ex.</para>
        <para>
          <code>
              uCount = 3
              Resolution[0].Width = 800
              Resolution[0].Height = 0
            </code>
        </para>
        <para>If you then save an image that is 1600 x 1200, the resolutions that are stored in the file would be:</para>
        <para>
          <code>
               800 x 600
               400 x 300
               200 x 150
            </code>
        </para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing JBIG Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>- (BOOL)setResolutions:(NSArray*)resolutions;</pre>
      </objectivec>
      <java>
        <pre>public void setResolutions(LeadSize[] resolutions)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveOptions.Markers">
      <summary>Enables or disables saving metadata markers during file save. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save any existing metadata markers.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL markers;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getMarkers()
public void setMarkers(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveOptions.Tags">
      <summary>Enables or disables saving metadata tags during file save. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save any existing metadata tags.</value>
      <remarks>When LEADTOOLS saves an image that contains tags, the tags are always written first and the image data afterwards. This order is not configurable.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL tags;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getTags()
public void setTags(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveOptions.GeoKeys">
      <summary>Enables or disables saving GeoKey metadata during file save. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save any existing GeoKey metadata.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL geoKeys;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getGeoKeys()
public void setGeoKeys(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveOptions.Comments">
      <summary>Enables or disables saving metadata comments during file save. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save any existing metadata comments.</value>
      <remarks>When LEADTOOLS saves an image that contains tags, the tags are always written first and the image data 
            afterwards. This order is not configurable. LEADTOOLS treats non-image data as comments. For information about using 
            this function to support FlashPix, refer to <see cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</see> .
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL comments;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getComments()
public void setComments(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveOptions.Password">
      <summary>Gets or sets the password used when saving encrypted files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The password used when saving encrypted files.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, copy) NSString* password;</pre>
      </objectivec>
      <java>
        <pre>
public String getPassword()
public void setPassword(String value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveOptions.MotorolaOrder">
      <summary>Enables or disables saving the file as Motorola byte order when possible. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save the file using Motorola byte order, false to save the file using Intel byte order.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL motorolaOrder;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getMotorolaOrder()
public void setMotorolaOrder(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveOptions.FixedPalette">
      <summary>Enables or disables saving the file using the LEAD fixed palette. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to force the saved image to use the LEAD fixed palette.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL fixedPalette;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getFixedPalette()
public void setFixedPalette(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveOptions.OptimizedPalette">
      <summary>Enables or disables saving the file using an optimized palette. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to force the image to be saved using an optimized palette.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL optimizePalette;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getOptimizedPalette()
public void setOptimizedPalette(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveOptions.GrayOutput">
      <summary>Enables or disables saving a TIFF or PNG file as grayscale, without a palette. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to force the output TIFF or PNG file to be saved as grayscale, without a palette</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL grayOutput;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getGrayOutput()
public void setGrayOutput(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveOptions.UseImageDitheringMethod">
      <summary>Gets or sets a value indicating whether to use the image
            <see cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use the image <see cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod</see>;
            otherwise, false.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useImageDitheringMethod;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseImageDitheringMethod()
public void setUseImageDitheringMethod(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveOptions.InitAlpha">
      <summary>Indicates whether or not to initialize the alpha channel when saving images as 32 or 64-bit. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to set the alpha channel to ones (0xFF for 8-bit and OxFFFF for 16-bit), false to set the alpha channel to zeros.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL initAlpha;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getInitAlpha()
public void setInitAlpha(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveOptions.RetrieveDataFromImage">
      <summary>Gets or sets a value that indicate whether to automatically populate the scanline buffers in <see cref="T:Leadtools.Codecs.CodecsSaveImageEventArgs" /> when using
            the <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <strong>true</strong> to automatically populate the scanline buffers in <see cref="T:Leadtools.Codecs.CodecsSaveImageEventArgs" /> when using
            the <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see> event, or <strong>false</strong> to make the user
            responsible for populating the scanline buffers. Default value is <strong>false</strong>.</value>
      <remarks>
        <para>The <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer" /> property works as the input and output buffer containing the image data to save. If
            the value of <see cref="P:Leadtools.Codecs.CodecsSaveOptions.RetrieveDataFromImage" /> is set to <strong>false</strong> (the default), then the user
            is always responsible for providing the image data by setting in <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer" />. If the value of <see cref="P:Leadtools.Codecs.CodecsSaveOptions.RetrieveDataFromImage" /> is set to
            <strong>true</strong>, then the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will populate the <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer" /> prior to raising this event. The user
            can then inspect or modify the scanlines data or simple ignore it to save the original image data as is.</para>
        <para>Notice that on either case, the user must provide the scanline data in the source image original format (stored in the <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Image" />
            property. The <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will then convert this data to the appropriate output format if needed, for example, if
            the user instructed the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object to save the image in a different file format than the original image.</para>
      </remarks>
      <example>
        <para>The following example shows how to use <see cref="P:Leadtools.Codecs.CodecsSaveOptions.RetrieveDataFromImage" /> to:</para>
        <para>
          <list type="number">
            <item>
              <description>Save the image without instructing <see cref="T:Leadtools.Codecs.RasterCodecs" /> to automatically populate the data.
            Resulting in an output file with a blank image.</description>
            </item>
            <item>
              <description>Save the image while <see cref="T:Leadtools.Codecs.RasterCodecs" /> to automatically populate the data.
            Resulting in a correct output image.</description>
            </item>
            <item>
              <description>Save the image with <see cref="T:Leadtools.Codecs.RasterCodecs" /> automatically generating the data then manipulating it to generate
            an output file that is an invert of the original image.</description>
            </item>
          </list>
        </para>
        <!--CodecsSaveOptions.RetrieveDataFromImage-->
      </example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL retrieveDataFromImage;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getRetrieveDataFromImage()
public void setRetrieveDataFromImage(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsOptions">
      <summary>Provides access to all the specific file format load and save options supported by LEADTOOLS. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="P:Leadtools.Codecs.CodecsLoadOptions.AllocateImage" />.</example>
      <objectivec>
        <pre>@interface LTCodecsOptions : NSObject&lt;NSCopying&gt;</pre>
      </objectivec>
      <java>
        <pre>public class CodecsOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.Codecs.CodecsOptions" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsOptions.Dispose">
      <summary>Releases all resources used by this <see cref="T:Leadtools.Codecs.CodecsOptions" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <seealso cref="T:System.IDisposable" />
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <java>
        <pre>void dispose()</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.CodecsOptions.Finalize">
      <summary>This member overrides <see cref="M:System.Object.Finalize" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <seealso cref="T:System.IDisposable" />
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsOptions.Dispose(System.Boolean)">
      <summary>Releases all the resources used by this <see cref="T:Leadtools.Codecs.CodecsOptions" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsOptions.Clone">
      <summary>Creates an exact copy of the current page of this <see cref="T:Leadtools.Codecs.CodecsOptions" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>The <see cref="T:Leadtools.Codecs.CodecsOptions" /> this method creates.</returns>
      <noremarks />
      <noexample />
      <java>
        <pre>public CodecsOptions clone()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Load">
      <summary>Gets the generic load options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The generic load options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsLoadOptions* load;</pre>
      </objectivec>
      <java>
        <pre>public CodecsLoadOptions getLoad()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Save">
      <summary>Gets the generic save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The generic save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsSaveOptions* save;</pre>
      </objectivec>
      <java>
        <pre>public CodecsSaveOptions getSave()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Abc">
      <summary>Gets the ABC load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The ABC load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsAbcOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Ecw">
      <summary>Gets the ECW load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The ECW load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsEcwOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Eps">
      <summary>Gets the EPS load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The EPS load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsEpsOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Fpx">
      <summary>Gets the FPX load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The FPX load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsFpxOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Gif">
      <summary>Gets the GIF load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The GIF load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsGifOptions* gif;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Jbig">
      <summary>Gets the JBIG load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The JBIG load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbigOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsJbigOptions* jbig;</pre>
      </objectivec>
      <java>
        <pre>public CodecsJbigOptions getJbig()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Jbig2">
      <summary>Gets the JBIG2 load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The JBIG2 load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsJbig2Options* jbig2;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Jpeg">
      <summary>Gets the JPEG and LEAD CMP load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The JPEG and LEAD CMP load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsJpegOptions* jpeg;</pre>
      </objectivec>
      <java>
        <pre>public CodecsJpegOptions getJpeg()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Jpeg2000">
      <summary>Gets the JPEG 2000 and LEAD CMW load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The JPEG 2000 and LEAD CMW load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsJpeg2000Options* jpeg2000;</pre>
      </objectivec>
      <java>
        <pre>public CodecsJpeg2000Options getJpeg2000()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Pcd">
      <summary>Gets the PCD load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The PCD load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPcdOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Pdf">
      <summary>Gets the PDF load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The PDF load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsPdfOptions* pdf;</pre>
      </objectivec>
      <java>
        <pre>public CodecsPdfOptions getPdf()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Png">
      <summary>Gets the PNG load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The PNG load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPngOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsPngOptions* png;</pre>
      </objectivec>
      <java>
        <pre>public CodecsPngOptions getPng()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Ptoka">
      <summary>Gets the PTOKA load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The PTOKA load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPtokaOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Raw">
      <summary>Gets the RAW load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The RAW load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRawOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsRawOptions* raw;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Rtf">
      <summary>Gets the RTF load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The RTF load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRtfOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Tiff">
      <summary>Gets the TIFF load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The TIFF load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsTiffOptions* tiff;</pre>
      </objectivec>
      <java>
        <pre>public CodecsTiffOptions getTiff()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Wmf">
      <summary>Gets the WMF load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The WMF load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsWmfOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Txt">
      <summary>Gets the TEXT load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The TEXT load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Xps">
      <summary>Gets the XPS load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The XML Paper Specification (XPS) load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsXpsOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Xls">
      <summary>Gets the XLS load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The Microsoft Excel 2003 (XLS) load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsXlsLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Doc">
      <summary>Gets the DOC/DOCX load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The Microsoft Word 97-2003 (DOC) or Microsoft Word 2007/2010 (DOCX)load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsDocLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Anz">
      <summary>Gets the ANZ (Analyze) load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The ANZ (Analyze) load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsAnzLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Vff">
      <summary>Gets the VFF (Sun TAAC Bitmap) load and save options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The VFF (Sun TAAC Bitmap) load and save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVffOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.RasterizeDocument">
      <summary>Gets the options used when loading or saving a document file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>An instance of <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentOptions" /> object that contains the current
            document file load and save options.</value>
      <remarks>
        <para>LEADTOOLS provides support for loading a document as a raster image. Document formats such as PDF, XPS, DOC/DOCX(2007/2010), PPT/PPTX(2007/2010), XLS/XLSX(2007/2010), RTF and Text
            do not contain physical width, height or resolution. It is up to the loader (in this case, the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object) to
            specify the transformation from logical coordinates to physical pixels through a process called rasterization.
            For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsRasterizeDocumentOptions* rasterizeDocument;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOptions.Vector">
      <summary>Gets the options used when loading or saving a vector image file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            An instance of <see cref="T:Leadtools.Codecs.CodecsVectorOptions" /> object that contains the current
            vector image file load and save options.
            </value>
      <para>
            LEADTOOLS provides support for loading a vector image as a raster image. Vector formats such as DXF, DWG and SVG
            can be converted to a raster image through a process called rasterization.
            </para>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsSaveImageEventArgs">
      <summary>Provides information for the <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>The <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer" /> property works as the input and output buffer containing the image data to save. If
             the value of <see cref="P:Leadtools.Codecs.CodecsSaveOptions.RetrieveDataFromImage" /> is set to <strong>false</strong> (the default), then the user
             is always responsible for providing the image data by setting in <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer" />. If the value of <see cref="P:Leadtools.Codecs.CodecsSaveOptions.RetrieveDataFromImage" /> is set to
             <strong>true</strong>, then the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will populate the <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer" /> prior to raising this event. The user
             can then inspect or modify the scanlines data or simple ignore it to save the original image data as is.</para>
        <para>Notice that on either case, the user must provide the scanline data in the source image original format (stored in the <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Image" />
             property. The <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will then convert this data to the appropriate output format if needed, for example, if
             the user instructed the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object to save the image in a different file format than the original image.</para>
        <para>This event can also be used to provide feedback to the user on the save operation progression and a chance for cancellation. To understand
             the various page and percentages, consider the following example.</para>
        <para>File Ocr.tif is a multi-page TIF file containing 4 pages. We want to save pages 2 through 4 (a total of 3 pages). We make the following call:</para>
        <para>
          <code>
             private void Test(RasterCodecs rasterCodecsObject)
             {
                // Load the image
                RasterImage image = rasterCodecsObject.Load(@"C:\Users\Public\Documents\LEADTOOLS Images\Ocr.tif");
            
                // Tell the RasterCodecs object to automatically set the image data to save from the source image
                rasterCodecsObject.Options.Save.RetrieveDataFromImage = true;
            
                // Subscribe to the SaveImage event
                rasterCodecsObject.SaveImage += new EventHandler&lt;CodecsSaveImageEventArgs&gt;(rasterCodecsObject_SaveImage);
            
                // Save pages 2 through 4 (total of 3 pages)
                int firstImagePage = 2;
                int lastImagePage = 4;
                int firstFilePage = 1;
            
                // Save
                rasterCodecsObject.Save(
                   image,
                   @"C:\Users\Public\Documents\LEADTOOLS Images\Ocr_pages2through4.tif",
                   RasterImageFormat.Tif,
                   1,
                   firstImagePage,
                   lastImagePage,
                   firstFilePage,
                   CodecsSavePageMode.Overwrite);
            
                // Unsubscribe to the LoadImage event
                rasterCodecsObject.SaveImage -= new EventHandler&lt;CodecsSaveImageEventArgs&gt;(rasterCodecsObject_SaveImage);
            
                image.Dispose();
             }
            
             private void rasterCodecsObject_SaveImage(object sender, CodecsSaveImageEventArgs e)
             {
             }
             </code>
        </para>
             Inside the event handler, we will have the following values:
             <list type="table"><listheader><term>Member</term><description>Values</description></listheader><item><term><see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.FirstPage" /></term><description>Will always be 1 since we specified 1 as the first file page number.</description></item><item><term><see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Page" /></term><description>Will go from 1 through 3 since we are saving 3 pages total starting as destination (file) page number 1.</description></item><item><term><see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.LastPage" /></term><description>Will always be 3 since we are saving 3 pages from 1 to 3.</description></item><item><term><see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.ImagePage" /></term><description>Will go from 2 through 4 since we are saving existing pages 2, 3, and 4.</description></item><item><term><see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.PagePercent" /></term><description>Will go from 0 to 100 three times since we are saving three pages. This value will reset back to zero whenever <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Page" /> and <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.ImagePage" /> changes.</description></item><item><term><see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.TotalPercent" /></term><description>Will go from 0 to 100 during the whole saving operation. When this value is 100, all the pages are saved and the method returns.</description></item></list></remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <objectivec>
        <pre>@interface LTCodecsSaveImageEventArgs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsSaveImageEvent extends LeadEvent</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Image">
      <summary>Gets the <see cref="T:Leadtools.RasterImage" /> object being saved. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The <see cref="T:Leadtools.RasterImage" /> object being saved.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, strong) LTRasterImage* image;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImage()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.FileName">
      <summary>Gets the name of the file currently being saved. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:System.String" /> containing the name of the file currently being saved.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Stream">
      <summary>Gets the stream object currently being saved. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Stream" /> object currently being saved.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, strong) LTLeadStream* stream;</pre>
      </objectivec>
      <java>
        <pre>public ILeadStream getStream()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.OffsetValid">
      <summary>Gets a value that determines whether the <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Offset" /> property is valid. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true if the value in the <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Offset" /> property is valid, false if it is being ignored.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Offset">
      <summary>Gets the offset to the start of the image data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The offset to the start of the image data.</value>
      <remarks>
        <para>This is only valid if <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.OffsetValid" /> is true.</para>
        <para>This is the same value passed to the <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> methods that accepts a
            <strong>offset</strong> parameter.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.FirstPage">
      <summary>Gets the index of the first page being saved. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The 1-based index of the first page being saved.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int firstPage;</pre>
      </objectivec>
      <java>
        <pre>public int getFirstPage()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Page">
      <summary>Gets the page number currently being saved. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The 1-based page number currently being saved.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int page;</pre>
      </objectivec>
      <java>
        <pre>public int getPage()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.LastPage">
      <summary>Gets the index of the last page being saved. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The 1-based index of the last page being saved.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int lastPage;</pre>
      </objectivec>
      <java>
        <pre>public int getLastPage()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.ImagePage">
      <summary>Gets the index of the <see cref="P:Leadtools.RasterImage.Page">RasterImage.Page</see> currently being saved. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The 1-based index of the <see cref="P:Leadtools.RasterImage.Page">RasterImage.Page</see> currently being saved.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int imagePage;</pre>
      </objectivec>
      <java>
        <pre>public int getImagePage()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.PagePercent">
      <summary>Gets the save completion percentage of the current page. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A number between 0 and 100 that indicates the completion percentage of the save operation of the current page.</value>
      <remarks>
        <para>Using the <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.PagePercent" /> and <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.TotalPercent" /> properties, you can use the <see cref="T:Leadtools.Codecs.CodecsSaveImageEventArgs" /> to show
            a progress bar of the current save operation.</para>
        <para>When saving a multi-page file, <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.PagePercent" /> will go from 0 to 100 for each page saved while <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.TotalPercent" /> will go
            from 0 to 100 only once during the whole page operation. Usually, you will use <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.TotalPercent" /> to show an overall save progress if the multi-page
            image is considered to be one document. If however, individual progress is required for each page, then you can track the <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.PagePercent" /> property
            as well.</para>
        <para>When saving a single page file or one page to a multi-page file, both <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.PagePercent" /> and <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.TotalPercent" /> will go from
            0 to 100 simultaneously.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int pagePercent;</pre>
      </objectivec>
      <java>
        <pre>public int getPagePercent()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.TotalPercent">
      <summary>Gets the overall completion percentage for the save operation. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A number between 0 and 100 that indicates the overall completion percentage of the save operation.</value>
      <remarks>
        <para>Using the <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.PagePercent" /> and <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.TotalPercent" /> properties, you can use the <see cref="T:Leadtools.Codecs.CodecsSaveImageEventArgs" /> to show
            a progress bar of the current save operation.</para>
        <para>When saving a multi-page file, <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.PagePercent" /> will go from 0 to 100 for each page saved while <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.TotalPercent" /> will go
            from 0 to 100 only once during the whole page operation. Usually, you will use <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.TotalPercent" /> to show an overall save progress if the multi-page
            image is considered to be one document. If however, individual progress is required for each page, then you can track the <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.PagePercent" /> property
            as well.</para>
        <para>When saving a single page file or one page to a multi-page file, both <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.PagePercent" /> and <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.TotalPercent" /> will go from
            0 to 100 simultaneously.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int totalPercent;</pre>
      </objectivec>
      <java>
        <pre>public int getTotalPercent()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Cancel">
      <summary>Gets or sets a value which allows the user to abort the save process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to abort the save process, false to continue normally.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL cancel;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getCancel()
public void setCancel(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Row">
      <summary>Gets the current image row number of the first line in <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The current image row number of the first line in <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer" />.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int row;</pre>
      </objectivec>
      <java>
        <pre>public int getRow()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Lines">
      <summary>Gets the number of lines to copy from <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The number of lines to copy from <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer" />.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int lines;</pre>
      </objectivec>
      <java>
        <pre>public int getLines()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer">
      <summary>Gets the memory buffer containing one or more lines of output image data that the you must provide. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.RasterNativeBuffer" /> object containing one or more lines of output image data that the you must provide.</value>
      <remarks>
        <para>The <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer" /> property works as the input and output buffer containing the image data to save. If
             the value of <see cref="P:Leadtools.Codecs.CodecsSaveOptions.RetrieveDataFromImage" /> is set to <strong>false</strong> (the default), then the user
             is always responsible for providing the image data by setting in <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer" />. If the value of <see cref="P:Leadtools.Codecs.CodecsSaveOptions.RetrieveDataFromImage" /> is set to
             <strong>true</strong>, then the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will populate the <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Buffer" /> prior to raising this event. The user
             can then inspect or modify the scanlines data or simple ignore it to save the original image data as is.</para>
        <para>Notice that on either case, the user must provide the scanline data in the source image original format (stored in the <see cref="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Image" />
             property. The <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will then convert this data to the appropriate output format if needed, for example, if
             the user instructed the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object to save the image in a different file format than the original image.</para>
      </remarks>
      <example>
        <!--MYEXAMPLE-->For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <java>
        <pre>SYNTAX</pre>
      </java>
      <objectivec>
        <pre>
@property (nonatomic, assign) unsigned char* buffer;
@property (nonatomic, assign) size_t bufferLength;             </pre>
      </objectivec>
      <java>
        <pre>public RasterNativeBuffer getBuffer()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsSaveImageEventArgs.Stream_WinRT">
      <summary>
            Gets the stream object currently being saved.
            </summary>
      <value>The <see cref="T:Leadtools.ILeadStream" /> object currently being saved.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">RasterCodecs.SaveImage</see>.</example>
      <winrt />
    </member>
    <member name="T:Leadtools.Codecs.CodecsTiffImageInfo">
      <summary>Provides information specific to TIFF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@interface LTCodecsTiffImageInfo : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsTiffImageInfo</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffImageInfo.HasNoPalette">
      <summary>Determines if the image has no palette. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image is saved without a palette, false if the image is saved with a palette.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL hasNoPalette;</pre>
      </objectivec>
      <java>
        <pre>public boolean hasNoPalette()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffImageInfo.IsImageFileDirectoryOffsetValid">
      <summary>Determines whether or not the image has a valid image file directory (IFD). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image has a valid IFD; false, otherwise.</value>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>v
            <noremarks /><example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example><objectivec><pre>@property (nonatomic, assign, readonly) BOOL isImageFileDirectoryOffsetValid;</pre></objectivec><java><pre>public boolean isImageFileDirectoryOffsetValid()</pre></java><keywords>Silverlight</keywords></member>
    <member name="P:Leadtools.Codecs.CodecsTiffImageInfo.ImageFileDirectoryOffset">
      <summary>Gets the image file directory offset. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The image file directory offset.</value>
      <remarks>
            Use this to speed up the handling of TIFF files with many pages.
            </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) ssize_t imageFileDirectoryOffset;</pre>
      </objectivec>
      <java>
        <pre>public long getImageFileDirectoryOffset()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsCmpQualityFactorPredefined">
      <summary>Indicates the pre-defined quality factor for saving LEAD CMP compressed images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>typedef enum LTCodecsCmpQualityFactorPredefined LTCodecsCmpQualityFactorPredefined;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsCmpQualityFactorPredefined</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCmpQualityFactorPredefined.PerfectQuality1">
      <summary>
        <para>Perfect quality 1</para>
        <para>This option compresses all colors of a 24-bit file and maintains the quality of the original image at a smaller file size. As the name suggests, there is no visual loss of color at this setting.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCmpQualityFactorPredefined.PerfectQuality2">
      <summary>
        <para>Perfect quality 2</para>
        <para>This will produce a smaller file size than PQ1 while maintaining similar quality.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCmpQualityFactorPredefined.SuperQuality">
      <summary>
        <para>Quality far more important than size</para>
        <para>This option removes colors not noticed by the human eye. Most viewers cannot tell the difference between an image compressed at this level and the original image.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCmpQualityFactorPredefined.Quality">
      <summary>
        <para>Quality more important than size</para>
        <para>While more colors are removed, most of them are colors or shades that are close to one another. The compressed image will appear very much like the original image. It will take some study to see the difference.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCmpQualityFactorPredefined.QualityAndSize">
      <summary>
        <para>Quality and size equally important</para>
        <para>This option provides the highest compression while maintaining good image quality. Try this option first, then move up or down the list accordingly to obtain acceptable compression size and image quality.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCmpQualityFactorPredefined.Sharp">
      <summary>
        <para>Size more important that quality (sharp)</para>
        <para>This option is recommended for images that have sharp edges. For example, an image that has a text overlay or an image with many straight lines. While it creates a larger file than the next option, it retains better edges.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCmpQualityFactorPredefined.LessTiling">
      <summary>
        <para>Size more important than quality (less tiling)</para>
        <para>This option produces less tiling in the image than the previous options. However, it may distort some text or straight lines. It is a good option for image database applications.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCmpQualityFactorPredefined.MaximumQuality">
      <summary>
        <para>Maximum compression keeping quality</para>
        <para>This option provides maximum compression while maintaining as high as possible image quality.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCmpQualityFactorPredefined.MaximumCompression">
      <summary>
        <para>Maximum compression</para>
        <para>This option gives maximum compression. It is equivalent to a Q factor of 255.</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCmpQualityFactorPredefined.Custom">
      <summary>
        <para>Custom Quality Factor.</para>
      </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJpegLoadOptions">
      <summary>Provides options specifically for loading JPEG and LEAD CMP images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsJpegLoadOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsJpegLoadOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegLoadOptions.DisableMmx">
      <summary>Enables or disables use of MMX optimized instructions when loading JPEG and LEAD CMP images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to disable MMX, false to enable it.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegLoadOptions.DisableP3">
      <summary>Enables or disables use of PIII optimized instructions when loading JPEG and LEAD CMP images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to disable PIII, false to enable it.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegLoadOptions.ForceCieLab">
      <summary>Forces the load process to expect CIELAB colorspace data in the file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to force the load process to expect CIELAB colorspace data in the file.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL forceCieLab;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getForceCieLab()
public void setForceCieLab(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegLoadOptions.UseBadJpegPredictor">
      <summary>Forces the loading of lossless JPEG files that contain incorrect predictors. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to force the loading of lossless JPEG files that contain incorrect predictors.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useBadJpegPredictor;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseBadJpegPredictor()
public void setUseBadJpegPredictor(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegLoadOptions.ForceRgbFile">
      <summary>Forces the load process to expect RGB colorspace data in the file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to force the load process to expect RGB colorspace data in the file.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL forceRgbFile;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getForceRgbFile()
public void setForceRgbFile(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegLoadOptions.UseFastConversion">
      <summary>Enables or disables use of the fast color conversions when loading CMYK or CIELab files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to enable fast color conversion, false to disable it.</value>
      <remarks>
            Setting this property to true will greatly speed up the loading of CMYK and CIELab files,
            but it will reduce the image quality.
            </remarks>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useFastConversion;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseFastConversion()
public void setUseFastConversion(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegLoadOptions.IgnoreAdobeColorTransform">
      <summary>Ignore the Adobe marker containing color transformations. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to ignore the Adobe marker, false to use it.</value>
      <remarks>
            Set this property to True load corrupt files with wrong APPE marker which have incorrect colors.
            </remarks>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.LoadCorrupted" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL ignoreAdobeColorTransform;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getIgnoreAdobeColorTransform()
public void setIgnoreAdobeColorTransform(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJpegSaveOptions">
      <summary>Provides options specifically for saving JPEG and LEAD CMP images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <remarks>
            For information about compression quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsJpegSaveOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsJpegSaveOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">
      <summary>Gets and sets the Quality Factor (QFactor) to use when saving JPEG, LEAD CMP and other compressed images that support Quality Factor. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The Quality Factor to use when saving JPEG and LEAD CMP compressed images.
            </value>
      <remarks>
        <para>You can set a value from 2 to 255, where 2 is the highest quality and 255 is the most compression.</para>
        <para>You can also use a factor of 0 to produce lossless JPEG files.</para>
        <para>For information on formats that support quality factor, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.</para>
      </remarks>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int qualityFactor;</pre>
      </objectivec>
      <java>
        <pre>
public int getQualityFactor()
public void setQualityFactor(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.CmpQualityFactorPredefined">
      <summary>Gets and sets the pre-defined QFactor value when saving LEAD CMP compressed images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The LEAD CMP pre-defined QFactor.</value>
      <remarks>
        <para>When saving LEAD CMP compressed images, you can specify a pre-defined QFactor.</para>
        <para>If you set this property to
            <see cref="T:Leadtools.Codecs.CodecsCmpQualityFactorPredefined">CodecsCmpQualityFactorPredefined.Custom</see>, then you can set a custom
            QFactor in <see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsCmpQualityFactorPredefined cmpQualityFactorPredefined;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsCmpQualityFactorPredefined getCmpQualityFactorPredefined()
public void setCmpQualityFactorPredefined(CodecsCmpQualityFactorPredefined value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.YccStamp">
      <summary>Gets and sets a value indicating the color space to use when saving EXIF stamp images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save the stamp as YCC colorspace, false to save with RGB.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL yccStamp;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getYccStamp()
public void setYccStamp(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.JpegStamp">
      <summary>Gets and sets a value indicating the compression to use when saving EXIF stamp images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save the stamp as JPEG compressed, false to save uncompressed.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL jpegStamp;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getJpegStamp()
public void setJpegStamp(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.SaveWithStamp">
      <summary>Enables and disables saving stamp images when saving JPEG and LEAD CMP compressed images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save stamp images, false to not save stamp images.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL saveWithStamp;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getSaveWithStamp()
public void setSaveWithStamp(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.FixedPaletteStamp">
      <summary>Gets and sets a value which indicates the type of palette to use when saving stamp images that are 8-bit. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use the LEAD Fixed palette, false to use an optimized palette.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL fixedPaletteStamp;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getFixedPaletteStamp()
public void setFixedPaletteStamp(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.SaveWithoutTimestamp">
      <summary>Enables or disables saving the image file with a time stamp. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save without time stamp, false to save with time stamp.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL saveWithoutTimestamp;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getSaveWithoutTimestamp()
public void setSaveWithoutTimestamp(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.StampWidth">
      <summary>Gets and sets the width for the stamp image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The width for the stamp image.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int stampWidth;</pre>
      </objectivec>
      <java>
        <pre>
public int getStampWidth()
public void setStampWidth(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.StampHeight">
      <summary>Gets and sets the height for the stamp image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The height for the stamp image.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int stampHeight;</pre>
      </objectivec>
      <java>
        <pre>
public int getStampHeight()
public void setStampHeight(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.StampBitsPerPixel">
      <summary>Gets and sets the bit depth for the stamp image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The bit depth for the stamp image.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int stampBitsPerPixel;</pre>
      </objectivec>
      <java>
        <pre>
public int getStampBitsPerPixel()
public void setStampBitsPerPixel(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.DisableMmx">
      <summary>Enables or disables use of MMX optimized instructions when saving JPEG and LEAD CMP images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to disable MMX, false to enable MMX.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.SaveOldJtif">
      <summary>Enables or disables saving of old style JTIF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save old style JTIF, false to save the new format.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL saveOldJtif;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getSaveOldJtif()
public void setSaveOldJtif(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.DisableP3">
      <summary>Enables or disables use of PIII optimized instructions when saving JPEG and LEAD CMP images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to disable PIII, false to enable PIII.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegSaveOptions.Passes">
      <summary>Gets and sets the number of passes when saving progressive JPEG and LEAD CMP images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>The number of passes (scans through the image) when saving a progressive JPEG or LEAD CMP file.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>Any positive number &gt; 1.</term>
            <description>Save the file as a progressive file with the specified number of passes.</description>
          </item>
          <item>
            <term>1</term>
            <description>Save a regular file with optimized Huffman tables. 
                 Use this for smaller file size (at the expense of speed).
                 </description>
          </item>
          <item>
            <term>0</term>
            <description>Save the file as an ordinary JPEG or LEAD CMP file (not a progressive file).</description>
          </item>
          <item>
            <term>Any negative number.</term>
            <description>Save the file as a progressive file with the LEADTOOLS default number of passes.</description>
          </item>
        </list>
      </value>
      <seealso cref="T:L.Topics.ControllingProgressiveLoadsAndSaves">Controlling Progressive Loads and Saves</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Passes">CodecsLoadOptions.Passes</seealso>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int passes;</pre>
      </objectivec>
      <java>
        <pre>
public int getPasses()
public void setPasses(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJpegOptions">
      <summary>Provides extra options for loading and saving JPEG and LEAD CMP images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>
        <!--CodecsJpegOptions-->
      </example>
      <objectivec>
        <pre>@interface LTCodecsJpegOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsJpegOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegOptions.Load">
      <summary>Gets the options for loading JPEG and LEAD CMP images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The JPEG and LEAD CMP load options.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsJpegLoadOptions* load;</pre>
      </objectivec>
      <java>
        <pre>public CodecsJpegLoadOptions getLoad()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegOptions.Save">
      <summary>Gets the options for saving JPEG and LEAD CMP images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The JPEG and LEAD CMP save options.</value>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsJpegSaveOptions* save;</pre>
      </objectivec>
      <java>
        <pre>public CodecsJpegSaveOptions getSave()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJpeg2000CompressionControl">
      <summary>Indicates the compression control method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>typedef enum LTCodecsJpeg2000CompressionControl LTCodecsJpeg2000CompressionControl;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsJpeg2000CompressionControl</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000CompressionControl.Lossless">
      <summary>
            Lossless compression.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000CompressionControl.Ratio">
      <summary>
            Compress the file based on the value of the <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CompressionRatio" />.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000CompressionControl.TargetSize">
      <summary>
            Compress the file based on the value of the <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.TargetFileSize" />.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000CompressionControl.QualityFactor">
      <summary>
            Compress the file based on the value of the <see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor" />.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJpeg2000ProgressionsOrder">
      <summary>Indicates the order of progression. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>typedef enum LTCodecsJpeg2000ProgressionsOrder LTCodecsJpeg2000ProgressionsOrder;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsJpeg2000ProgressionsOrder</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000ProgressionsOrder.LayerResolutionComponentPosition">
      <summary>
            Quality axis order. Image starts out blurry and becomes clearer and more detailed
            as additional data is decoded.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000ProgressionsOrder.ResolutionLayerComponentPosition">
      <summary>
            Resolution-axis order. Image starts out small and becomes larger as additional data is decoded.
            Higher compression ratios achieved by leaving lower resolutions in the file.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000ProgressionsOrder.ResolutionPositionComponentLayer">
      <summary>
            Resolution-axis order. Image starts out small and becomes larger as additional data is decoded. 
            Higher compression ratios achieved by leaving lower resolutions 
            in the file.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000ProgressionsOrder.PositionComponentResolutionLayer">
      <summary>
            Position axis order. Image starts out as a series of blocks starting from the top left corner. Additional
            portions of the image become visible as more data is decoded. Image data stored by spatial location.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000ProgressionsOrder.ComponentPositionResolutionLayer">
      <summary>
            Color-axis order.  Image starts out gray. Color is added as more data is decoded. Image data stored
            by color channel, starting with channel Y, then U, then V. If the transform to YUV option
            is used, the lowest decompressed image level for RGB is grayscale. Otherwise, the output is only the red
            channel.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJpeg2000RegionOfInterest">
      <summary>Indicates which region of interest to use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>typedef enum LTCodecsJpeg2000RegionOfInterest LTCodecsJpeg2000RegionOfInterest;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsJpeg2000RegionOfInterest</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000RegionOfInterest.UseLeadRegion">
      <summary>
            Use the region stored in the <see cref="T:Leadtools.RasterImage" />.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000RegionOfInterest.UseOptionRectangle">
      <summary>
            Use the region specified by <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.RegionOfInterestRectangle" />.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJpeg2000PrecinctSize">
      <summary>Values to specify the size of JPEG 2000 compressed packets, provides a mean of
            random access into a JPEG 2000 compressed stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
                Precincts are rectangular regions in the wavelet domain, within a given resolution
                level and image component that represent a spatial region on the image. They are
                used for limiting the size of JPEG 2000 compressed packets and to provide a means
                of random access into a JPEG 2000 compressed stream. For this reason, they should
                be used for interactive transfer of JPEG 2000 files as in JPIP applications. In
                general, dividing the image into precincts is better than tiling it. So it is
                recommended that users compress the image as one tile and use precincts to divide
                the spatial region. This will give better compression ratios and image quality. 
                <para>Using smaller precinct dimensions provides finer access to the compressed
                stream yet increases the compressed stream size. It is recommended to use
                HierarchicalOne128 and no tiling to generate JPEG 2000 files for any
                purpose.</para></remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>typedef enum LTCodecsJpeg2000PrecinctSize LTCodecsJpeg2000PrecinctSize;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsJpeg2000PrecinctSize</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.Full">
      <summary>
            No precinct is used, size is infinite.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.Uniform64">
      <summary>
            For all resolution levels, a precinct dimension of [64x64] will be applied.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.Uniform128">
      <summary>
            For all resolution levels, a precinct dimension of [128x128] will be applied.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.Uniform256">
      <summary>
            For all resolution levels, a precinct dimension of [256x256] will be applied.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.Uniform512">
      <summary>
            For all resolution levels, a precinct dimension of [512x512] will be applied.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.Uniform1024">
      <summary>
            For all resolution levels, a precinct dimension of [1024x1024] will be applied.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.Uniform2048">
      <summary>
            For all resolution levels, a precinct dimension of [2048x2048] will be applied.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.HierarchicalOne64">
      <summary>
            A precinct size of [X by X] will be applied to the first(smallest) resolution of the image. The second 
            resolution precinct dimension would be [2X by 2X]. The third resolution precinct dimension would be [4X by 4X] and so on. 
            If the JPEG 2000 file has five levels and HierarchicalOne64 is used, the precinct dimensions will be as follows:
            <list type="bullet"><item><description>
            [64x64] level 1
            </description></item><item><description>
            [128x128] level 2 
            </description></item><item><description>
            [256x256] level 3
            </description></item><item><description>
            [512x512] level 4
            </description></item><item><description>
            [1024x1024] level 5
            </description></item></list></summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.HierarchicalOne128">
      <summary>
            A precinct size of [X by X] will be applied to the first(smallest) resolution of the image. The second 
            resolution precinct dimension would be [2X by 2X]. The third resolution precinct dimension would be [4X by 4X] and so on. 
            If the JPEG 2000 file has five levels and HierarchicalOne128 is used, the precinct dimensions will be as follows:
            <list type="bullet"><item><description>
            [128x128] level 1
            </description></item><item><description>
            [256x256]level 2 
            </description></item><item><description>
            [512x512]level 3
            </description></item><item><description>
            [1024x1024] level 4
            </description></item><item><description>
            [2048x2048] level 5
            </description></item></list></summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.HierarchicalOne256">
      <summary>
            A precinct size of [X by X] will be applied to the first(smallest) resolution of the image. The second 
            resolution precinct dimension would be [2X by 2X]. The third resolution precinct dimension would be [4X by 4X] and so on. 
            If the JPEG 2000 file has five levels and HierarchicalOne256 is used, the precinct dimensions will be as follows:
            <list type="bullet"><item><description>
            [256x256] level 1
            </description></item><item><description>
            [512x512] level 2 
            </description></item><item><description>
            [1024x1024] level 3
            </description></item><item><description>
            [2048x2048] level 4
            </description></item><item><description>
            [4096x4096] level 5
            </description></item></list></summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.HierarchicalOne512">
      <summary>
            A precinct size of [X by X] will be applied to the first(smallest) resolution of the image. The second 
            resolution precinct dimension would be [2X by 2X]. The third resolution precinct dimension would be [4X by 4X] and so on. 
            If the JPEG 2000 file has five levels and HierarchicalOne512 is used, the precinct dimensions will be as follows:
            <list type="bullet"><item><description>
            [512x512] level 1
            </description></item><item><description>
            [1024x1024 level 2 
            </description></item><item><description>
            [2048x2048] level 3
            </description></item><item><description>
            [4096x4096]level 4
            </description></item><item><description>
            [8192x8192] level 5
            </description></item></list></summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.HierarchicalTwo64">
      <summary>
            A precinct size of [X by X] will be applied to the first and second (smallest) resolutions
            of the image. The third and fourth resolution precinct dimensions would be [2X by 2X] and so on.
            So if the JPEG 2000 file has five levels and HierarchicalTwo64 is used, the precinct
            dimensions will be as follows:
            <list type="bullet"><item><description>
            [64x64] level 1
            </description></item><item><description>
            [64x64] level 2 
            </description></item><item><description>
            [128x128] level 3
            </description></item><item><description>
            [128x128] level 4
            </description></item><item><description>
            [256x256] level 5
            </description></item></list></summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.HierarchicalTwo128">
      <summary>
            A precinct size of [X by X] will be applied to the first and second (smallest) resolutions
            of the image. The third and fourth resolution precinct dimensions would be [2X by 2X] and so on.
            So if the JPEG 2000 file has five levels and HierarchicalTwo128 is used, the precinct
            dimensions will be as follows:
            <list type="bullet"><item><description>
            [128x128] level 1
            </description></item><item><description>
            [128x128] level 2 
            </description></item><item><description>
            [256x256] level 3
            </description></item><item><description>
            [256x256] level 4
            </description></item><item><description>
            [512x512] level 5
            </description></item></list></summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.HierarchicalTwo256">
      <summary>
            A precinct size of [X by X] will be applied to the first and second (smallest) resolutions
            of the image. The third and fourth resolution precinct dimensions would be [2X by 2X] and so on.
            So if the JPEG 2000 file has five levels and HierarchicalTwo256 is used, the precinct
            dimensions will be as follows:
            <list type="bullet"><item><description>
            [256x256] level 1
            </description></item><item><description>
            [256x256] level 2 
            </description></item><item><description>
            [512x512] level 3
            </description></item><item><description>
            [512x512] level 4
            </description></item><item><description>
            [1024x1024] level 5
            </description></item></list></summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsJpeg2000PrecinctSize.HierarchicalTwo512">
      <summary>
            A precinct size of [X by X] will be applied to the first and second (smallest) resolutions
            of the image. The third and fourth resolution precinct dimensions would be [2X by 2X] and so on.
            So if the JPEG 2000 file has five levels and HierarchicalTwo512 is used, the precinct
            dimensions will be as follows:
            <list type="bullet"><item><description>
            [512x512] level 1
            </description></item><item><description>
            [512x512] level 2 
            </description></item><item><description>
            [1024x1024] level 3
            </description></item><item><description>
            [1024x1024] level 4
            </description></item><item><description>
            [2048x2048] level 5
            </description></item></list></summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJpeg2000LoadOptions">
      <summary>Provides options specifically for loading JPEG 2000 and LEAD CMW images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@interface LTCodecsJpeg2000LoadOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsJpeg2000LoadOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000LoadOptions.Jp2Resolution">
      <summary>Gets or sets the resolution to load when loading JP2 files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The resolution to load.</value>
      <remarks>
            Specifies the resolution of the image to load. You can specify 0 to get the default.
            </remarks>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <example>Refer to <see cref="P:Leadtools.Codecs.CodecsJpeg2000Options.Load" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadSize jp2Resolution;</pre>
      </objectivec>
      <java>
        <pre>
public LeadSize getJp2Resolution()
public void setJp2Resolution(LeadSize value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000LoadOptions.J2kResolution">
      <summary>Gets or sets the resolution to load when loading J2K streams. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The resolution to load.</value>
      <remarks>
            Specifies the resolution of the image to load. You can specify 0 to get the default.
            </remarks>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadSize j2kResolution;</pre>
      </objectivec>
      <java>
        <pre>
public LeadSize getJ2kResolution()
public void setJ2kResolution(LeadSize value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000LoadOptions.CmwResolution">
      <summary>Gets or sets the resolution to use when loading LEAD CMW files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The resolution to load.</value>
      <remarks>
            Specifies the resolution of the image to use when loading. You can specify 0 to get the default. 
            </remarks>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadSize cmwResolution;</pre>
      </objectivec>
      <java>
        <pre>
public LeadSize getCmwResolution()
public void setCmwResolution(LeadSize value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJpeg2000SaveOptions">
      <summary>Provides options specifically for saving JPEG and LEAD CMW images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <remarks>
            For information about compression quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@interface LTCodecsJpeg2000SaveOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsJpeg2000SaveOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsJpeg2000SaveOptions.Reset">
      <summary>Resets this <see cref="T:Leadtools.Codecs.CodecsJpeg2000SaveOptions" /> object to the default values. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>-(void)reset;</pre>
      </objectivec>
      <java>
        <pre>public void reset()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsJpeg2000SaveOptions.GetHorizontalSubSamplingValues">
      <summary>Reserved for internal use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>An array of integer holding the sub-sampling values</remarks>
      <noexample />
      <objectivec>
        <pre>-(void)getHorizontalSubSamplingValues:(unsigned int[LTCodecsJpeg2000_MaximumComponentsNumber])values;</pre>
      </objectivec>
      <java>
        <pre>public int[] getHorizontalSubSamplingValues()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsJpeg2000SaveOptions.SetHorizontalSubSamplingValues(System.Int32[])">
      <summary>Reserved for internal use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="values">An array of integer holding the sub-sampling values</param>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>-(void)setHorizontalSubSamplingValues:(const unsigned int[LTCodecsJpeg2000_MaximumComponentsNumber])values;</pre>
      </objectivec>
      <java>
        <pre>public void setHorizontalSubSamplingValues(int values[])</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsJpeg2000SaveOptions.GetVerticalSubSamplingValues">
      <summary>Reserved for internal use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>An array of integer holding the sub-sampling values</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>-(void)getVerticalSubSamplingValues:(unsigned int[LTCodecsJpeg2000_MaximumComponentsNumber])values;</pre>
      </objectivec>
      <java>
        <pre>public int[] getVerticalSubSamplingValues()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsJpeg2000SaveOptions.SetVerticalSubSamplingValues(System.Int32[])">
      <summary>Reserved for internal use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="values">An array of integer holding the sub-sampling values</param>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>-(void)setVerticalSubSamplingValues:(const unsigned int[LTCodecsJpeg2000_MaximumComponentsNumber])values;</pre>
      </objectivec>
      <java>
        <pre>public void setVerticalSubSamplingValues(int[] values)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.MaximumComponentsNumber">
      <summary>This returns the maximum number of components supported by LEAD J2K. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Maximum number of components supported by LEAD J2K.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>extern const unsigned int LTCodecsJpeg2000_MaximumComponentsNumber;</pre>
      </objectivec>
      <java>
        <pre>public int getMaximumComponentsNumber()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.MaximumDecompressionLevels">
      <summary>Returns the maximum number of resolutions supported by LEAD J2K. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The maximum number of resolutions supported by LEAD J2K.</value>
      <remarks>
            The maximum number of levels depends on the size of the image. Passing values 
            that are too large will cause the save operation to fail.  Each resolution 
            level is one-half the size of the previous resolution, starting with the full 
            image resolution. The default value is 5.
            </remarks>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>extern const unsigned int LTCodecsJpeg2000_MaximumDecompressionLevels;</pre>
      </objectivec>
      <java>
        <pre>public int getMaximumDecompressionLevels()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.UseColorTransform">
      <summary>Enables or disables converting an RGB image to YUV space before compressing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to convert to YUV space before compressing; false to not convert to YUV space before compressing.</value>
      <remarks>
            YUV space provides greater compression with higher image quality.
            </remarks>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useColorTransform;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseColorTransform()
public void setUseColorTransform(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.DerivedQuantization">
      <summary>Gets or sets a value that indicates whether to use derived quantization or expounded quantization. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            true to use derived quantization, false to use expounded quantization.
            </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL derivedQuantization;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getDerivedQuantization()
public void setDerivedQuantization(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CompressionControl">
      <summary>Gets or sets the compression control method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The compression control method.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsJpeg2000CompressionControl compressionControl;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsJpeg2000CompressionControl getCompressionControl()
public void setCompressionControl(CodecsJpeg2000CompressionControl value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CompressionRatio">
      <summary>Gets or sets the compression ratio. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The compression ratio. This value is only used if <see cref="T:Leadtools.Codecs.CodecsJpeg2000CompressionControl">CodecsJpeg2000CompressionControl.Ratio</see> is used. </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) float compressionRatio;</pre>
      </objectivec>
      <java>
        <pre>
public float getCompressionRatio()
public void setCompressionRatio(float value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.TargetFileSize">
      <summary>Gets or sets the target file size. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The target file size (in bytes). This value is only used if <see cref="T:Leadtools.Codecs.CodecsJpeg2000CompressionControl">CodecsJpeg2000CompressionControl.TargetSize</see> is used. </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) size_t targetFileSize;</pre>
      </objectivec>
      <java>
        <pre>
public long getTargetFileSize()
public void setTargetFileSize(long value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.ImageAreaHorizontalOffset">
      <summary>Gets or sets the horizontal offset from the origin of the reference grid to the left side of the image area. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The horizontal offset from the origin of the reference grid to the left side of the image area.
            </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int imageAreaHorizontalOffset;</pre>
      </objectivec>
      <java>
        <pre>
public int getImageAreaHorizontalOffset()
public void setImageAreaHorizontalOffset(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.ImageAreaVerticalOffset">
      <summary>Gets or sets the vertical offset from the origin of the reference grid to the top of the image area. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The vertical offset from the origin of the reference grid to the top of the image area.
            </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int imageAreaVerticalOffset;</pre>
      </objectivec>
      <java>
        <pre>
public int getImageAreaVerticalOffset()
public void setImageAreaVerticalOffset(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.ReferenceTileWidth">
      <summary>Gets or sets the width of one reference tile, with respect to the reference grid. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The width of one reference tile, with respect to the reference grid.
            </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int referenceTileWidth;</pre>
      </objectivec>
      <java>
        <pre>
public int getReferenceTileWidth()
public void setReferenceTileWidth(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.ReferenceTileHeight">
      <summary>Gets or sets the height of one reference tile, with respect to the reference grid. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The height of one reference tile, with respect to the reference grid.
            </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int referenceTileHeight;</pre>
      </objectivec>
      <java>
        <pre>
public int getReferenceTileHeight()
public void setReferenceTileHeight(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.TileHorizontalOffset">
      <summary>Gets or sets the horizontal offset from the origin of the reference grid to the left side of the first tile. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The horizontal offset from the origin of the reference grid to the left side of the first tile.
            </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int tileHorizontalOffset;</pre>
      </objectivec>
      <java>
        <pre>
public int getTileHorizontalOffset()
public void setTileHorizontalOffset(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.TileVerticalOffset">
      <summary>Gets or sets the vertical offset from the origin of the reference grid to the top of the first tile. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The vertical offset from the origin of the reference grid to the top of the first tile.
            </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int tileVerticalOffset;</pre>
      </objectivec>
      <java>
        <pre>
public int getTileVerticalOffset()
public void setTileVerticalOffset(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.DecompositionLevels">
      <summary>Gets or sets the number of resolution levels in the compressed file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The number of resolution levels in the compressed file.
            </value>
      <remarks>
            The maximum number of levels depends on the size of the image.
            Passing values that are too large will cause the save operation to fail.  
            Each resolution level is one-half the size of the previous resolution, 
            in both dimensions (width and height), starting 
            with the full image resolution. The resolutions are not stored independently, and do not have
            a major impact on the compression results.
            The default value is 5, which produces the best compression ratios in most cases.
            </remarks>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int decompositionLevels;</pre>
      </objectivec>
      <java>
        <pre>
public int getDecompositionLevels()
public void setDecompositionLevels(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.ProgressingOrder">
      <summary>Gets or sets the order of progression. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            A <see cref="T:Leadtools.Codecs.CodecsJpeg2000ProgressionsOrder">CodecsJpeg2000ProgressionsOrder</see> value 
            that specifies the order of progression.
            </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsJpeg2000ProgressionsOrder progressingOrder;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsJpeg2000ProgressionsOrder getProgressingOrder()
public void setProgressingOrder(CodecsJpeg2000ProgressionsOrder value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CodeBlockWidth">
      <summary>Gets or sets the width of the code block, following wavelet transformation. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The value must be a power of 2. It must be at least 4 and less than or equal to 1024.
            </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int codeBlockWidth;</pre>
      </objectivec>
      <java>
        <pre>
public int getCodeBlockWidth()
public void setCodeBlockWidth(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CodeBlockHeight">
      <summary>Gets or sets the height of the code block, following wavelet transformation. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The value must be a power of 2. It must be at least 4 and less than or equal to 1024.
            </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int codeBlockHeight;</pre>
      </objectivec>
      <java>
        <pre>
public int getCodeBlockHeight()
public void setCodeBlockHeight(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.SelectiveAcBypass">
      <summary>Gets or sets a value indicating if the "lazy coding mode" is adopted. In this case, trailing bit-planes bypass the arithmetic coder except in the normalization pass. Otherwise, the arithmetic coder is used on all passes. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the "lazy coding mode" is adopted. In this case, trailing bit-planes bypass the arithmetic coder except in the normalization pass. Otherwise, the arithmetic coder is used on all passes.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL selectiveAcBypass;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getSelectiveAcBypass()
public void setSelectiveAcBypass(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.ResetContextOnBoundaries">
      <summary>Gets or sets a value indicating if the arithmetic coder's probability models are reset between coding passes. This controls where the end of encoded data is and limits the amount of potentially lost data in the event of a transmission error. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the arithmetic coder's probability models are reset between coding passes. This controls where the end of encoded data is and limits the amount of potentially lost data in the event of a transmission error.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL resetContextOnBoundaries;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getResetContextOnBoundaries()
public void setResetContextOnBoundaries(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.TerminationOnEachPass">
      <summary>Gets or sets a value indicating if the arithmetic code-word generation process stops on a byte boundary at the end of each coding pass. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the arithmetic code-word generation process stops on a byte boundary at the end of each coding pass.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL terminationOnEachPass;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getTerminationOnEachPass()
public void setTerminationOnEachPass(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.VerticallyCausalContext">
      <summary>Gets or sets a value indicating if the context models are restricted to being vertically causal within each sub-block. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the context models are restricted to being vertically causal within each sub-block.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL verticallyCausalContext;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getVerticallyCausalContext()
public void setVerticallyCausalContext(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.PredictableTermination">
      <summary>Gets or sets a value indicating if the encoder has a predictable termination policy and identifies that the policy was used in the code-stream COD/COC markers. This can be used to implement error detection and concealment. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the encoder has a predictable termination policy and identifies that the policy was used in the code-stream COD/COC markers. This can be used to implement error detection and concealment.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL predictableTermination;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getPredictableTermination()
public void setPredictableTermination(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.ErrorResilienceSymbol">
      <summary>Gets or sets a value indicating if a 4 symbol marker is included for each bit-plane, following the normalization pass. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if a 4 symbol marker is included for each bit-plane, following the normalization pass.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL errorResilienceSymbol;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getErrorResilienceSymbol()
public void setErrorResilienceSymbol(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.GuardBits">
      <summary>Gets or sets the number of extra bits to consider when encoding an image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            Possible values are 0 - 7. The default is 2. A value of 2 or 1 will produce the best compression.
            </value>
      <remarks>
            This prevents coding overflow.
            </remarks>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int guardBits;</pre>
      </objectivec>
      <java>
        <pre>
public int getGuardBits()
public void setGuardBits(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.DerivedBaseMantissa">
      <summary>Gets or sets the base mantissa used for derived quantization. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The base mantissa used for derived quantization.
            </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int derivedBaseMantissa;</pre>
      </objectivec>
      <java>
        <pre>
public int getDerivedBaseMantissa()
public void setDerivedBaseMantissa(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.DerivedBaseExponent">
      <summary>Gets or sets the base exponent used for derived quantization. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The base exponent used for derived quantization.
            </value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int derivedBaseExponent;</pre>
      </objectivec>
      <java>
        <pre>
public int getDerivedBaseExponent()
public void setDerivedBaseExponent(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.UseSopMarker">
      <summary>Enables or disables use of the Start of Packet(SOP) marker. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use the SOP marker; false, otherwise.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <remarks>
            The "Start of Packet" and "End of Packet Header" markers help detect file corruption during transmission. If these markers
            exist in the JPEG2000 compressed stream, it is easy for the decoder to find
            the packet boundary, or, in case of a stream error, check the size. If UseSopMarker is true, each packet
            in any given tile part will be prepended with a SOP marker segment. The SOP marker includes the size of the packet. The 
            default value is false.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useSopMarker;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseSopMarker()
public void setUseSopMarker(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.UseEphMarker">
      <summary>Enables or disables use of the End of Packet Header (EPH) marker. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use the EPH marker; false, otherwise.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <remarks>
            The "Start of Packet" and "End of Packet Header" markers help detect file corruption during 
            transmission. If these markers
            exist in the JPEG2000 compressed stream, it is easy for the decoder to find
            the packet boundary, or, in case of a stream error, check the size. 
            If UseEphMarker is true, each packet
            header in any given tile part is postpended with an EPH marker segment. The 
            default value is false.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useEphMarker;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseEphMarker()
public void setUseEphMarker(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.RegionOfInterest">
      <summary>Gets or sets a value indicating the type of region to use when saving. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The type of region to use.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsJpeg2000RegionOfInterest regionOfInterest;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsJpeg2000RegionOfInterest getRegionOfInterest()
public void setRegionOfInterest(CodecsJpeg2000RegionOfInterest value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.UseRegionOfInterest">
      <summary>Indicates whether to use a region of interest. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use a region of interest; false, otherwise.</value>
      <remarks>The type of region is specified by <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.RegionOfInterest" />.
            If you do not want to use a region of interest, set this to false. Otherwise, there may be
            a significant compression and speed performance loss.
            </remarks>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useRegionOfInterest;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseRegionOfInterest()
public void setUseRegionOfInterest(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.RegionOfInterestWeight">
      <summary>Reserved for internal use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            Reserved for internal use.
            </value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign) float regionOfInterestWeight;</pre>
      </objectivec>
      <java>
        <pre>
public float getRegionOfInterestWeight()
public void setRegionOfInterestWeight(float value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.RegionOfInterestRectangle">
      <summary>Gets or sets the rectangular region of interest to use when 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.RegionOfInterest" /> is 
            <see cref="T:Leadtools.Codecs.CodecsJpeg2000RegionOfInterest">CodecsJpeg2000RegionOfInterest.UseOptionRectangle</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A rectangle which specifies the region of interest.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadRect regionOfInterestRectangle;</pre>
      </objectivec>
      <java>
        <pre>
public LeadRect getRegionOfInterestRectangle()
public void setRegionOfInterestRectangle(LeadRect value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.AlphaChannelActiveBits">
      <summary>Gets or sets a value indicating the active bits for the alpha channel. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The active bits for the alpha channel. Possible values are 1 and 8. If the 
            value is 1 it means the 256 levels of the 8-bit alpha channels will be 
            transformed into two levels of value 255 or 0, using simple threshold. 
            The threshold value is 127, so all values gt; 127 will be set to 255 and 
            all values lt;= 127 will be set to 0. If the value is 8, all 256 
            levels of the 8-bit alpha channels will be compressed. This is the default value. This 
            option should be used on a 32-bit bitmap: otherwise, it has no effect.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int alphaChannelActiveBits;</pre>
      </objectivec>
      <java>
        <pre>
public int getAlphaChannelActiveBits()
public void setAlphaChannelActiveBits(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.AlphaChannelLossless">
      <summary>Gets or sets a value indicating whether to save the alpha channel as lossless. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save the alpha channel as lossless; false, otherwise.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <remarks>
            The default value is true. The resulting image is 32-bit. The value of this property controls 
            the compression type of alpha channel for J2K/JP2 lossy compression. This 
            option should be used on a 32-bit bitmap otherwise it has no effect.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL alphaChannelLossless;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getAlphaChannelLossless()
public void setAlphaChannelLossless(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.PrecinctSize">
      <summary>Specifies the precinct size. For a list of possible values refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000PrecinctSize" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <value>The precinct size. For a list of possible values refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000PrecinctSize" />.</value>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsJpeg2000PrecinctSize precinctSize;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsJpeg2000PrecinctSize getPrecinctSize()
public void setPrecinctSize(CodecsJpeg2000PrecinctSize value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJpeg2000Options">
      <summary>Provides extra options for loading and saving JPEG 2000 and LEAD CMW images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <p>The JPEG2000 image format offers both superior compression performance and robust file 
            handling. Some J2K options can have a direct impact on compression performance, while others 
            primarily affect resulting file size. Notes on Advanced options continue below.</p>
        <p>Main options (listed above) include:</p>
        <ul>
          <li>
            <p>Color Transforms</p>
          </li>
          <li>
            <p>Compression Settings</p>
          </li>
          <li>
            <p>Multiple resolution representation (Wavelet Decomposition Level)</p>
          </li>
          <li>
            <p>Random codestream access and processing (Progression Order)</p>
          </li>
          <li>
            <p>Progressive transmission (Advanced)</p>
          </li>
          <li>
            <p>Tile Size</p>
          </li>
          <li>
            <p>Error resilience for transmission in noisy environments, such as wireless and the 
            Internet.</p>
          </li>
          <li>
            <p>Region-of-Interest coding.</p>
          </li>
        </ul>
        <strong>
          <p>Using this structure with LEAD CMW (Cmw) or TIFF with LEAD Wavelet CMW compression (TifCmw) files</p>
        </strong>
        <p>When using this structure with Cmw or TifCmw files, only the following data 
            properties are required:</p>
        <p>
          <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CompressionControl" />
        </p>
        <p>
          <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CompressionRatio" />
        </p>
        <p>
          <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.TargetFileSize" />
        </p>
        <p>
          <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.ProgressingOrder" />
        </p>
        <p>The resulting file size/ compression ratio can be determined in several ways. Depending on 
            the value set in the CompressionControl property, the user can set the size of the target file, the 
            actual compression ratio to use during compression or the quality factor to use during compression. 
            If the 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CompressionControl" /> property is set to Ratio, 
            then the compression used is based on the 
            compression ratio in the <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CompressionRatio" /> property. If the 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CompressionControl" /> property is set to 
            TargetSize, the compression used is based on the desired target file size in the 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.TargetFileSize" /> property. If the 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CompressionControl" /> property is set to QualityFactor, then the
            compression used is based on the QualityFactor passed to the Save functions.</p>
        <strong>
          <p>Lossless Compression</p>
        </strong>
        <p>For lossless compression, set the <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CompressionControl" /> property to Lossless.</p>
        <strong>
          <p>Lossy Compression Quantization</p>
        </strong>
        <p>There are two types of quantization for Lossy compression: Scalar Derived Quantization and 
            Scalar Expounded Quantization.</p>
        <p>The exponent/mantissa pairs are either signaled in the codestream for every sub-band 
            (expounded quantization) or else signaled only for the Low Pass sub-band and derived for all other 
            sub-bands (derived quantization). In the case of derived quantization, all exponent/mantissa pairs 
            are derived from the single exponent/mantissa pair corresponding to the Low pass sub-band.</p>
        <p>The quantization step size for a sub-band is calculated from the dynamic range of the 
            sub-band using the following equation, where R = bpp for the sub-band:</p>
        <p>
          <code>Quantization Step = (2 (R - Exponent) ) * [1 + (Mantissa / 2048)]</code>
        </p>
        <p>If the value of the <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CompressionControl" /> property is Ratio, QualityFactor or 
            TargetSize, and the value of the 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.AlphaChannelLossless" /> property is true, 
            the compressed J2K/JP2 
            file will have three lossy components (red, green and blue), in addition to the lossless alpha 
            component.</p>
        <p>If the value of the 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.CompressionControl" /> property is Lossless, the value of 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.AlphaChannelLossless" /> will be ignored and all the components will be lossless.</p>
        <p>The alpha channel can be dithered using <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /> and 
            <see cref="T:Leadtools.ImageProcessing.Color.DynamicBinaryCommand" /> externally, and before saving 
            a J2K/JP2 file, in case a better alpha channel quality is desired.</p>
        <strong>
          <p>Tile and Canvas Settings</p>
        </strong>
        <p>The values of the <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.ImageAreaHorizontalOffset" />, 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.ImageAreaVerticalOffset" />, 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.ReferenceTileHeight" />, 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.ReferenceTileWidth" />, 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.TileHorizontalOffset" /> and 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.TileVerticalOffset" /> properties are 
            used to create tiles within the image. Arbitrary tile sizes are allowed. All tiles are the same 
            size, except for the border tiles. Each tile can be compressed individually. This can decrease 
            memory usage while the program is running, but can also generate artifacts at the edges of the 
            tiles. Artifacts generally increase as the size of the tile decreases. By default, there is one 
            tile that contains the entire image.</p>
        <p>The reference grid is a rectangular grid of points with the indices from (0, 0) to (Xsiz-1, 
            Ysiz-1). An "image area" is defined on the reference grid by the dimensional parameters, (Xsiz, 
            Ysiz) and (XOsiz, YOsiz). The various parameters defining the reference grid appear in the 
            figures below. </p>
        <p>Specifically, the image area on the reference grid is defined by its upper left hand 
            reference grid point at location (XOsiz, YOsiz), and its lower right hand reference grid point at 
            location (Xsiz-1, Ysiz-1).</p>
        <p>
          <img src="J2KCanvas.gif" />
        </p>
        <p>
          <img src="J2KTile.gif" />
        </p>
        <list type="table">
          <listheader>
            <term>Property Name</term>
            <description>Label In Diagram</description>
          </listheader>
          <item>
            <term>ImageAreaHorizontalOffset</term>
            <description>XOsiz</description>
          </item>
          <item>
            <term>ImageAreaVerticalOffset</term>
            <description>YOsiz</description>
          </item>
          <item>
            <term>ReferenceTileHeight</term>
            <description>XTsiz</description>
          </item>
          <item>
            <term>ReferenceTileWidth</term>
            <description>YTsiz</description>
          </item>
          <item>
            <term>TileHorizontalOffset</term>
            <description>XTOsiz</description>
          </item>
          <item>
            <term>TileVerticalOffset</term>
            <description>YTOsiz</description>
          </item>
        </list>
        <strong>
          <p>Progression Order</p>
        </strong>
        <p>For a given tile-part, the packets contain all compressed image data from a specific layer, 
            a specific component, a specific resolution level, and a specific precinct. The order in which 
            these packets are found in the codestream is called the progression order. Use the 
            <see cref="P:Leadtools.Codecs.CodecsJpeg2000SaveOptions.ProgressingOrder" /> property to set the progression order. The ProgressingOrder property 
            uses the <see cref="T:Leadtools.Codecs.CodecsJpeg2000ProgressionsOrder" /> enumeration to specify the progression
            The ordering of the 
            packets can progress along four axes: layer, component, resolution and position. The following progressions
            can be specified:</p>
        <ol>
          <li>
            <p>
              <strong>LayerResolutionComponentPosition.</strong> A progression of this type might be useful 
                    when low sample accuracy is most desirable, but 
                    information is needed for all components.</p>
          </li>
          <li>
            <p>
              <strong>ResolutionLayerComponentPosition.</strong> A progression of this type might 
                    be useful in providing low-resolution level versions of all 
                    image components.</p>
          </li>
          <li>
            <p>
              <strong>ResolutionPositionComponentLayer.</strong> A 
                    progression of this type might be useful in providing low-resolution level versions of all image 
                    components at a particular spatial location.</p>
          </li>
          <li>
            <p>
              <strong>PositionComponentResolutionLayer.</strong> A progression of this type 
                    might be useful in providing high sample accuracy for a 
                    particular spatial location in all components.</p>
          </li>
          <li>
            <p>
              <strong>ComponentPositionResolutionLayer.</strong> A progression of this 
                    type might be useful in providing high accuracy for a particular 
                    spatial location in a particular image component.</p>
          </li>
        </ol>
        <p>For more information, refer to:</p>
        <p>
          <a href="http://www.jpeg.org/public/wg1n1861.pdf">ISO/IEC JTC1/SC29/WG1 N1861: Coding of 
            Still Pictures</a>
        </p>
      </remarks>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <example>
        <!--CodecsJpeg2000Options-->
      </example>
      <objectivec>
        <pre>@interface LTCodecsJpeg2000Options : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsJpeg2000Options</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000Options.Load">
      <summary>Gets the options for loading JPEG 2000 and LEAD CMW images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The JPEG 2000 load options.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsJpeg2000LoadOptions* load;</pre>
      </objectivec>
      <java>
        <pre>public CodecsJpeg2000LoadOptions getLoad()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpeg2000Options.Save">
      <summary>Gets the options for saving JPEG 2000 and LEAD CMW images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The JPEG 2000 save options.</value>
      <seealso cref="T:L.Topics.ProgrammingWithJpeg2000Features">Programming With JPEG 2000 Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsJpeg2000SaveOptions* save;</pre>
      </objectivec>
      <java>
        <pre>public CodecsJpeg2000SaveOptions getSave()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsVectorUnit">
      <summary>Indicates the unit of measure for the vector image file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorUnit.Inches">
      <summary>
            Units are in inches.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorUnit.Feet">
      <summary>
            Units are in feet.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorUnit.Yards">
      <summary>
            Units are in yards.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorUnit.Miles">
      <summary>
            Units are in miles.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorUnit.Micrometers">
      <summary>
            Units are in micrometers.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorUnit.Milimeters">
      <summary>
            Units are in millimeters.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorUnit.Centimeters">
      <summary>
            Units are in centimeters.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorUnit.Meters">
      <summary>
            Units are in meters.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorUnit.Kilometers">
      <summary>
            Units are in kilometers.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorUnit.Twips">
      <summary>
            Units are in twips.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorUnit.Points">
      <summary>
            Units are in points.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorUnit.Pixels">
      <summary>
            Units are in pixels.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorUnit.Dummy">
      <summary>
            Units are not defined, not supported or could not be read
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsVectorImageInfo">
      <summary>Provides information specific to vector images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>
            LEADTOOLS provides support for loading a vector image as a raster image. Vector formats such as DXF, DWG and SVG
            can be converted to a raster image through a process called rasterization.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorImageInfo.IsVectorFile">
      <summary>Gets a value indicating whether the image file or stream is a vector image format. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> if the image file or stream is a vector image format, <strong>false</strong>; otherwise.</value>
      <remarks>
        <para>When the value of <see cref="P:Leadtools.Codecs.CodecsVectorImageInfo.IsVectorFile" /> is <strong>true</strong>, then the image file or stream passed to the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see> or <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see>
            is a vector image file such as DXF or DWG.
            The rest of the members of this class are valid and contain the original document logical size.
            The physical load (rasterization size) is calculated based on the current rasterization values and is stored in
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.Width">CodecsImageInfo.Width</see>,
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.Height">CodecsImageInfo.Height</see>,
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.XResolution">CodecsImageInfo.XResolution</see> and
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.YResolution">CodecsImageInfo.YResolution</see>.
            For more information, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</para>
        <para>If the value of <see cref="P:Leadtools.Codecs.CodecsVectorImageInfo.IsVectorFile" /> is <strong>false</strong>, then the image file or stream is a raster image
            such as JPEG or TIFF. These files have physical size and the rest of the values of this class should not be used.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorImageInfo.ParallelogramMinX">
      <summary>The minimum point of the bounding parallelogram of the vector file <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            The minimum X point in parallelogram
            </value>
      <remarks>
        <para>
            Parallelogram that represents the minimum bounding box that contains all vector objects.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorImageInfo.ParallelogramMinY">
      <summary>The minimum point of the bounding parallelogram of the vector file <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            The minimum Y point in parallelogram
            </value>
      <remarks>
        <para>
            Parallelogram that represents the minimum bounding box that contains all vector objects.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorImageInfo.ParallelogramMinZ">
      <summary>The minimum point of the bounding parallelogram of the vector file <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            The minimum Z point in parallelogram
            </value>
      <remarks>
        <para>
            Parallelogram that represents the minimum bounding box that contains all vector objects.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorImageInfo.ParallelogramMaxX">
      <summary>The maximum point of the bounding parallelogram of the vector file <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            The maximum X point in parallelogram
            </value>
      <remarks>
        <para>
            Parallelogram that represents the minimum bounding box that contains all vector objects.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorImageInfo.ParallelogramMaxY">
      <summary>The maximum point of the bounding parallelogram of the vector file <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            The maximum Y point in parallelogram
            </value>
      <remarks>
        <para>
            Parallelogram that represents the minimum bounding box that contains all vector objects.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorImageInfo.ParallelogramMaxZ">
      <summary>The maximum point of the bounding parallelogram of the vector file <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            The maximum Z point in parallelogram
            </value>
      <remarks>
        <para>
            Parallelogram that represents the minimum bounding box that contains all vector objects.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorImageInfo.Unit">
      <summary>Gets the unit of measure for the vector image file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            The unit of measure for the vector image file.
            </value>
      <remarks>
        <para>
            LEADTOOLS provides support for reading a vector units for vector files, if the vector unit is not defined or could not be read, the dummy unit will be used
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsThumbnailOptions">
      <summary>Options used when loading a thumbnail from an image file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
            This structure is used with the <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see> method to set the
            options used when loading a thumbnail from an image file.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see>.</example>
      <objectivec>
        <pre>@interface LTCodecsThumbnailOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public final class CodecsThumbnailOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsThumbnailOptions.#cctor">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.Codecs.CodecsThumbnailOptions.Default">
      <summary>Gets the default settings for <see cref="T:Leadtools.Codecs.CodecsThumbnailOptions" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The default settings for <see cref="T:Leadtools.Codecs.CodecsThumbnailOptions" />.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see>.</example>
      <java>
        <pre>static public CodecsThumbnailOptions getDefault()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsThumbnailOptions.Width">
      <summary>Gets or sets the desired thumbnail width in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The desired thumbnail width in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int width;</pre>
      </objectivec>
      <java>
        <pre>
public int getWidth()
public void setWidth(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsThumbnailOptions.Height">
      <summary>Gets or sets the desired thumbnail height in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The desired thumbnail height in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int height;</pre>
      </objectivec>
      <java>
        <pre>
public int getHeight()
public void setHeight(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsThumbnailOptions.BitsPerPixel">
      <summary>Gets or sets the desired thumbnail bits per pixel. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>The desired thumbnail bits per pixel.  The following are valid values:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Default bits per pixel stored in the file.</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int bits;</pre>
      </objectivec>
      <java>
        <pre>
public int getBitsPerPixel()
public void setBitsPerPixel(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsThumbnailOptions.Order">
      <summary>Gets or sets the desired color order for the thumbnail image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The desired color order for the thumbnail image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterByteOrder order;</pre>
      </objectivec>
      <java>
        <pre>
public RasterByteOrder getOrder()
public void setOrder(RasterByteOrder value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsThumbnailOptions.DitheringMethod">
      <summary>Gets or sets the dithering method to use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The dithering method to use.</value>
      <remarks>
            The <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.DitheringMethod" /> will be passed to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /> internally when
            <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.MaintainAspectRatio" /> is true, <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.ForceSize" /> is true, and the source image is not 24-bit. In this
            case, the thumbnail image is converted to 24-bit, then, combined with a "background" image. The resulting image is then
            returned to the thumbnail image's original bit-depth using <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.DitheringMethod" />.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterDitheringMethod ditheringMethod;</pre>
      </objectivec>
      <java>
        <pre>
public RasterDitheringMethod getDitheringMethod()
public void setDitheringMethod(RasterDitheringMethod value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsThumbnailOptions.PaletteFlags">
      <summary>Gets or sets the palette flags to use. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The palette flags to use.</value>
      <remarks>
            The <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.PaletteFlags" /> will be passed to <see cref="T:Leadtools.ImageProcessing.ColorResolutionCommand" /> internally when
            <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.MaintainAspectRatio" /> is true, <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.ForceSize" /> is true, and the source image is not 24-bit. In this
            case, the thumbnail image is converted to 24-bit, then, combined with a "background" image. The resulting image is then
            returned to the thumbnail image's original bit-depth using <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.PaletteFlags" />.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTColorResolutionCommandPaletteFlags paletteFlags;</pre>
      </objectivec>
      <java>
        <pre>
public ColorResolutionCommandPaletteFlags getPaletteFlags()
public void setPaletteFlags(ColorResolutionCommandPaletteFlags value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsThumbnailOptions.MaintainAspectRatio">
      <summary>Gets or sets a value which indicates whether the aspect ratio of the image should be maintained when creating the thumbnail. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to indicates that the aspect ratio of the image should be maintained when creating the thumbnail; false, otherwise.</value>
      <remarks>
        <para>When set to true, the generated thumbnail's width and height will not match both <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.Width" /> and
            <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.Height" /> if the original aspect ratio was not 1:1.</para>
        <para>If you desire the thumbnail be generated with exactly the requested width and height while still maintaining the
            aspect ratio of the actual image, set both <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.MaintainAspectRatio" /> and <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.ForceSize" /> to true.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL maintainAspect;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getMaintainAspectRatio()
public void setMaintainAspectRatio(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsThumbnailOptions.ForceSize">
      <summary>Gets or sets a value which indicates whether the generated thumbnail should be forced to the requested size, even if
            <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.MaintainAspectRatio" /> is set to true. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to indicate that the thumbnail image will be generated by creating a "canvas" image with the requested size, and then
            centering the actual image inside that image.  Note this is a slower process.</value>
      <remarks>
            This parameter is ignored if <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.MaintainAspectRatio" /> is false.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL forceSize;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getForceSize()
public void setForceSize(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsThumbnailOptions.BackColor">
      <summary>Gets or sets the background color to use if both <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.ForceSize" /> and <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.MaintainAspectRatio" /> are true. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.RasterColor" /> to use as the background color to use if both <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.ForceSize" /> and
            <see cref="P:Leadtools.Codecs.CodecsThumbnailOptions.MaintainAspectRatio" /> are true.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, copy) LTRasterColor* backColor;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor getBackColor()
public void setBackColor(RasterColor value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsThumbnailOptions.LoadStamp">
      <summary>Gets or sets a value which indicates whether or not to attempt to load stamps from file formats that support preview images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to load the stamp from the file if present, false to ignore the stamp.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL loadStamp;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getLoadStamp()
public void setLoadStamp(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsThumbnailOptions.Resample">
      <summary>Gets or sets a value whether or not to use interpolated resize when generating thumbnails. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use interpolated resize, false to use normal resize.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">RasterCodecs.ReadThumbnail</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL resample;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getResample()
public void setResample(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPhotoInterpolation">
      <summary>Indicates color information. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>typedef enum LTCodecsPhotoInterpolation LTCodecsPhotoInterpolation;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsPhotoInterpolation</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPhotoInterpolation.WhiteIsZero">
      <summary>
            White is Zero.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPhotoInterpolation.BlackIsZero">
      <summary>
            Black is Zero.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPhotoInterpolation.NoColorMap">
      <summary>
            There is no color map (RGB).
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPhotoInterpolation.Cmyk">
      <summary>
            Separated CMYK.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPhotoInterpolation.YcbCr">
      <summary>
            YC b C r color space.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPhotoInterpolation.CieLab">
      <summary>
            1976 CIE L*a*b.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsLoadInformationEventArgs">
      <summary>Provides information for the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
            You can use the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see> event and the
            <see cref="T:Leadtools.Codecs.CodecsLoadInformationEventArgs" /> class when loading image data in a format that LEADTOOLS does not recognize.
            </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@interface LTCodecsLoadInformationEventArgs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsLoadInformationEvent extends LeadEvent</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsLoadInformationEventArgs.GetPalette">
      <summary>Gets the palette for uncompressed data that is 8 bits per pixel or less. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>An array of <see cref="T:Leadtools.RasterColor" /> object that represents the palette for uncompressed data that is 8 bits per
            pixel or less.</returns>
      <remarks>
            The first 1 &gt;&gt; <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.BitsPerPixel" /> entries in this palette is used.
            </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>-(NSArray*)getPalette;</pre>
      </objectivec>
      <java>
        <pre>public RasterColor[] getPalette()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsLoadInformationEventArgs.SetPalette(Leadtools.RasterColor[])">
      <summary>Sets the palette for uncompressed data that is 8 bits per pixel or less. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="palette">An array of <see cref="T:Leadtools.RasterColor" /> object that represents the palette for uncompressed data that
            is 8 bits per pixel or less.</param>
      <remarks>
            Fill in the first 1 &gt;&gt; <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.BitsPerPixel" /> entries in this palette.
            </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>-(void)setPalette:(NSArray*)value;</pre>
      </objectivec>
      <java>
        <pre>public void setPalette(RasterColor[] palette)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsLoadInformationEventArgs.GetColorMask">
      <summary>Gets an array of integer values that represent RGB color masks. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>An array of 3 integers as follows: ColorMask[0] is the red mask; ColorMask[1] is the green mask;
            ColorMask[2] is the blue mask.</returns>
      <remarks>
        <para>The color mask is valid only if <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Format" /> is set to <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawBitfields</see>.</para>
        <para>As an example, with 16-bit data arranged as RRR RRGG GGGB BBBB, the masks would be:</para>
        <para>
          <pre>
            <code>
            ColorMask[0] = 0x7C00
            ColorMask[1] = 0x0E30
            ColorMask[2] = 0x001F
            </code>
          </pre>
        </para>
        <para>For 32-bit data, the only valid data is RRRR RRRR GGGG GGGG BBBB BBBB. The masks would be:</para>
        <para>
          <pre>
            <code>
            ColorMask[0] = 0xFF0000
            ColorMask[1] = 0x00FF00
            ColorMask[2] = 0x0000FF
            </code>
          </pre>
        </para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>-(NSArray*)getColorMask;</pre>
      </objectivec>
      <java>
        <pre>public int[] getColorMask()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsLoadInformationEventArgs.SetColorMask(Leadtools.RasterColor[])">
      <summary>Sets the array of integer values that represent RGB color masks. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="colorMask">An array of 3 integers as follows: ColorMask[0] is the red mask; ColorMask[1] is the green mask;
            ColorMask[2] is the blue mask.</param>
      <remarks>
        <para>The color mask is valid only if <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Format" /> is set to <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawBitfields</see>.</para>
        <para>As an example, with 16-bit data arranged as RRR RRGG GGGB BBBB, the masks would be:</para>
        <para>
          <pre>
            <code>
            ColorMask[0] = 0x7C00
            ColorMask[1] = 0x0E30
            ColorMask[2] = 0x001F
            </code>
          </pre>
        </para>
        <para>For 32-bit data, the only valid data is RRRR RRRR GGGG GGGG BBBB BBBB. The masks would be:</para>
        <para>
          <pre>
            <code>
            ColorMask[0] = 0xFF0000
            ColorMask[1] = 0x00FF00
            ColorMask[2] = 0x0000FF
            </code>
          </pre>
        </para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>-(void)setColorMask:(NSArray*)value;</pre>
      </objectivec>
      <java>
        <pre>public void setColorMask(int[] colorMask)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Stream">
      <summary>Gets the stream used by the load process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Stream" /> object used by the load process.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <java>
        <pre>public ILeadStream getStream()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.fileHandle_ObjectiveC">
      <summary>
            Gets the NSFileHandle used by the load process.
            </summary>
      <value>The NSFileHandle object used by the load process.</value>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, readonly, strong) NSFileHandle* fileHandle;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Format">
      <summary>Gets the image file format. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>The image file format. The following are valid formats:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.FaxG31Dim</see>
            </term>
            <description>Fax file with G3 one-dimensional compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.FaxG32Dim</see>
            </term>
            <description>Fax file with G3 two-dimensional compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.FaxG4</see>
            </term>
            <description>Fax file with G4 compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawRle4</see>
            </term>
            <description>RAW file with RLE compression, 4 bits per pixel</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawRle8</see>
            </term>
            <description>RAW file with RLE compression, 8 bits per pixel</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawBitfields</see>
            </term>
            <description>RAW file with bitfield compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawPackBits</see>
            </term>
            <description>RAW file with packed bits compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawCcitt</see>
            </term>
            <description>RAW file with CCITT compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.Raw</see>
            </term>
            <description>RAW file </description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawLzw</see>
            </term>
            <description>RAW file with LZW compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawJpeg</see>
            </term>
            <description>RAW file with JPEG compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.Raw</see>
            </term>
            <description>RAW file </description>
          </item>
        </list>
      </value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterImageFormat format;</pre>
      </objectivec>
      <java>
        <pre>
public RasterImageFormat getFormat()
public void setFormat(RasterImageFormat value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Width">
      <summary>Gets or sets the image width in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The image width in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int width;</pre>
      </objectivec>
      <java>
        <pre>
public int getWidth()
public void setWidth(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Height">
      <summary>Gets or sets the image height in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The image height in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int height;</pre>
      </objectivec>
      <java>
        <pre>
public int getHeight()
public void setHeight(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.BitsPerPixel">
      <summary>Gets or sets the bits per pixel of the image data in the file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The bits per pixel of the image data in the file.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int bitsPerPixel;</pre>
      </objectivec>
      <java>
        <pre>
public int getBitsPerPixel()
public void setBitsPerPixel(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.XResolution">
      <summary>Gets or sets the horizontal resolution for rendering the image, specified in dots per inch. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The horizontal resolution for rendering the image, specified in dots per inch. Setting this property is optional.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int xResolution;</pre>
      </objectivec>
      <java>
        <pre>
public int getXResolution()
public void setXResolution(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.YResolution">
      <summary>Gets or sets the vertical resolution for rendering the image, specified in dots per inch. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The vertical resolution for rendering the image, specified in dots per inch. Setting this property is optional.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int yResolution;</pre>
      </objectivec>
      <java>
        <pre>
public int getYResolution()
public void setYResolution(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Offset">
      <summary>Gets or sets the position of the first byte of image data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The position of the first byte of image data. This can be 0 if your file does not have a header.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) ssize_t offset;</pre>
      </objectivec>
      <java>
        <pre>
public long getOffset()
public void setOffset(long value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.StripSize">
      <summary>Gets or sets the size of the data strip before it is decompressed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The size of the data strip before it is decompressed.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int stripSize;</pre>
      </objectivec>
      <java>
        <pre>
public int getStripSize()
public void setStripSize(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.PhotoInterpolation">
      <summary>Gets or sets the photometric interpolation for the load process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>The photometric interpolation for the load process. Possible values are:</para>
        <para>When <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Format" /> is one of the following:</para>
        <para>
          <list type="bullet">
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawCcitt</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.FaxG31Dim</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.FaxG32Dim</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.FaxG4</see>
              </description>
            </item>
          </list>
        </para>
        <para>The value of <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.PhotoInterpolation" /> is as follows:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsPhotoInterpolation">CodecsPhotoInterpolation.WhiteIsZero</see>
            </term>
            <description>White is zero</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsPhotoInterpolation">CodecsPhotoInterpolation.BlackIsZero</see>
            </term>
            <description>Black is zero</description>
          </item>
        </list>
        <para>When <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Format" /> is <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawPackBits</see>, the value of
            <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.PhotoInterpolation" /> is as follows:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsPhotoInterpolation">CodecsPhotoInterpolation.NoColorMap</see>
            </term>
            <description>There is no color map (RGB)</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsPhotoInterpolation">CodecsPhotoInterpolation.Cmyk</see>
            </term>
            <description>Separated CMYK</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsPhotoInterpolation">CodecsPhotoInterpolation.YcbCr</see>
            </term>
            <description>YC b C r color space</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsPhotoInterpolation">CodecsPhotoInterpolation.CieLab</see>
            </term>
            <description>1976 CIE L*a*b</description>
          </item>
        </list>
      </value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsPhotoInterpolation photoInterpolation;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsPhotoInterpolation getPhotoInterpolation()
public void setPhotoInterpolation(CodecsPhotoInterpolation value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.PlanarConfiguration">
      <summary>Gets or sets the planar configuration. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>The planar configuration. This value is used only if <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Format" /> is
             <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawPackBits</see>. Otherwise, it is ignored. Possible values are</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsPlanarConfiguration">CodecsPlanarConfiguration.Chunky</see>
            </term>
            <description>Chunky</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsPlanarConfiguration">CodecsPlanarConfiguration.PlanarFormat</see>
            </term>
            <description>Planar format</description>
          </item>
        </list>
      </value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsPlanarConfiguration planarConfiguration;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsPlanarConfiguration getPlanarConfiguration()
public void setPlanarConfiguration(CodecsPlanarConfiguration value)             </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Order">
      <summary>Gets or sets the byte order for the load process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The byte order for the load process.</value>
      <remarks>
            To load raw 12- and 16-bit extended grayscale images, set the 
            <i>CodecsLoadInformationEventArgs.Order</i> property to RasterByteOrder.Gray 
            and the 
            <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.LeastSignificantBitFirst">CodecsLoadInformationEventArgs.LeastSignificantBitFirst</see> property accordingly.
            </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterByteOrder order;</pre>
      </objectivec>
      <java>
        <pre>
public RasterByteOrder getOrder()
public void setOrder(RasterByteOrder value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.ViewPerspective">
      <summary>Gets or sets the view perspective for the load process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The view perspective for the load process.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterViewPerspective viewPerspective;</pre>
      </objectivec>
      <java>
        <pre>
public RasterViewPerspective getViewPerspective()
public void setViewPerspective(RasterViewPerspective value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.WhiteOnBlack">
      <summary>Gets or sets a value that determines if the image is black-on-white or white on black. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image is white-on-black, false if the image is black on white.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL whiteOnBlack;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getWhiteOnBlack()
public void setWhiteOnBlack(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.LeastSignificantBitFirst">
      <summary>Gets or sets a value specifying whether the image data was saved with least significant bit first or last. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image data was saved LSB, false if the image data was saved MSB.</value>
      <remarks>
            This property is used when loading raw data and some formats that support motorola byte order. 
            To load raw 12- and 16-bit extended grayscale images, set the 
            <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Order">CodecsLoadInformationEventArgs.Order</see> property to RasterByteOrder.Gray 
            and the 
            <i>CodecsLoadInformationEventArgs.LeastSignificantBitFirst</i> Property accordingly.
            </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL leastSignificantBitFirst;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getLeastSignificantBitFirst()
public void setLeastSignificantBitFirst(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Reverse">
      <summary>Gets or sets a value that determines whether each line is reversed (mirrored). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if each line is reversed (mirrored); false, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL reverse;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getReverse()
public void setReverse(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Pad4">
      <summary>Gets or sets a value indicating whether the image data was saved padded to 4-byte boundary. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the data was padded to 4-byte boundary; false, otherwise.</value>
      <remarks>
            This property is used when loading raw data.
            </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL pad4;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getPad4()
public void setPad4(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.MotorolaOrder">
      <summary>Gets or sets a value that determines whether or not image data is in Motorola byte order. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if image data is in Motorola byte order, false if in Intel byte order.</value>
      <remarks>
            Valid only for 16, 48 and 64-bit image data.
            </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL motorolaOrder;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getMotorolaOrder()
public void setMotorolaOrder(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Signed">
      <summary>Gets or sets a value that determines whether or not the image data is signed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true if image data is signed, false if it is not.</value>
      <remarks>
            To load signed image data set the <i>CodecsLoadInformationEventArgs.Signed property</i> to true. 
            
            </remarks>
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL isSigned;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getSigned()
public void setSigned(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Stream_WinRT">
      <summary>
            Gets the stream used by the load process.
            </summary>
      <value>The <see cref="T:Leadtools.ILeadStream" /> object used by the load process.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation_EV">RasterCodecs.LoadInformation</see>.</example>
      <winrt />
    </member>
    <member name="T:Leadtools.Codecs.CodecsImageInfo">
      <summary>Provides functionality for getting information about image files supported by
            LEADTOOLS. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <strong>Note:</strong> For information about loading PDF files, refer to
                <see cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plugin Features</see>.
            </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsPdfLoadOptions">CodecsPdfLoadOptions</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsPdfOptions">CodecsPdfOptions</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsPdfSaveOptions">CodecsPdfSaveOptions</seealso>
      <example>
        <!--CodecsImageInfo-->
      </example>
      <objectivec>
        <pre>@interface LTCodecsImageInfo : NSObject&lt;NSCopying&gt;</pre>
      </objectivec>
      <java>
        <pre>public class CodecsImageInfo</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsImageInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public CodecsImageInfo()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsImageInfo.Dispose">
      <summary>Releases all resources used by this <see cref="T:Leadtools.Codecs.CodecsImageInfo" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <seealso cref="T:System.IDisposable" />
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsImageInfo.Finalize">
      <summary>This member overrides <see cref="M:System.Object.Finalize" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <seealso cref="T:System.IDisposable" />
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsImageInfo.Dispose(System.Boolean)">
      <summary>Releases all the resources used by this <see cref="T:Leadtools.Codecs.CodecsImageInfo" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsImageInfo.Clone">
      <summary>Creates an exact copy of the current page of this <see cref="T:Leadtools.Codecs.CodecsImageInfo" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>The <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> this method creates.</returns>
      <noremarks />
      <noexample />
      <java>
        <pre>public CodecsImageInfo clone()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsImageInfo.GetPalette">
      <summary>Gets the images's palette. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>An array of <see cref="T:Leadtools.RasterColor" /> structure that represents the image's palette.</value>
      <remarks>The palette is only used when loading RAW files.</remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <returns>
      </returns>
      <objectivec>
        <pre>-(NSArray*)getPalette;</pre>
      </objectivec>
      <java>
        <pre>
public RasterColor[] getPalette()
void setPalette(RasterColor palette[])            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsImageInfo.ToString">
      <summary>Returns a string containing the image information in a human readable format. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>A string containing the image information.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <java>
        <pre>public String toString()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsImageInfo.GetStringDescription">
      <summary>
            Returns a human-readable representation of this <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.
            </summary>
      <returns>A human-readable representation of this <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</returns>
      <noremarks />
      <noexample />
      <winrt />
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.Format">
      <summary>Gets the image file format. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The image file format.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LTRasterImageFormat format;</pre>
      </objectivec>
      <java>
        <pre>public RasterImageFormat getFormat()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.Name">
      <summary>Gets the file name. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The file name.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, copy, readonly) NSString* name;</pre>
      </objectivec>
      <java>
        <pre>public String getName()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.Width">
      <summary>Gets the width of the image in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The width of the image in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int width;</pre>
      </objectivec>
      <java>
        <pre>public int getWidth()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.Height">
      <summary>Gets the height of the image in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The height of the image in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int height;</pre>
      </objectivec>
      <java>
        <pre>public int getHeight()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.BitsPerPixel">
      <summary>Gets the bits per pixel of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The bits per pixel of the image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int bitsPerPixel;</pre>
      </objectivec>
      <java>
        <pre>public int getBitsPerPixel()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.BytesPerLine">
      <summary>Gets the number of bytes per scanline for the image data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>the number of bytes per scanline for the image data..</value>
      <remarks>
            The BytesPerLine is rounded upward to the nearest multiple of four.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int bytesPerLine;</pre>
      </objectivec>
      <java>
        <pre>public int getBytesPerLine()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.SizeDisk">
      <summary>Gets the size of the image file on disk. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The size of the image file on disk.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) size_t sizeDisk;</pre>
      </objectivec>
      <java>
        <pre>public long getSizeDisk()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.SizeMemory">
      <summary>Gets the size of the image when loaded uncompressed in memory. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The size of the image when loaded uncompressed in memory.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) size_t sizeMemory;</pre>
      </objectivec>
      <java>
        <pre>public long getSizeMemory()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.Compression">
      <summary>Gets the compression of the image file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:System.String" /> containing the compression of the image file.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, copy, readonly) NSString* compression;</pre>
      </objectivec>
      <java>
        <pre>public String getCompression()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.ViewPerspective">
      <summary>Gets the view perspective of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The view perspective of the image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LTRasterViewPerspective viewPerspective;</pre>
      </objectivec>
      <java>
        <pre>public RasterViewPerspective getViewPerspective()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.Order">
      <summary>Gets the byte order of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The byte order of the image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LTRasterByteOrder order;</pre>
      </objectivec>
      <java>
        <pre>public RasterByteOrder getOrder()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.ColorSpace">
      <summary>Gets the color space of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The color space of the image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LTCodecsColorSpaceType colorSpace;</pre>
      </objectivec>
      <java>
        <pre>public CodecsColorSpaceType getColorSpace()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.PageNumber">
      <summary>Gets the page number of the file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The page number of the file.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int pageNumber;</pre>
      </objectivec>
      <java>
        <pre>public int getPageNumber()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.TotalPages">
      <summary>Gets the total number of pages in the file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The total number of pages in the file.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int totalPages;</pre>
      </objectivec>
      <java>
        <pre>public int getTotalPages()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.HasResolution">
      <summary>Determines whether or not the file has resolution values (DPI) stored inside. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image file has resolution values stored inside; false, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL hasResolution;</pre>
      </objectivec>
      <java>
        <pre>public boolean hasResolution()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.XResolution">
      <summary>Gets the horizontal resolution (DPI) of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The horizontal resolution (DPI) of the image.</value>
      <remarks>
            The <see cref="P:Leadtools.Codecs.CodecsImageInfo.XResolution" /> is valid only when the value of <see cref="P:Leadtools.Codecs.CodecsImageInfo.HasResolution" /> is true.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int xResolution;</pre>
      </objectivec>
      <java>
        <pre>public int getXResolution()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.YResolution">
      <summary>Gets the vertical resolution (DPI) of the image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The vertical resolution (DPI) of the image.</value>
      <remarks>
            The <see cref="P:Leadtools.Codecs.CodecsImageInfo.YResolution" /> is valid only when the value of <see cref="P:Leadtools.Codecs.CodecsImageInfo.HasResolution" /> is true.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int yResolution;</pre>
      </objectivec>
      <java>
        <pre>public int getYResolution()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.IsRotated">
      <summary>Determines whether or not the image has a rotated view perspective. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image has a rotated view perspective; false, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL isRotated;</pre>
      </objectivec>
      <java>
        <pre>public boolean isRotated()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.IsSigned">
      <summary>Determines whether or not the image data is signed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image data contains signed (negative) values; false, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL isSigned;</pre>
      </objectivec>
      <java>
        <pre>public boolean isSigned()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.HasAlpha">
      <summary>Determines whether or not the image contains alpha channel information. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image contains alpha channel information; false, otherwise.</value>
      <seealso cref="T:L.Topics.PNGFilesAndTransparency">PNG Files and Transparency</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL hasAlpha;</pre>
      </objectivec>
      <java>
        <pre>public boolean hasAlpha()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.IsLink">
      <summary>Determines whether or not the file is an image file or a link to an image file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the file is a link to an image file; false, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <java>
        <pre>public boolean isLink()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.Gif">
      <summary>Gets extra information about the image if the file format is GIF. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsGifImageInfo" /> object that contains extra information about the image if the file format is GIF.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsGifImageInfo* gif;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.Fax">
      <summary>Gets extra information about the image if the file format is FAX. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsFaxImageInfo" /> object that contains extra information about the image if the file format is FAX.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsFaxImageInfo* fax;</pre>
      </objectivec>
      <java>
        <pre>public CodecsFaxImageInfo getFax()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.Jpeg">
      <summary>Gets extra information about the image if the file format is JPEG or LEAD CMP. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsJpegImageInfo" /> object that contains extra information about the image if the file format is JPEG or LEAD CMP.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsJpegImageInfo* jpeg;</pre>
      </objectivec>
      <java>
        <pre>public CodecsJpegImageInfo getJpeg()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.Tiff">
      <summary>Gets extra information about the image if the file format is TIFF. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsTiffImageInfo" /> object that contains extra information about the image if the file format is TIFF.</value>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsTiffImageInfo* tiff;</pre>
      </objectivec>
      <java>
        <pre>public CodecsTiffImageInfo getTiff()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.Psd">
      <summary>Gets extra information about the image if the file format is PSD. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsPsdImageInfo" /> object that contains extra information about the image if the file format is PSD.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.Document">
      <summary>Gets extra information about the image if the file is a document format. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" /> object containing the document format information such as its logical size.</value>
      <remarks>
        <para>LEADTOOLS provides support for loading a document as a raster image. Documents formats such as PDF, XPS, DOC/DOCX(2007/2010), PPT/PPTX(2007/2010), XLS/XLSX(2007/2010), RTF and Text
            do not contain physical width, height or resolution. It is up to the loader (in this case, the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object) to
            specify the transformation from logical coordinates to physical pixels through a process called rasterization.
            For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
        <para>The <see cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" /> class contains properties that specify the original document logical size on disk.
            This can be useful when calculating the rasterization parameters based on your application viewing needs.</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsDocumentImageInfo* document;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.Vector">
      <summary>Gets extra information about the image if the file is a vector format. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsVectorImageInfo" /> object containing the vector format information such as its logical size.</value>
      <remarks>
        <para>
            LEADTOOLS provides support for loading a vector image as a raster image. Vector formats such as DXF, DWG and SVG
            can be converted to a raster image through a process called rasterization.
            </para>
        <para>
            Rasterization is the process of converting a vector image to a raster image. To determine whether a certain file on disk (or in a .NET stream)
            contains a vector image file rather than a regular raster image, call the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see> or
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> method and
            check the <see cref="P:Leadtools.Codecs.CodecsVectorImageInfo.IsVectorFile">CodecsVectorImageInfo.IsVectorFile</see> property.
            </para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsVectorImageInfo" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorImageInfo" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">
      <summary>Gets a value that determines whether this <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object is still loading. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image is still loading; false, otherwise.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports getting information on image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> that is in a loading status
            (<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes getting the information about the file, the various properties of the
            <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> will be populated with the image file information and the <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>It is recommended that you do not poll for the <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see> property to determine whether the
            image information has been collected. Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted_EV">RasterCodecs.GetInformationAsyncCompleted</see>
            event to get notification on when the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> operation is completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted_EV">RasterCodecs.GetInformationAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> so you do not have to keep the original
            object in your application.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted_EV">RasterCodecs.GetInformationAsyncCompleted</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL isLoading;</pre>
      </objectivec>
      <java>
        <pre>public boolean isLoading()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJbig2LoadOptions">
      <summary>Provides options specifically for loading JBIG2 images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2Options" />.</example>
      <objectivec>
        <pre>@interface LTCodecsJbig2LoadOptions : NSObject</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2LoadOptions.LoadOldFiles">
      <summary>Gets or sets a value that indicates whether to load old JBIG2 files <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> to load old JBIG2 files, otherwise; <strong>false</strong>. Default value is <strong>false</strong>.</value>
      <remarks>
        <para>Older versions of LEADTOOLS had a problem when some JBIG2 files were saved incorrectly. As of version 17, LEADTOOLS saves these files correctly. If you have files
            saved with an older version of LEADTOOLS and you are encountering an error when loading these files, you can set the value of <see cref="P:Leadtools.Codecs.CodecsJbig2LoadOptions.LoadOldFiles" /> to
            <strong>true</strong> and try again.</para>
      </remarks>
      <noexample />
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL loadOldFiles;</pre>
      </objectivec>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJbig2SaveOptions">
      <summary>Provides options specifically for saving JBIG2 images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2Options" />.</example>
      <objectivec>
        <pre>@interface LTCodecsJbig2SaveOptions : NSObject</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageTypicalPredictionOn">
      <summary>Gets or sets a value that indicates whether to use typical prediction (TP) while encoding non-text area. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            true to use typical prediction (TP) while encoding non-text area; otherwise, false.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL imageTypicalPredictionOn;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageTemplateType">
      <summary>{NR} Gets or sets a value that specifies which template-based arithmetic encoder to use when encoding a non-text area. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer value that specifies which template-based arithmetic encoder to use when encoding a non-text area.
            Currently, LEADTOOLS supports the following templates:
            <list type="table"><listheader><term>Value</term><description>Meaning</description></listheader><item><term>0</term><description><para>Three lines with a 16-pixel template.</para><para><img src="JBIG2Template0.gif" /></para></description></item><item><term>1</term><description><para>Three lines with a 13-pixel template.</para><para><img src="JBIG2Template1.gif" /></para></description></item><item><term>2</term><description><para>Three lines with a 10-pixel template.</para><para><img src="JBIG2Template2.gif" /></para></description></item><item><term>3</term><description><para>Two lines with a 10-pixel template.</para><para><img src="Jbig2Template3.gif" /></para></description></item></list></value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char imageTemplateType;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageQualityFactor">
      <summary>Gets or sets the degree of loss in the compression process for non-text areas. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer value that determines the degree of loss in the compression process for non-text areas.
            The value of 0 means lossless while any other value means lossy. The default value is 0.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int imageQualityFactor;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageGbatX1">
      <summary>Gets or sets the X location of the adaptive template pixel A1 for non-text area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the X location of the adaptive template pixel A1 for non-text area encoding.
            Possible values range from -128 to 127 except when <see cref="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageGbatY1" /> is zero, in which case they range from �128 to -1.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char imageGbatX1;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageGbatY1">
      <summary>Gets or sets the Y location of the adaptive template pixel A1 for non-text area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the Y location of the adaptive template pixel A1 for non-text area encoding.
            Possible values range from -128 to 0.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char imageGbatY1;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageGbatX2">
      <summary>Gets or sets the X location of the adaptive template pixel A2 for non-text area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the X location of the adaptive template pixel A2 for non-text area encoding.
            Possible values range from -128 to 127 except when <see cref="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageGbatY2" /> is zero, in which case they range from �128 to -1.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char imageGbatX2;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageGbatY2">
      <summary>Gets or sets the Y location of the adaptive template pixel A2 for non-text area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the Y location of the adaptive template pixel A2 for non-text area encoding.
            Possible values range from -128 to 0.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char imageGbatY2;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageGbatX3">
      <summary>Gets or sets the X location of the adaptive template pixel A3 for non-text area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the X location of the adaptive template pixel A3 for non-text area encoding.
            Possible values range from -128 to 127 except when <see cref="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageGbatY3" /> is zero, in which case they range from �128 to -1.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char imageGbatX3;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageGbatY3">
      <summary>Gets or sets the Y location of the adaptive template pixel A3 for non-text area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the Y location of the adaptive template pixel A3 for non-text area encoding.
            Possible values range from -128 to 0.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char imageGbatY3;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageGbatX4">
      <summary>Gets or sets the X location of the adaptive template pixel A4 for non-text area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the X location of the adaptive template pixel A4 for non-text area encoding..
            Possible values range from -128 to 127 except when <see cref="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageGbatY4" /> is zero, in which case they range from �128 to -1.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char imageGbatX4;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.ImageGbatY4">
      <summary>Gets or sets the Y location of the adaptive template pixel A4 for non-text area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the Y location of the adaptive template pixel A4 for non-text area encoding.
            Possible values range from -128 to 0.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char imageGbatY4;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextTemplateType">
      <summary>Gets or sets a value that specifies which template-based arithmetic encoder to use when encoding a text area. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer value that specifies which template-based arithmetic encoder to use when encoding a text area.
            Currently, LEADTOOLS supports the following templates:
            <list type="table"><listheader><term>Value</term><description>Meaning</description></listheader><item><term>0</term><description><para>Three lines with a 16-pixel template.</para><para><img src="Jbig2Template0.gif" /></para></description></item><item><term>1</term><description><para>Three lines with a 13-pixel template.</para><para><img src="Jbig2Template1.gif" /></para></description></item><item><term>2</term><description><para>Three lines with a 10-pixel template.</para><para><img src="Jbig2Template2.gif" /></para></description></item><item><term>3</term><description><para>Two lines with a 10-pixel template.</para><para><img src="Jbig2Template3.gif" /></para></description></item></list></value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char textTemplateType;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextGbatX1">
      <summary>Gets or sets the X location of the adaptive template pixel A1 for text-area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the X location of the adaptive template pixel A1 for text-area encoding.
            Possible values range from -128 to 127 except when <see cref="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextGbatY1" /> is zero, in which case they range from �128 to -1.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char textGbatX1;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextGbatY1">
      <summary>Gets or sets the Y location of the adaptive template pixel A1 for text-area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the Y location of the adaptive template pixel A1 for text-area encoding.
            Possible values range from -128 to 0.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char textGbatY1;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextGbatX2">
      <summary>Gets or sets the X location of the adaptive template pixel A2 for text-area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the X location of the adaptive template pixel A2 for text-area encoding.
            Possible values range from -128 to 127 except when <see cref="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextGbatY2" /> is zero, in which case they range from �128 to -1.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char textGbatX2;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextGbatY2">
      <summary>Gets or sets the Y location of the adaptive template pixel A2 for text-area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the Y location of the adaptive template pixel A2 for text-area encoding.
            Possible values range from -128 to 0.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char textGbatY2;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextGbatX3">
      <summary>Gets or sets the X location of the adaptive template pixel A3 for text-area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the X location of the adaptive template pixel A3 for text-area encoding.
            Possible values range from -128 to 127 except when <see cref="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextGbatY3" /> is zero, in which case they range from �128 to -1.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char textGbatX3;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextGbatY3">
      <summary>Gets or sets the Y location of the adaptive template pixel A3 for text-area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the Y location of the adaptive template pixel A3 for text-area encoding.
            Possible values range from -128 to 0.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char textGbatY3;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextGbatX4">
      <summary>Gets or sets the X location of the adaptive template pixel A4 for text-area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the X location of the adaptive template pixel A4 for text-area encoding.
            Possible values range from -128 to 127 except when <see cref="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextGbatY4" /> is zero, in which case they range from �128 to -1.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char textGbatX4;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextGbatY4">
      <summary>Gets or sets the Y location of the adaptive template pixel A4 for text-area encoding. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer that represents the Y location of the adaptive template pixel A4 for text-area encoding.
            Possible values range from -128 to 0.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned char textGbatY4;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextMinimumSymbolArea">
      <summary>Gets or sets a value indicating the minimum text symbol area. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>An integer value that indicates the minimum text symbol area, in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int textMinimumSymbolArea;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextMinimumSymbolWidth">
      <summary>Gets or sets a value indicating the minimum text symbol width. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>An integer value that indicates the minimum text symbol width, in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int textMinimumSymbolWidth;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextMinimumSymbolHeight">
      <summary>Gets or sets a value indicating the minimum text symbol height. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>An integer value that indicates the minimum text symbol height, in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int textMinimumSymbolHeight;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextMaximumSymbolArea">
      <summary>Gets or sets a value indicating the maximum text symbol area. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>An integer value that indicates the maximum text symbol area, in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int textMaximumSymbolArea;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextMaximumSymbolWidth">
      <summary>Gets or sets a value indicating the maximum text symbol width. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>An integer value that indicates the maximum text symbol width, in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int textMaximumSymbolWidth;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextMaximumSymbolHeight">
      <summary>Gets or sets a value indicating the maximum text symbol height. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>An integer value that indicates the maximum text symbol height, in pixels.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int textMaximumSymbolHeight;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextDifferentialThreshold">
      <summary>Gets or sets a value indicating the maximum difference allowed to map a text symbol to a dictionary symbol. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>An integer value that indicates the maximum allowable difference to map a text symbol to a dictionary symbol, in percent.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int textDifferentialThreshold;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextQualityFactor">
      <summary>Gets or sets the degree of loss in the compression process for a text area. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An integer value that determines the degree of the loss in the compression process for a text area.
            The value of 0 means lossless while any other value means lossy. The default value is 0.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int textQualityFactor;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextRemoveUnrepeatedSymbol">
      <summary>Gets or sets a value indicating whether to remove unrepeated symbols from the dictionary. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            true to remove unrepeated symbols from the dictionary; otherwise, false.
            </value>
      <remarks>
            Set this value to true to have those symbols in the dictionary which do not have any match in the image removed from the text dictionary to be encoded as non-text, resulting in a smaller file size.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL textRemoveUnrepeatedSymbol;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.TextKeepAllSymbols">
      <summary>Gets or sets a value indicating whether to keep all dictionary symbols. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to keep all dictionary symbols; otherwise, false.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL textKeepAllSymbols;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.XResolution">
      <summary>Gets or sets the reference image X resolution which JBIG2 options were set according to it. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>An integer value that represents the image X resolution to be used when setting JBIG2 options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int xResolution;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.YResolution">
      <summary>Gets or sets the reference image Y resolution which JBIG2 options were set according to it. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>An integer value that represents the image Y resolution to be used when setting JBIG2 options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int yResolution;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.RemoveMarker">
      <summary>Gets or sets a value that indicates whether to remove the two bytes marker from generic region segment data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            true to remove the two bytes marker from generic region segment data; otherwise, false.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL removeMarker;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.RemoveHeaderSegment">
      <summary>Gets or sets a value that indicates whether to remove the JBIG2 header segment. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            true to remove the JBIG2 header segment; otherwise, false.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL removeHeaderSegment;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.RemoveEopSegment">
      <summary>Gets or sets a value that indicates whether to remove the End of Page segment. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            true to remove the End of Page segment; otherwise, false.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL removeEopSegment;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.RemoveEofSegment">
      <summary>Gets or sets a value that indicates whether to remove the End of File segment. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            true to remove the End of File segment; otherwise, false.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL removeEofSegment;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2SaveOptions.EnableDictionary">
      <summary>Gets or sets a value that indicates whether to enable the encoder to use the text symbol dictionary. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            true to to enable the encoder to use the text symbol dictionary; otherwise, false.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL enableDictionary;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJbig2Options">
      <summary>Provides extra options for loading and saving JBIG2 images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>
        <!--CodecsJbig2Options-->
      </example>
      <objectivec>
        <pre>@interface LTCodecsJbig2Options : NSObject</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2Options.Load">
      <summary>Gets the options for loading JBIG2 images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsJbig2LoadOptions" /> class that contains the options to be used when loading JBIG2 images.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsJbig2LoadOptions* load;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbig2Options.Save">
      <summary>Gets the options for saving JBIG2 images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsJbig2SaveOptions" /> class that contains the options to be used when saving JBIG2 images.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbig2Options" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsJbig2SaveOptions* save;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsDocLoadOptions">
      <summary>Provides the options for loading Microsoft Word 97-2003 (DOC) and Microsoft Word 2007/2010 documents as raster images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>DOC|Word|DOCX</keywords>
      <remarks>
        <para>Microsoft Word 97-2003 (DOC) and Microsoft Word 2007/2010 (DOCX) files have 
            no physical width or height in pixels. Use
            the <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentOptions" /> to control
            how the final document is rendered as a raster image. For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
        <para>For more information, refer to 
            <see cref="T:L.Topics.FileFormatsDOC">File Formats - DOC/DOCX Format</see>.</para>
        <para>Important note: The DOC/DOCX file format supports only the following rasterization size modes:
            <list type="bullet"><item><description><see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.None</see></description></item><item><description><see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.Fit</see></description></item></list></para>
        <para>All other size modes will be treated as <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.Fit</see></para>
        <para>DOC/DOCX also does not support loading a document using different horizontal or vertical resolutions. So if the value of
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.XResolution">CodecsRasterizeDocumentLoadOptions.XResolution</see> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.YResolution">CodecsRasterizeDocumentLoadOptions.YResolution</see> are different,
            the DOC/DOCX codecs will use the larger of the two values as the resolution to use when rasterizing.</para>
      </remarks>
      <example>
        <para>This example will load the given Word 2003 file and render it as a raster image</para>
        <!--CodecsDocLoadOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsDocLoadOptions.BitsPerPixel">
      <summary>Gets or sets the final bits per pixel of the loaded <see cref="T:Leadtools.RasterImage" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>One of the supported LEADTOOLS bits per pixel values.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsDocLoadOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsDocOptions">
      <summary>Provides extra options for loading and saving Microsoft Word 97-2003 (DOC) or Microsoft Word 2007/2010 (DOCX)  files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>DOC|Word|DOCX</keywords>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsDocLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsDocOptions.Load">
      <summary>Gets the options for loading Microsoft Word 97-2003 (DOC) or Microsoft Word 2007/2010 (DOCX) files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>DOC|Word|DOCX</keywords>
      <value>The options to use when loading Microsoft Word 97-2003 (DOC) or Microsoft Word 2007/2010 (DOCX) files.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsDocLoadOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.RasterImageTypeConverter">
      <summary>
        <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" /> is a class that can be used to convert <see cref="T:Leadtools.RasterImage" /> objects from other data types. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>This class derives from the standard .NET <see cref="T:System.ComponentModel.TypeConverter" /> class to provides functionality for converting
            <see cref="T:Leadtools.RasterImage" /> objects from other data types.</para>
        <para>The following data types are supported:
            <list type="bullet"><item><description><see cref="T:System.Uri" /> containing the URL to the image file with optional parameters.</description></item><item><description><see cref="T:System.String" /> containing the path to the image file with optional parameters.</description></item><item><description><see cref="T:System.IO.Stream" /> containing the data of the image file.</description></item><item><description>An array of <see cref="T:System.Byte" /> containing the data of the image file.</description></item></list></para>
        <para>The <see cref="M:Leadtools.Codecs.RasterImageTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> method will return <strong>true</strong> if any of the supported object types is passed into
            the <i>sourceType</i> parameter. However, this does not mean that the conversion operation will succeed, this depends on whether the data contains
            a valid image that LEADTOOLS can load.</para>
        <para>The <see cref="M:Leadtools.Codecs.RasterImageTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> method will try to convert the object passed into the <i>value</i> parameter to a valid <see cref="T:Leadtools.RasterImage" /> object.</para>
        <para>For <see cref="T:System.Uri" /> and <see cref="T:System.String" /> source objects, LEADTOOLS supports optional extra parameters passed as standard HTML query string to fine tune the loading of
            <see cref="T:Leadtools.RasterImage" /> objects. The following table lists these parameters:</para>
        <list type="table">
          <listheader>
            <term>Parameter</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>LeadBitsPerPixel</term>
            <description>
              <para>Resulting image pixel depth.  This should be a string representation of an integer. Valid values are:</para>
              <list type="table">
                <listheader>
                  <term>value</term>
                  <description>Meaning</description>
                </listheader>
                <item>
                  <term>0</term>
                  <description>Keep the original file's pixel depth (Do not convert).</description>
                </item>
                <item>
                  <term>1 to 8</term>
                  <description>The specified bits per pixel in the resulting image.</description>
                </item>
                <item>
                  <term>12</term>
                  <description>12 bits per pixel in the resulting image.</description>
                </item>
                <item>
                  <term>16</term>
                  <description>16 bits per pixel in the resulting image.</description>
                </item>
                <item>
                  <term>24</term>
                  <description>24 bits per pixel in the resulting image.</description>
                </item>
                <item>
                  <term>32</term>
                  <description>32 bits per pixel in the resulting image.</description>
                </item>
                <item>
                  <term>48</term>
                  <description>48 bits per pixel in the resulting image.</description>
                </item>
                <item>
                  <term>64</term>
                  <description>64 bits per pixel in the resulting image.</description>
                </item>
              </list>
            </description>
          </item>
          <item>
            <term>LeadOrder</term>
            <description>
              <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. This must be one of the following string values:</para>
              <list type="table">
                <listheader>
                  <term>Value</term>
                  <description>Meaning</description>
                </listheader>
                <item>
                  <term>Rgb</term>
                  <description>Red, green, and blue color order in memory</description>
                </item>
                <item>
                  <term>Bgr</term>
                  <description>Blue, green, and red color order in memory</description>
                </item>
                <item>
                  <term>Gray</term>
                  <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
                </item>
                <item>
                  <term>RgbOrGray</term>
                  <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
                </item>
                <item>
                  <term>BgrOrGray</term>
                  <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
                </item>
                <item>
                  <term>Romm</term>
                  <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
                </item>
                <item>
                  <term>BgrOrGrayOrRomm</term>
                  <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
                </item>
              </list>
            </description>
          </item>
          <item>
            <term>LeadFirstPage</term>
            <description>
              <para>A string that contains an integer representation of the 1-based index of the first page to load.</para>
            </description>
          </item>
          <item>
            <term>LeadLastPage</term>
            <description>
              <para>A string that contains an integer representation of the 1-based index of last page to load. Must be greater than or equal to "LeadFirstPage" if specified.</para>
            </description>
          </item>
          <item>
            <term>LeadUseWriteableBitmap</term>
            <description>
              <para>
                <strong>For Silverlight only:</strong> a string that contains a boolean representation of a value that will be used to set <see cref="P:Leadtools.Codecs.CodecsLoadOptions.UseWriteableBitmap">CodecsLoadOptions.UseWriteableBitmap</see>. If this
            is omitted, <strong>false</strong> will be used. If you add this parameter with a <strong>true</strong> value, then the resulting <see cref="T:Leadtools.RasterImage" /> will be loaded with a
            "WriteableBitmap" as the backend data. Refer to <see cref="P:Leadtools.Codecs.CodecsLoadOptions.UseWriteableBitmap">CodecsLoadOptions.UseWriteableBitmap</see> for more information.</para>
            </description>
          </item>
          <item>
            <term>LeadUseNativeLoad</term>
            <description>
              <para>
                <strong>For Silverlight only:</strong> a string that contains a boolean representation of a value that will be used to set <see cref="P:Leadtools.Codecs.CodecsLoadOptions.UseNativeLoad">CodecsLoadOptions.UseNativeLoad</see>. If this
            is omitted, <strong>false</strong> will be used. If you add this parameter with a <strong>true</strong> value, then the resulting <see cref="T:Leadtools.RasterImage" /> will be loaded with the native
            filter codecs instead of LEADTOOLS. Refer to <see cref="P:Leadtools.Codecs.CodecsLoadOptions.UseNativeLoad">CodecsLoadOptions.UseNativeLoad</see> for more information.</para>
            </description>
          </item>
        </list>
        <para>All these parameters are optional and should be passed as a standard HTML query string. The order is not important. Here are a few examples of valid strings:</para>
        <para>
          <code>
            // Load all the pages in the TIF file hosted at an HTTP URL
            http://tempuri.org/MyImage.tif
            // Load the first page only of the multi-page TIF file hosted at an HTTP URL
            http://tempuri.org/MyImage.tif?LeadFirstPage=1&amp;LeadLastPage=1
            // Load the second and third page of the multi-page TIF file hosted at an HTTP URL as 24 bits/pixel with RGB color order
            http://tempuri.org/MyImage.tif?LeadBitsPerPixel=24&amp;LeadOrder=Rgb&amp;LeadFirstPage=2&amp;LeadLastPage=3
            // Load all the pages in the TIF file hosted at an FTP site
            ftp://tempuri.org/MyImage.tif
            // Load all the pages in the TIF file in a disk file
            C:\Dir\MyImage.tif
            file:://C:/Dir/MyImage.tif
            file:://myserver/MyImage.tif
            // Load the second and third page of the multi-page TIF file in a disk file as 24 bits/pixel with RGB color order
            C:\Dir\MyImage\MyImage.tif?LeadBitsPerPixel=24&amp;LeadOrder=Rgb&amp;LeadFirstPage=2&amp;LeadLastPage=3
            </code>
        </para>
            The <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" /> is also used when loading a resource image from XAML as a <see cref="T:Leadtools.RasterImage" />. Here are a few example:
            <para><code>
            // Load all the pages in the TIF file set as resource
            "MyImage.tif"
            // Load the first page only of the multi-page TIF file set as a resource
            "MyImage.tif?LeadFirstPage=1&amp;LeadLastPage=1"
            // Load the second and third page of the multi-page TIF file set as a resource as 24 bits/pixel with RGB color order
            "MyImage.tif?LeadBitsPerPixel=24&amp;LeadOrder=Rgb&amp;LeadFirstPage=2&amp;LeadLastPage=3"
            // Load the second and third page of the multi-page TIF file set as a resource as 24 bits/pixel with RGB color order
            "MyImage.tif?LeadBitsPerPixel=24&amp;LeadOrder=Rgb&amp;LeadFirstPage=2&amp;LeadLastPage=3"
            // Silverlight only: Load the image and set it as a WriteableBitmap in a RasterImage
            "MyImage.tif?LeadUseWriteableBitmap=True"
            // Silverlight only: Load the PNG image using Silverlight and set it as a WriteableBitmap in a RasterImage
            "MyImage.tif?LeadUseWriteableBitmap=True&amp;LeadUseNativeLoad=True"
            </code></para><para>Query string are not supported for <see cref="T:System.String" /> and an array of <see cref="T:System.Byte" /> data types.</para><para>The LEADTOOLS WPF and Silverlight controls use the <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" /> to load a <see cref="T:Leadtools.RasterImage" /> from a XAML file.</para><para>The image returned from the <see cref="M:Leadtools.Codecs.RasterImageTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> method will have its<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> property set to
            true since this method will load the image asynchronously. To get notified when the image has finished loading, create the <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" /> with
            your own <see cref="T:Leadtools.Codecs.RasterCodecs" /> instance and subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted_EV">RasterCodecs.LoadAsyncCompleted</see> event
            before calling <see cref="M:Leadtools.Codecs.RasterImageTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> as show in the example below.</para></remarks>
      <example>
        <para>This example will use the <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" /> to load a image from a URL.</para>
        <!--RasterImageTypeConverter-->
      </example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterImageTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>This constructor should not be used by code outside of LEADTOOLS.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterImageTypeConverter.#ctor(Leadtools.Codecs.RasterCodecs)">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" /> class with a given <see cref="T:Leadtools.Codecs.RasterCodecs" /> object. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="codecs">The <see cref="T:Leadtools.Codecs.RasterCodecs" /> object. </param>
      <remarks>
        <para>The image returned from the <see cref="M:Leadtools.Codecs.RasterImageTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> method will have its<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> property set to
            true since this method will load the image asynchronously. To get notified when the image has finished loading, create the <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" /> with
            your own <see cref="T:Leadtools.Codecs.RasterCodecs" /> instance and subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted_EV">RasterCodecs.LoadAsyncCompleted</see> event
            before calling <see cref="M:Leadtools.Codecs.RasterImageTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> as show in the example of <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterImageTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether the converter can convert an object of the given type to an instance of <see cref="T:Leadtools.RasterImage" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="context">Type context information used to evaluate conversion.</param>
      <param name="sourceType">The type of the source that is being evaluated for conversion.</param>
      <returns>
        <strong>true</strong> if the converter can convert the provided type to an instance of <see cref="T:Leadtools.RasterImage" />; otherwise, <strong>false</strong>.</returns>
      <remarks>
        <para>The <see cref="M:Leadtools.Codecs.RasterImageTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> method will return <strong>true</strong> if any of the supported object types is passed into
            the <paramref name="sourceType" /> parameter. However, this does not mean that the conversion operation will succeed, this depends on whether the data
            contains a valid image that LEADTOOLS can load. For more information, refer to <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterImageTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert a specified object to an instance of <see cref="T:Leadtools.RasterImage" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="context">Type context information used for conversion.</param>
      <param name="culture">Cultural information that is respected during conversion.</param>
      <param name="value">The object being converted.</param>
      <returns>A new instance of <see cref="T:Leadtools.RasterImage" />.</returns>
      <remarks>
        <para>The <see cref="M:Leadtools.Codecs.RasterImageTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> method will try to convert the object passed into the <paramref name="value" /> parameter to a valid
            <see cref="T:Leadtools.RasterImage" /> object. For more information, refer to <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.RasterImageTypeConverter" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsTransformFlags">
      <summary>Indicates the transform to perform. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)">RasterCodecs.Transform</see>.</example>
      <objectivec>
        <pre>typedef unsigned int LTCodecsTransformFlags;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsTransformFlags</pre>
      </java>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTransformFlags.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTransformFlags.Flip">
      <summary>
            Flip the image vertically.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTransformFlags.Reverse">
      <summary>
            Flip the image vertically.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTransformFlags.Rotate90">
      <summary>
            Rotate the image 90 degrees.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTransformFlags.Rotate180">
      <summary>
            Rotate the image 190 degrees.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTransformFlags.Rotate270">
      <summary>
            Rotate the image 270 degrees.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsTransformMarkerAction">
      <summary>Indicates the action to take when processing a marker. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)">RasterCodecs.Transform</see>.</example>
      <objectivec>
        <pre>typedef enum LTCodecsTransformMarkerAction LTCodecsTransformMarkerAction;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsTransformMarkerAction</pre>
      </java>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTransformMarkerAction.Default">
      <summary>
            Default.  Pass to LEADTOOLS for normal processing.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTransformMarkerAction.Ignore">
      <summary>
            Ignore this marker.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsTransformMarkerAction.Abort">
      <summary>
            Abort the process.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsTransformMarkerCallback">
      <summary>Handles the processing of every JPEG marker present in the file transformed by <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)">RasterCodecs.Transform</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <returns>
        <para>
                    A <see cref="T:Leadtools.Codecs.CodecsTransformMarkerAction" /> enumeration member that
                    determines the action taken by the <see cref="T:Leadtools.Codecs.RasterCodecs" /> after the
                    callback is called. Possible values are:
                </para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsTransformMarkerAction">CodecsTransformMarkerAction.Default</see>
            </term>
            <description>Successful. The default processing for this marker can be
                            performed</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsTransformMarkerAction">CodecsTransformMarkerAction.Ignore</see>
            </term>
            <description>Successful. Do not process this marker and do not write it
                            to the file</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsTransformMarkerAction">CodecsTransformMarkerAction.Abort</see>
            </term>
            <description>Abort the process and do not transform anymore
                            markers</description>
          </item>
        </list>
      </returns>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)">RasterCodecs.Transform</see>.</example>
      <param name="id">ID of the JPEG marker. The JPEG markers are uniquely identified by a byte value. Possible values are
            1 to 254. (0 and 255 are not allowed.)</param>
      <param name="buffer">A pointer to the memory buffer containing the marker data. <see cref="P:Leadtools.RasterNativeBuffer.Length">RasterNativeBuffer.Length</see>
            contains the size in bytes of the JPEG marker. The size will be less than 65535. If this value is 0, then the
            marker does not have any extra data and <paramref name="buffer" /> should be ignored.</param>
      <param name="transform">Flags that indicate the transform to be performed. These are the same flags passed to the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)">RasterCodecs.Transform</see> method.</param>
      <objectivec>
        <pre>typedef LTCodecsTransformMarkerAction (^LTCodecsTransformMarkerCallback)(int markerId, unsigned char* buffer, size_t length, LTCodecsTransformFlags transform);</pre>
      </objectivec>
    </member>
    <member name="T:Leadtools.Codecs.RasterCodecs">
      <summary>Provides support for loading and saving raster image files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>LEADTOOLS provides many options for loading and saving image files.</para>
        <para>Whether an image file is on disk or in memory, you can get information about the image before loading it. You can also
            handle file-format-specific information, such as the page number or physical resolution.</para>
        <para>You can supply the input for a load operation or the output of a save operation, and you can add processing, such as a
            paint-while-load feature.</para>
        <para>You can create as many instances of the <see cref="T:Leadtools.Codecs.RasterCodecs" /> class as desired. However, you should not pass
            a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object created in one thread to another. Instead, create another instance of <see cref="T:Leadtools.Codecs.RasterCodecs" />
            in the thread. If desired, you can copy the options from one <see cref="T:Leadtools.Codecs.RasterCodecs" /> object to another by cloning the options from the source
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> using <see cref="M:Leadtools.Codecs.CodecsOptions.Clone">CodecsOptions.Clone</see> and setting in the destination
            object <see cref="P:Leadtools.Codecs.RasterCodecs.Options" /> property.</para>
        <para>
          <strong>NOTE</strong>: At this time, there are no multipage formats that support stamps.
            </para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example loads an existing image file and re-saves it in another format.
            <!--RasterCodecs--></example>
      <objectivec>
        <pre>@interface LTRasterCodecs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class RasterCodecs</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.Codecs.RasterCodecs" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.RasterCodecs" />.</example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <java>
        <pre>public RasterCodecs(String sharedLibsFolder)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Dispose">
      <summary>Releases all resources used by this <see cref="T:Leadtools.Codecs.RasterCodecs" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <seealso cref="T:System.IDisposable" />
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.RasterCodecs" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Finalize">
      <summary>This member overrides <see cref="M:System.Object.Finalize" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <seealso cref="T:System.IDisposable" />
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.RasterCodecs" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Dispose(System.Boolean)">
      <summary>Releases all the resources used by this <see cref="T:Leadtools.Codecs.RasterCodecs" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.RasterCodecs" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.PreloadCodecs(System.Int32,System.Int32,System.String)">
      <summary>Specifies the file format codecs to be loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="fixedCodecs">Number of codecs that should stay loaded in memory at all times.</param>
      <param name="cachedCodecs">Number of codecs that should be loaded, but can be unloaded later to make room for other
            codecs.</param>
      <param name="codecs">A <see cref="T:System.String" /> containing the codecs which should be loaded.</param>
      <remarks>
        <para>If <paramref name="codecs" /> is empty, all file codecs LEADTOOLS can find will be loaded and LEADTOOLS will determine the
            order in which the files will be used.</para>
        <para>
          <paramref name="codecs" /> is in the form <c>xyz, yuv ...</c> where <c>Xyz</c> are the 3 letters describing the file
            codec as in <c>Leadtools.Codecs.Xyz.dll</c>. For instance, if <paramref name="codecs" /> is <c>BMP,TIF,CMP</c> then the
            following codecs will be loaded in the following order:</para>
        <para>
          <list type="number">
            <item>
              <description>Leadtools.Codecs.Bmp.dll</description>
            </item>
            <item>
              <description>Leadtools.Codecs.Tif.dll</description>
            </item>
            <item>
              <description>Leadtools.Codecs.Cmp.dll</description>
            </item>
          </list>
        </para>
        <para>The first <paramref name="fixedCodecs" /> will stay in memory at all times, then the next <paramref name="cachedCodecs" />
            will be loaded.  However, if other codecs will be needed, the cached codecs might be unloaded to make room for the new
            DLLs.</para>
        <para>It is recommended that the most commonly used DLLs be loaded as fixed to minimize the time required to load/unload
            file codecs. Also, some DLLs may require additional DLLs (like the <c>Leadtools.Pdf.dll</c> or
            <c>Leadtools.Codecs.Tif.dll</c>) so the exact number of DLLs loaded is not necessarily equal
            <c>fixedCodecs + cachedCodecs.</c></para>
        <para>Before calling this method, you can get the default preload codecs list using <see cref="P:Leadtools.Codecs.RasterCodecs.PreloadCodecsList" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingFileFilters">Loading File Codecs</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example preloads the j2k filter and ignores the cmp filter.
            <!--RasterCodecs.PreloadCodecs--></example>
      <java>
        <pre>public void preloadCodecs(int fixedCodecs, int cachedCodecs, String codecs)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.IgnoreCodecs(System.String)">
      <summary>Specifies which file codecs LEADTOOLS should NEVER load, even if present. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="codecs">A <see cref="T:System.String" /> containing which codecs should be ignored and therefore not loaded.
            Has the same format as in <see cref="M:Leadtools.Codecs.RasterCodecs.PreloadCodecs(System.Int32,System.Int32,System.String)" />.</param>
      <remarks>
        <para>Use this method if you never want to load a particular file codec(s).  This is useful for instance if you never load
            AVI files and you want to ignore the AVI codec since this codec on its own loads all the DLLs required for
            Video for Windows (there are about 10 of them).</para>
        <para>The files specified in <see cref="M:Leadtools.Codecs.RasterCodecs.PreloadCodecs(System.Int32,System.Int32,System.String)" /> take priority over the files specified in
            <see cref="M:Leadtools.Codecs.RasterCodecs.IgnoreCodecs(System.String)" />.  This means that if the codec is present in <paramref name="codecs" /> for both methods, then
            the codec will be loaded and will not be ignored.</para>
        <para>Before calling this method, you can get the default ignore codecs list using <see cref="P:Leadtools.Codecs.RasterCodecs.IgnoreCodecsList" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingFileFilters">Loading File Codecs</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.PreloadCodecs(System.Int32,System.Int32,System.String)" />.</example>
      <java>
        <pre>public void ignoreCodecs(String codecs)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)">
      <summary>Gets information about the specified codec. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="codecName">The name of the codec to query. The codec name is usually a string containing 3 characters. The
            codec name is not case sensitive.</param>
      <returns>A <see cref="T:Leadtools.Codecs.CodecsCodecInformation" /> object containing Information about the codec.</returns>
      <noremarks />
      <example>
            This example gets and then updates information about the PTOCA (PTK) filter.
            <!--RasterCodecs.GetCodecInformation--></example>
      <java>
        <pre>public CodecsCodecInformation getCodecInformation(String codecName)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SetCodecInformation(Leadtools.Codecs.CodecsCodecInformation)">
      <summary>Sets information about the specified codec. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="codecInfo">The information to be updated.</param>
      <remarks>
        <para>Use this to modify the default handling of the codecs. For example, you can use this to change the default file
            extension list for a certain codec.</para>
        <para>You can also use this to check for a certain file format only for files whose extension matches the default
            extension list.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)" />.</example>
      <java>
        <pre>public void setCodecInformation(CodecsCodecInformation codecInfo)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetCodecsInformation">
      <summary>Gets the information for all the codecs. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <returns>An array of <see cref="T:Leadtools.Codecs.CodecsCodecInformation" /> containing information for all the codecs.</returns>
      <remarks>
        <para>Use <see cref="M:Leadtools.Codecs.RasterCodecs.SetCodecsInformation(Leadtools.Codecs.CodecsCodecInformation[])" /> to set information for all the codecs.</para>
        <para>Use <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)" /> to get information for a particular codec.</para>
        <para>Use <see cref="M:Leadtools.Codecs.RasterCodecs.SetCodecInformation(Leadtools.Codecs.CodecsCodecInformation)" /> to set information for a particular codec.</para>
      </remarks>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)" />.</example>
      <java>
        <pre>public CodecsCodecInformation[] getCodecsInformation()</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SetCodecsInformation(Leadtools.Codecs.CodecsCodecInformation[])">
      <summary>Sets the information for all the codecs. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="information">An array of <see cref="T:Leadtools.Codecs.CodecsCodecInformation" /> containing information for all the
            codecs.</param>
      <remarks>
        <para>Use <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecsInformation" /> to get information for all the codecs.</para>
        <para>Use <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)" /> to get information for a particular codec.</para>
        <para>Use <see cref="M:Leadtools.Codecs.RasterCodecs.SetCodecInformation(Leadtools.Codecs.CodecsCodecInformation)" /> to set information for a particular codec.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)" />.</example>
      <java>
        <pre>public void setCodecsInformation(CodecsCodecInformation[] information)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">
      <summary>Starts file I/O redirection. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>LEADTOOLS I/O redirection allows you to replace the default input/output methods for opening, reading, writing,
            seeking, and closing files.</para>
        <para>For example, you can redirect all the library I/O methods to your own I/O methods to load/save images from your
            own streams.</para>
        <para>Once you call <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" />, all subsequent file I/O operation will fire the following
            events:</para>
        <list type="table">
          <listheader>
            <term>Event</term>
            <description>Operation</description>
          </listheader>
          <item>
            <term>
              <see cref="E:Leadtools.Codecs.RasterCodecs.RedirectOpen_EV">Leadtools.Codecs.RasterCodecs.RedirectOpen</see>
            </term>
            <description>When the toolkit is trying to open a file</description>
          </item>
          <item>
            <term>
              <see cref="E:Leadtools.Codecs.RasterCodecs.RedirectRead_EV">Leadtools.Codecs.RasterCodecs.RedirectRead</see>
            </term>
            <description>When the toolkit is trying to reading from a file</description>
          </item>
          <item>
            <term>
              <see cref="E:Leadtools.Codecs.RasterCodecs.RedirectWrite_EV">Leadtools.Codecs.RasterCodecs.RedirectWrite</see>
            </term>
            <description>When the toolkit is trying to writing to a file</description>
          </item>
          <item>
            <term>
              <see cref="E:Leadtools.Codecs.RasterCodecs.RedirectSeek_EV">Leadtools.Codecs.RasterCodecs.RedirectSeek</see>
            </term>
            <description>When the toolkit is trying to seeking into a file</description>
          </item>addLoadInformationListener
              <item><term><see cref="E:Leadtools.Codecs.RasterCodecs.RedirectClose_EV">Leadtools.Codecs.RasterCodecs.RedirectClose</see></term><description>When the toolkit is trying to closing a file</description></item></list>
        <para>Call <see cref="M:Leadtools.Codecs.RasterCodecs.StopRedirecting" /> to reset the I/O methods back to the defaults.</para>
      </remarks>
      <example>
            This example demonstrates overriding the default IO routines.
            <!--RasterCodecs.StartRedirecting--></example>
      <java>
        <pre>public void startRedirecting()</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StopRedirecting">
      <summary>Stops file I/O redirection and resets the I/O methods back to their defaults. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>LEADTOOLS I/O redirection allows you to replace the default input/output methods for opening, reading, writing,
            seeking, and closing files.</para>
        <para>For example, you can redirect all the library I/O methods to your own I/O methods to load/save images from your
            own streams</para>.
            <para>Call <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" /> to enable I/O redirection and <see cref="M:Leadtools.Codecs.RasterCodecs.StopRedirecting" /> to reset it back
            to the defaults.</para></remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" />.</example>
      <java>
        <pre>public void stopRedirecting()</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">
      <summary>Gets the image information from a disk file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">
        <see cref="T:System.String" /> containing the input file name to query.</param>
      <param name="totalPages">true to query the file for total number of pages; false, otherwise.</param>
      <returns>A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object that contains the information about the specified image.</returns>
      <remarks>
        <para>Specifying true for <paramref name="totalPages" /> can cause the process to be slow for files with large number of
            pages.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>
        <!--RasterCodecs.GetInformationString-->
      </example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean,System.Int32)">
      <summary>Gets the specific image page information from a disk file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">
        <see cref="T:System.String" /> containing the input file name to query.</param>
      <param name="totalPages">true to query the file for total number of pages; false, otherwise.</param>
      <param name="pageNumber">Page number in the file to query.</param>
      <returns>A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object that contains the information about the specified image.</returns>
      <remarks>
        <para>Specifying true for <paramref name="totalPages" /> can cause the process to be slow for files with large number of
            pages.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.IO.Stream,System.Boolean)">
      <summary>Gets the image information from a stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> containing the input image data.</param>
      <param name="totalPages">true to query the file for total number of pages; false, otherwise.</param>
      <returns>A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object that contains the information about the specified image.</returns>
      <remarks>
        <para>Specifying true for <paramref name="totalPages" /> can cause the process to be slow for files with large number of
            pages.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.GetInformationStream-->
      </example>
      <objectivec>
        <pre>
-(LTCodecsImageInfo*)getInformation:(LTLeadStream*)stream
                         totalPages:(BOOL)totalPages
                              error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public CodecsImageInfo getInformation(ILeadStream stream, boolean totalPages)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.IO.Stream,System.Boolean,System.Int32)">
      <summary>Gets the specific image page information from a stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> containing the input image data.</param>
      <param name="totalPages">true to query the file for total number of pages; false, otherwise.</param>
      <param name="pageNumber">Page number in the file to query.</param>
      <returns>A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object that contains the information about the specified image.</returns>
      <remarks>
        <para>Specifying true for <paramref name="totalPages" /> can cause the process to be slow for files with large number of
            pages.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.IO.Stream,System.Boolean)" />.</example>
      <objectivec>
        <pre>
-(LTCodecsImageInfo*)getInformation:(LTLeadStream*)stream
                         totalPages:(BOOL)totalPages 
                         pageNumber:(int)pageNumber 
                              error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public CodecsImageInfo getInformation(ILeadStream stream, boolean totalPages, int pageNumber)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.Uri,System.Boolean)">
      <summary>Gets the specific image page information from the specified <see cref="T:System.Uri" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="uri">The <see cref="T:System.Uri" /> containing the input image data.</param>
      <param name="totalPages">true to query the URI for total number of pages; false, otherwise.</param>
      <returns>A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object that contains the information about the specified image.</returns>
      <remarks>
        <para>Specifying true for <paramref name="totalPages" /> can cause the process to be slow for files with large number of
            pages.</para>
            LEADTOOLS supports the following URI schemes:
            <list type="table"><listheader><term>Scheme</term><description>Description</description></listheader><item><term><see cref="F:System.Uri.UriSchemeFile" /></term><description>Specifies that the URI is a disk file in local machine or universal naming convention (UNC) path.</description></item><item><term><see cref="F:System.Uri.UriSchemeHttp" /></term><description>Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP).</description></item><item><term><see cref="F:System.Uri.UriSchemeHttps" /></term><description>Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS).</description></item><item><term><see cref="F:System.Uri.UriSchemeFtp" /></term><description>Specifies that the URI is accessed through the File Transfer Protocol (FTP).</description></item></list><para>If <paramref name="uri" /> points to a resource in a <see cref="F:System.Uri.UriSchemeHttp" />, <see cref="F:System.Uri.UriSchemeHttps" /> or
            <see cref="F:System.Uri.UriSchemeFtp" />, then this <see cref="T:Leadtools.Codecs.RasterCodecs" /> will attempt to download image data in an iterative fashion by
            creating a temporary buffer. The size of this buffer can be determined and changed by setting up the
            <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationBufferSize" /> prior to calling this method.</para><para>For authenticity and proxy settings, refer to <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> and <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" />.</para></remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.GetInformationUri-->
      </example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.Uri,System.Boolean,System.Int32)">
      <summary>Gets the specific image page information from the specified <see cref="T:System.Uri" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="uri">The <see cref="T:System.Uri" /> containing the input image data.</param>
      <param name="totalPages">true to query the URI for total number of pages; false, otherwise.</param>
      <param name="pageNumber">Page number in the URI to query.</param>
      <returns>A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object that contains the information about the specified image.</returns>
      <remarks>
        <para>Specifying true for <paramref name="totalPages" /> can cause the process to be slow for files with large number of
            pages.</para>
            LEADTOOLS supports the following URI schemes:
            <list type="table"><listheader><term>Scheme</term><description>Description</description></listheader><item><term><see cref="F:System.Uri.UriSchemeFile" /></term><description>Specifies that the URI is a disk file in local machine or universal naming convention (UNC) path.</description></item><item><term><see cref="F:System.Uri.UriSchemeHttp" /></term><description>Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP).</description></item><item><term><see cref="F:System.Uri.UriSchemeHttps" /></term><description>Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS).</description></item><item><term><see cref="F:System.Uri.UriSchemeFtp" /></term><description>Specifies that the URI is accessed through the File Transfer Protocol (FTP).</description></item></list><para>If <paramref name="uri" /> points to a resource in a <see cref="F:System.Uri.UriSchemeHttp" />, <see cref="F:System.Uri.UriSchemeHttps" /> or
            <see cref="F:System.Uri.UriSchemeFtp" />, then this <see cref="T:Leadtools.Codecs.RasterCodecs" /> will attempt to download image data in an iterative fashion by
            creating a temporary buffer. The size of this buffer can be determined and changed by setting up the
            <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationBufferSize" /> prior to calling this method.</para><para>For authenticity and proxy settings, refer to <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> and <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" />.</para></remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.Uri,System.Boolean)" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.String)">
      <summary>Loads the specified image file using default options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to load.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <keywords>Multipage File Formats|Load|Loading|Loading Images|Silverlight</keywords>
      <remarks>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>This method will load all the pages in a multipage file. The resulting image will have the same bits/pixel and color
            order value of the image as it was stored in the file.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load all the pages from a single multipage file
            <!--RasterCodecs.Load(string)--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.IO.Stream)">
      <summary>Loads the specified image stream using default options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>The stream can point to any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>This method will load all the pages in a multipage file. The resulting image will have the same bits/pixel and color
            order value of the image as it was stored in the stream.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load all the pages from a stream that contains a single multipage file
            <!--RasterCodecs.Load(Stream)--></example>
      <objectivec>
        <pre>
-(LTRasterImage*)load:(LTLeadStream*)stream
                error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public RasterImage load(ILeadStream stream)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">
      <summary>Loads the specified image file using specific options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to load.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will show how to load an image using different bits/pixel and color order than saved on disk.
            Also, it will show how to load a single page or a group of pages from a multipage file
            <!--RasterCodecs.Load(string, int, CodecsLoadByteOrder, int, int)--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.IO.Stream,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">
      <summary>Loads the specified image stream using specific options <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the stream.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will show how to load an image using different bits/pixel and color order than that saved on disk.
            Also, it will show how to load a single page or a group of pages from a multipage file
            All loading operation uses a stream instead of a file on disk
            <!--RasterCodecs.Load(Stream, int, CodecsLoadByteOrder, int, int)--></example>
      <objectivec>
        <pre>
-(LTRasterImage*)load:(LTLeadStream*)stream
         bitsPerPixel:(unsigned int)bitsPerPixel
                order:(LTCodecsLoadByteOrder)order
            firstPage:(unsigned int)firstPage
             lastPage:(int)lastPage
                error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public RasterImage load(ILeadStream stream, int bitsPerPixel, CodecsLoadByteOrder order, int firstPage, int lastPage)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.IO.Stream,System.Int64,System.Int64)">
      <summary>Loads an image file, letting you specify the location of the image data within the stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <param name="offset">Offset from the beginning of the stream at which loading should start.</param>
      <param name="count">Total size of the image file data.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <keywords>Multipage File Formats</keywords>
      <remarks>
        <para>This method can be used to load an image file that is embedded in another stream.</para>
        <para>The location of the image is specified as shown in the following simple illustration:</para>
        <para>
          <img src="LoadOffset.gif" />
        </para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image. For these images,
            the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>This method will load all the pages in a multipage file. The resulting image will have the same bits/pixel and color
            order value of the image as it was stored in the file.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load an image located in an offset into a stream
            <!--RasterCodecs.Load(Stream, long, long)--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.IO.Stream,System.Int64,System.Int64,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">
      <summary>Loads an image file, letting you specify the location of the image data within the stream and the options to use when loading. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <param name="offset">Offset from the beginning of the stream at which loading should start.</param>
      <param name="count">Total size of the image file data.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the stream.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <keywords>Multipage File Formats</keywords>
      <remarks>
        <para>This method can be used to load an image file that is embedded in another stream.</para>
        <para>The location of the image is specified as shown in the following simple illustration:</para>
        <para>
          <img src="LoadOffset.gif" />
        </para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image. For these images,
            the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>This method will load all the pages in a multipage file. The resulting image will have the same bits/pixel and color
            order value of the image as it was stored in the file.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load a multipage image located in an offset into a stream
            <!--RasterCodecs.Load(Stream, long, long, int, CodecsLoadByteOrder, int, int)--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.String,Leadtools.LeadRect)">
      <summary>Loads the specified rectangle from the specified image file using default options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to load.</param>
      <param name="tile">A <see cref="T:Leadtools.LeadRect" /> describing the tile/area of the image to load.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <remarks>
        <para>This method loads a section of an image file (any format). The section begins is defined by <paramref name="tile" /> rectangle.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will create a rectangle area from an image on disk.
            <!--RasterCodecs.Load(string, LeadRect)--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.IO.Stream,Leadtools.LeadRect)">
      <summary>Loads the specified rectangle from the specified image stream using default options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <param name="tile">A <see cref="T:Leadtools.LeadRect" /> describing the tile/area of the image to load.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>This method loads a section of an image stream (any format). The section begins is defined by <paramref name="tile" /> rectangle.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will create a rectangle area from a stream containing image data.
            <!--RasterCodecs.Load(Stream, LeadRect)--></example>
      <java>
        <pre>public RasterImage load(ILeadStream stream, LeadRect tile)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">
      <summary>Loads the specified rectangle from the specified image file using the specified options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to load.</param>
      <param name="tile">A <see cref="T:Leadtools.LeadRect" /> describing the tile/area of the image to load.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>This method loads a section of an image file (any format). The section begins is defined by <paramref name="tile" /> rectangle.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load the middle portion of the second page of a multipage file as 1 bits/pixel
            <!--RasterCodecs.Load(string, LeadRect, int, CodecsLoadByteOrder, int, int)--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.IO.Stream,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">
      <summary>Loads the specified rectangle from the specified image stream using the specified options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <param name="tile">A <see cref="T:Leadtools.LeadRect" /> describing the tile/area of the image to load.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>This method loads a section of an image file (any format). The section begins is defined by <paramref name="tile" /> rectangle.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load the middle portion of the second page from a stream that contains a multipage file as 1 bits/pixel
            <!--RasterCodecs.Load(Stream, LeadRect, int, CodecsLoadByteOrder, int, int)--></example>
      <objectivec>
        <pre>
-(LTRasterImage*)load:(LTLeadStream*)stream
                 tile:(LeadRect)tile
         bitsPerPixel:(unsigned int)bitsPerPixel 
                order:(LTCodecsLoadByteOrder)order 
            firstPage:(unsigned int)firstPage
             lastPage:(int)lastPage
                error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public RasterImage load(ILeadStream stream, LeadRect tile, int bitsPerPixel, CodecsLoadByteOrder order, int firstPage, int lastPage)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.String,System.Int32,System.Int32,System.Int32,Leadtools.RasterSizeFlags,Leadtools.Codecs.CodecsLoadByteOrder)">
      <summary>Loads an image file to the desired width, height, and bits per pixel, resizing the image as it loads. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to load.</param>
      <param name="width">New width of the image in pixels.</param>
      <param name="height">New height of the image in pixels.</param>
      <param name="flags">
        <para>Flag that indicates the type of resizing to use. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.None</term>
            <description>Normal resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Resample</term>
            <description>Linear interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Bicubic</term>
            <description>Bicubic interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.FavorBlack</term>
            <description>Not supported</description>
          </item>
        </list>
      </param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <remarks>
        <para>This method resizes a file to the desired width, height, and bits per pixel as it loads. Note that the original file is
            not completely loaded into memory. This method is ideal for sampling large images (i.e. generating a thumbnail) without the
            memory overhead of loading the large file itself.</para>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load an image from file in a specified size.
            <!--RasterCodecs.Load(string, int, int, int, RasterSizeFlags, CodecsLoadByteOrder)--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.String,System.Int32,System.Int32,System.Int32,Leadtools.RasterSizeFlags,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">
      <summary>Loads an image file to the desired width, height, and bits per pixel, resizing as it loads. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to load.</param>
      <param name="width">New width of the image in pixels.</param>
      <param name="height">New height of the image in pixels.</param>
      <param name="flags">
        <para>Flag that indicates the type of resizing to use. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.None</term>
            <description>Normal resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Resample</term>
            <description>Linear interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Bicubic</term>
            <description>Bicubic interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.FavorBlack</term>
            <description>Not supported</description>
          </item>
        </list>
      </param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>This method resizes a file as it loads, to the desired width, height, and bits per pixel. Note that the original file is
            not completely loaded into memory. This method is ideal for sampling large images (i.e. generating a thumbnail) without the
            memory overhead of loading the large file itself.</para>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load the last page of an image from file in a specified size.
            <!--RasterCodecs.Load(string, int, int, int, RasterSizeFlags, CodecsLoadByteOrder, int, int)--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.IO.Stream,System.Int32,System.Int32,System.Int32,Leadtools.RasterSizeFlags,Leadtools.Codecs.CodecsLoadByteOrder)">
      <summary>Loads an image file to the desired width, height, and bits per pixel, resizing the image as it loads. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <param name="width">New width of the image in pixels.</param>
      <param name="height">New height of the image in pixels.</param>
      <param name="flags">
        <para>Flag that indicates the type of resizing to use. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.None</term>
            <description>Normal resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Resample</term>
            <description>Linear interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Bicubic</term>
            <description>Bicubic interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.FavorBlack</term>
            <description>Not supported</description>
          </item>
        </list>
      </param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <remarks>
        <para>This method resizes a file to the desired width, height, and bits per pixel as it loads. Note that the original file is
            not completely loaded into memory. This method is ideal for sampling large images (i.e. generating a thumbnail) without the
            memory overhead of loading the large file itself.</para>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load an image from file in a specified size.
            <!--RasterCodecs.Load(string, int, int, int, RasterSizeFlags, CodecsLoadByteOrder)--></example>
      <java>
        <pre>public RasterImage load(ILeadStream stream, int width, int height, int bitsPerPixel, RasterSizeFlags flags, CodecsLoadByteOrder order)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.IO.Stream,System.Int32,System.Int32,System.Int32,Leadtools.RasterSizeFlags,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">
      <summary>Loads an image file to the desired width, height, and bits per pixel, resizing as it loads. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <param name="width">New width of the image in pixels.</param>
      <param name="height">New height of the image in pixels.</param>
      <param name="flags">
        <para>Flag that indicates the type of resizing to use. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.None</term>
            <description>Normal resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Resample</term>
            <description>Linear interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Bicubic</term>
            <description>Bicubic interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.FavorBlack</term>
            <description>Not supported</description>
          </item>
        </list>
      </param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>This method resizes a file as it loads, to the desired width, height, and bits per pixel. Note that the original file is
            not completely loaded into memory. This method is ideal for sampling large images (i.e. generating a thumbnail) without the
            memory overhead of loading the large file itself.</para>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load the last page of an image from file in a specified size.
            <!--RasterCodecs.Load(string, int, int, int, RasterSizeFlags, CodecsLoadByteOrder, int, int)--></example>
      <objectivec>
        <pre>
-(LTRasterImage*)load:(LTLeadStream*)stream
                width:(unsigned int)width
               height:(unsigned int)height 
         bitsPerPixel:(unsigned int)bitsPerPixel 
                flags:(LTRasterSizeFlags)flags
                order:(LTCodecsLoadByteOrder)order
            firstPage:(unsigned int)firstPage 
             lastPage:(int)lastPage
                error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public RasterImage load(ILeadStream stream, int width, int height, int bitsPerPixel, RasterSizeFlags flags, CodecsLoadByteOrder order, int firstPage, int lastPage)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri)">
      <summary>Loads the specified image URL using default options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="uri">The <see cref="T:System.Uri" /> containing the input image data.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <remarks>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>This method will load all the pages in a multipage file. The resulting image will have the same bits/pixel and color
            order value of the image as it was stored in the file.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
            LEADTOOLS supports the following URI schemes:
            <list type="table"><listheader><term>Scheme</term><description>Description</description></listheader><item><term><see cref="F:System.Uri.UriSchemeFile" /></term><description>Specifies that the URI is a disk file in local machine or universal naming convention (UNC) path.</description></item><item><term><see cref="F:System.Uri.UriSchemeHttp" /></term><description>Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP).</description></item><item><term><see cref="F:System.Uri.UriSchemeHttps" /></term><description>Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS).</description></item><item><term><see cref="F:System.Uri.UriSchemeFtp" /></term><description>Specifies that the URI is accessed through the File Transfer Protocol (FTP).</description></item></list><para>If <paramref name="uri" /> points to a resource in a <see cref="F:System.Uri.UriSchemeHttp" />, <see cref="F:System.Uri.UriSchemeHttps" /> or
            <see cref="F:System.Uri.UriSchemeFtp" />, then this <see cref="T:Leadtools.Codecs.RasterCodecs" /> will attempt to download image data in an iterative fashion by
            creating a temporary buffer. The size of this buffer can be determined and changed by setting up the
            <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationBufferSize" /> prior to calling this method.</para><para>For authenticity and proxy settings, refer to <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> and <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" />.</para></remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load an image from a uri
            <!--RasterCodecs.Load(Uri)--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">
      <summary>Loads the specified image URL using specified options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="uri">The <see cref="T:System.Uri" /> containing the input image data.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <keywords>Multipage File Formats</keywords>
      <remarks>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>This method will load all the pages in a multipage file. The resulting image will have the same bits/pixel and color
            order value of the image as it was stored in the file.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
            LEADTOOLS supports the following URI schemes:
            <list type="table"><listheader><term>Scheme</term><description>Description</description></listheader><item><term><see cref="F:System.Uri.UriSchemeFile" /></term><description>Specifies that the URI is a disk file in local machine or universal naming convention (UNC) path.</description></item><item><term><see cref="F:System.Uri.UriSchemeHttp" /></term><description>Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP).</description></item><item><term><see cref="F:System.Uri.UriSchemeHttps" /></term><description>Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS).</description></item><item><term><see cref="F:System.Uri.UriSchemeFtp" /></term><description>Specifies that the URI is accessed through the File Transfer Protocol (FTP).</description></item></list><para>If <paramref name="uri" /> points to a resource in a <see cref="F:System.Uri.UriSchemeHttp" />, <see cref="F:System.Uri.UriSchemeHttps" /> or
            <see cref="F:System.Uri.UriSchemeFtp" />, then this <see cref="T:Leadtools.Codecs.RasterCodecs" /> will attempt to download image data in an iterative fashion by
            creating a temporary buffer. The size of this buffer can be determined and changed by setting up the
            <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationBufferSize" /> prior to calling this method.</para><para>For authenticity and proxy settings, refer to <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> and <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" />.</para></remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load an image from a uri with different bits per pixel
            <!--RasterCodecs.Load(Uri, int, CodecsLoadByteOrder, int, int)--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">
      <summary>Saves a <see cref="T:Leadtools.RasterImage" /> to a file in any of the supported compressed or uncompressed formats. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <keywords>Save|Saving images|Saving|Silverlight</keywords>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that holds the image data.</param>
      <param name="fileName">A <see cref="T:System.String" /> containing the output file name.</param>
      <param name="format">The output file format. For valid values,
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</param>
      <param name="bitsPerPixel">Resulting file's pixel depth. Note that not all bits per pixel are
            available to all file formats.  For valid values, refer to 
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>. If
            <paramref name="bitsPerPixel" /> is 0, the image will be stored using the closet bits/pixel value supported by that format.
            For example, if a file format supports 1, 4, and 24 bits/pixel, and
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 5, the file will be stored as 24 bit. Likewise, if
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 2, the file will be stored as 4 bit.</param>
      <remarks>
        <para>If the output file format supports multipage and then all the pages in <paramref name="image" /> will be saved to the
            file.</para>
        <para>If the image is 8 bits per pixel or greater, use the LEAD CMP format or one of the JPEG (JTIF or JFIF) formats to
            save disk space.</para>
        <para>If the image is 1-bit per pixel, use the LEAD 1-bit format or a CCITT Group 3 or 4 format to save disk space.</para>
        <para>If the image has a region, the region stored in the image will be saved, if the image is saved as one of the TIFF
            file formats. For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>. 
            Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled. Images can be
            window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevel</see> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see>, by using
            the <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> or by loading an image from a file format that supports Window Leveling. If a
            window-leveled image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsSaveOptions" /> class to set up other save options parameters before calling this
            method.</para>
        <para>Use to the <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">Leadtools.Codecs.RasterCodecs.SaveImage</see> event to provide progress feedback or to set or modify the saved image data.</para>
        <para>This method supports signed data images, but only DICOM and TIFF formats support signed data. This method will throw
            an exception if you attempt to save a signed image to a format other than DICOM or TIFF.</para>
        <para>In LEADTOOLS version 17 and up, when saving a colored image (such as a 24-bits per pixel image) to bitonal (1-bit per pixel), the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will not use any dithering when converting the image data. This is done because dithering is not the
            recommended when converting colored images containing text for document processing such as OCR and Barcode. The resulting text will be fuzzy and
            hard for a recognition engine to process. To save a colored image as bitonal with Floyd-Stein dithering (the behavior of LEADTOOLS 16.5 and earlier)
            use <see cref="P:Leadtools.Codecs.CodecsSaveOptions.UseImageDitheringMethod">CodecsSaveOptions.UseImageDitheringMethod</see> along with
            <see cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod</see> as illustrated below:</para>
        <para>
          <pre>
            <code>
            // 'codecs' is the RasterCodecs to use when saving
            // 'image' is a colored RasterImage object
            // Setup FloydStein dithering:
            codecs.Options.Save.UseImageDitheringMethod = true;
            image.DitheringMethod = RasterDitheringMethod.FloydStein;
            // Save the image as 1-bpp with auto-dithering:
            codecs.Save(image, fileName, RasterImageFormat.Tif, 1);
            </code>
          </pre>
        </para>
        <para>For information about quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load a 24 bits/pixel CMP image and save it as 1 bits/pixel TIF image.
            <!--RasterCodecs.Save(RasterImage, string, RasterImageFormat, int)--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.IO.Stream,Leadtools.RasterImageFormat,System.Int32)">
      <summary>Saves a <see cref="T:Leadtools.RasterImage" /> to a stream in any of the supported compressed or uncompressed formats. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that holds the image data.</param>
      <param name="stream">A <see cref="T:System.IO.Stream" /> where the image data will be saved.</param>
      <param name="format">The output file format. For valid values,
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</param>
      <param name="bitsPerPixel">Resulting file's pixel depth. Note that not all bits per pixel are
            available to all file formats.  For valid values, refer to 
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>. If
            <paramref name="bitsPerPixel" /> is 0, the image will be stored using the closet bits/pixel value supported by that format.
            For example, if a file format supports 1, 4, and 24 bits/pixel, and
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 5, the file will be stored as 24 bit. Likewise, if
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 2, the file will be stored as 4 bit.</param>
      <remarks>
        <para>If the output file format supports multipage and then all the pages in <paramref name="image" /> will be saved to the
            file.</para>
        <para>If the image is 8 bits per pixel or greater, use the LEAD CMP format or one of the JPEG (JTIF or JFIF) formats to
            save disk space.</para>
        <para>If the image is 1-bit per pixel, use the LEAD 1-bit format or a CCITT Group 3 or 4 format to save disk space.</para>
        <para>If the image has a region, the region stored in the image will be saved, if the image is saved as one of the TIFF
            file formats. For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.
            Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled. Images can be
            window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevel</see> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see>, by using
            the <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> or by loading an image from a file format that supports Window Leveling. If a
            window-leveled image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsSaveOptions" /> class to set up other save options parameters before calling this
            method.</para>
        <para>Use to the <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">Leadtools.Codecs.RasterCodecs.SaveImage</see> event to provide progress feedback or to set or modify the saved image data.</para>
        <para>This method supports signed data images, but only DICOM and TIFF formats support signed data. This method will throw
            an exception if you attempt to save a signed image to a format other than DICOM or TIFF.</para>
        <para>In LEADTOOLS version 17 and up, when saving a colored image (such as a 24-bits per pixel image) to bitonal (1-bit per pixel), the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will not use any dithering when converting the image data. This is done because dithering is not the
            recommended when converting colored images containing text for document processing such as OCR and Barcode. The resulting text will be fuzzy and
            hard for a recognition engine to process. To save a colored image as bitonal with Floyd-Stein dithering (the behavior of LEADTOOLS 16.5 and earlier)
            use <see cref="P:Leadtools.Codecs.CodecsSaveOptions.UseImageDitheringMethod">CodecsSaveOptions.UseImageDitheringMethod</see> along with
            <see cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod</see> as illustrated below:</para>
        <para>
          <pre>
            <code>
            // 'codecs' is the RasterCodecs to use when saving
            // 'image' is a colored RasterImage object
            // Setup FloydStein dithering:
            codecs.Options.Save.UseImageDitheringMethod = true;
            image.DitheringMethod = RasterDitheringMethod.FloydStein;
            // Save the image as 1-bpp with auto-dithering:
            codecs.Save(image, fileName, RasterImageFormat.Tif, 1);
            </code>
          </pre>
        </para>
        <para>For information about quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load a 24 bits/pixel CMP image and save it to a stream as 1 bits/pixel TIF image.
            <!--RasterCodecs.Save(RasterImage, Stream, RasterImageFormat, int)--></example>
      <objectivec>
        <pre>
-(BOOL)  save:(LTRasterImage*)image 
       stream:(LTLeadStream*)stream
       format:(LTRasterImageFormat)format 
 bitsPerPixel:(unsigned int)bitsPerPixel
        error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public void save(RasterImage image, ILeadStream stream, RasterImageFormat format, int bitsPerPixel)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">
      <summary>Saves one or more pages of a <see cref="T:Leadtools.RasterImage" /> to a file in any of the supported compressed or uncompressed formats. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that holds the image data.</param>
      <param name="fileName">A <see cref="T:System.String" /> containing the output file name.</param>
      <param name="format">The output file format. For valid values,
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</param>
      <param name="bitsPerPixel">Resulting file's pixel depth. Note that not all bits per pixel are
            available to all file formats.  For valid values, refer to 
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>. If
            <paramref name="bitsPerPixel" /> is 0, the image will be stored using the closet bits/pixel value supported by that format.
            For example, if a file format supports 1, 4, and 24 bits/pixel, and
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 5, the file will be stored as 24 bit. Likewise, if
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 2, the file will be stored as 4 bit.</param>
      <param name="firstPage">1-based index of the first page in <paramref name="image" /> to save.</param>
      <param name="lastPage">1-based index of the last page in <paramref name="image" /> to save. Pass -1 to save from
            <paramref name="firstPage" /> to the last page in <paramref name="image" />.</param>
      <param name="firstSavePageNumber">1-based index of the first output page. If the output file already exists, then this
            parameter lets you control which pages to overwrite and/or where to append the new pages.</param>
      <param name="pageMode">
        <para>Determines how to handle the page when saving to multipage formats. This can be one of the following:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Append</see>
            </term>
            <description>Append the new page(s) to the end of the file. If the file does not exist, this option will create
            the file and add the pages to it.  <paramref name="firstSavePageNumber" /> is not used.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Insert</see>
            </term>
            <description>Insert the new page(s) at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Replace</see>
            </term>
            <description>Replace the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Overwrite</see>
            </term>
            <description>Overwrite the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
        </list>
      </param>
      <remarks>
        <para>If the image is 8 bits per pixel or greater, use the LEAD CMP format or one of the JPEG (JTIF or JFIF) formats to
            save disk space.</para>
        <para>If the image is 1-bit per pixel, use the LEAD 1-bit format or a CCITT Group 3 or 4 format to save disk space.</para>
        <para>If the image has a region, the region stored in the image will be saved, if the image is saved as one of the TIFF
            file formats. For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.
            Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled. Images can be
            window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevel</see> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see>, by using
            the <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> or by loading an image from a file format that supports Window Leveling. If a
            window-leveled image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsSaveOptions" /> class to set up other save options parameters before calling this
            method.</para>
        <para>Use to the <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">Leadtools.Codecs.RasterCodecs.SaveImage</see> event to provide progress feedback or to set or modify the saved image data.</para>
        <para>This method supports signed data images, but only DICOM and TIFF formats support signed data. This method will throw
            an exception if you attempt to save a signed image to a format other than DICOM or TIFF.</para>
        <para>In LEADTOOLS version 17 and up, when saving a colored image (such as a 24-bits per pixel image) to bitonal (1-bit per pixel), the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will not use any dithering when converting the image data. This is done because dithering is not the
            recommended when converting colored images containing text for document processing such as OCR and Barcode. The resulting text will be fuzzy and
            hard for a recognition engine to process. To save a colored image as bitonal with Floyd-Stein dithering (the behavior of LEADTOOLS 16.5 and earlier)
            use <see cref="P:Leadtools.Codecs.CodecsSaveOptions.UseImageDitheringMethod">CodecsSaveOptions.UseImageDitheringMethod</see> along with
            <see cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod</see> as illustrated below:</para>
        <para>
          <pre>
            <code>
            // 'codecs' is the RasterCodecs to use when saving
            // 'image' is a colored RasterImage object
            // Setup FloydStein dithering:
            codecs.Options.Save.UseImageDitheringMethod = true;
            image.DitheringMethod = RasterDitheringMethod.FloydStein;
            // Save the image as 1-bpp with auto-dithering:
            codecs.Save(image, fileName, RasterImageFormat.Tif, 1);
            </code>
          </pre>
        </para>
        <para>For information about quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will create a multipage image and save it to a file before using the Save method to insert and replace pages directly in the file.
            <!--RasterCodecs.Save(RasterImage, string, RasterImageFormat, int, int, int, int, CodecsSavePageMode)--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.IO.Stream,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">
      <summary>Saves one or more pages of a <see cref="T:Leadtools.RasterImage" /> to a stream in any of the supported compressed or uncompressed formats. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that holds the image data.</param>
      <param name="stream">A <see cref="T:System.IO.Stream" /> where the image data will be saved.</param>
      <param name="format">The output file format. For valid values,
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</param>
      <param name="bitsPerPixel">Resulting file's pixel depth. Note that not all bits per pixel are
            available to all file formats.  For valid values, refer to 
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>. If
            <paramref name="bitsPerPixel" /> is 0, the image will be stored using the closet bits/pixel value supported by that format.
            For example, if a file format supports 1, 4, and 24 bits/pixel, and
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 5, the file will be stored as 24 bit. Likewise, if
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 2, the file will be stored as 4 bit.</param>
      <param name="firstPage">1-based index of the first page in <paramref name="image" /> to save.</param>
      <param name="lastPage">1-based index of the last page in <paramref name="image" /> to save. Pass -1 to save from
            <paramref name="firstPage" /> to the last page in <paramref name="image" />.</param>
      <param name="firstSavePageNumber">1-based index of the first output page. If the output file already exists, then this
            parameter lets you control which pages to overwrite and/or where to append the new pages.</param>
      <param name="pageMode">
        <para>Determines how to handle the page when saving to multipage formats. This can be one of the following:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Append</see>
            </term>
            <description>Append the new page(s) to the end of the file. If the file does not exist, this option will create
            the file and add the pages to it.  <paramref name="firstSavePageNumber" /> is not used.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Insert</see>
            </term>
            <description>Insert the new page(s) at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Replace</see>
            </term>
            <description>Replace the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Overwrite</see>
            </term>
            <description>Overwrite the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
        </list>
      </param>
      <remarks>
        <para>If the image is 8 bits per pixel or greater, use the LEAD CMP format or one of the JPEG (JTIF or JFIF) formats to
            save disk space.</para>
        <para>If the image is 1-bit per pixel, use the LEAD 1-bit format or a CCITT Group 3 or 4 format to save disk space.</para>
        <para>If the image has a region, the region stored in the image will be saved, if the image is saved as one of the TIFF
            file formats. 
            Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit.       /// For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled. Images can be
            window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevel</see> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see>, by using
            the <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> or by loading an image from a file format that supports Window Leveling. If a
            window-leveled image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsSaveOptions" /> class to set up other save options parameters before calling this
            method.</para>
        <para>Use to the <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">Leadtools.Codecs.RasterCodecs.SaveImage</see> event to provide progress feedback or to set or modify the saved image data.</para>
        <para>This method supports signed data images, but only DICOM and TIFF formats support signed data. This method will throw
            an exception if you attempt to save a signed image to a format other than DICOM or TIFF.</para>
        <para>In LEADTOOLS version 17 and up, when saving a colored image (such as a 24-bits per pixel image) to bitonal (1-bit per pixel), the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will not use any dithering when converting the image data. This is done because dithering is not the
            recommended when converting colored images containing text for document processing such as OCR and Barcode. The resulting text will be fuzzy and
            hard for a recognition engine to process. To save a colored image as bitonal with Floyd-Stein dithering (the behavior of LEADTOOLS 16.5 and earlier)
            use <see cref="P:Leadtools.Codecs.CodecsSaveOptions.UseImageDitheringMethod">CodecsSaveOptions.UseImageDitheringMethod</see> along with
            <see cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod</see> as illustrated below:</para>
        <para>
          <pre>
            <code>
            // 'codecs' is the RasterCodecs to use when saving
            // 'image' is a colored RasterImage object
            // Setup FloydStein dithering:
            codecs.Options.Save.UseImageDitheringMethod = true;
            image.DitheringMethod = RasterDitheringMethod.FloydStein;
            // Save the image as 1-bpp with auto-dithering:
            codecs.Save(image, fileName, RasterImageFormat.Tif, 1);
            </code>
          </pre>
        </para>
        <para>For information about quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will create a multipage image and save it to a stream before using the Save method to insert and replace pages directly in the file.
            <!--RasterCodecs.Save(RasterImage, Stream, RasterImageFormat, int, int, int, int, CodecsSavePageMode)--></example>
      <objectivec>
        <pre>
-(BOOL)        save:(LTRasterImage*)image
             stream:(LTLeadStream*)stream
             format:(LTRasterImageFormat)format 
       bitsPerPixel:(unsigned int)bitsPerPixel
          firstPage:(unsigned int)firstPage
           lastPage:(int)lastPage
firstSavePageNumber:(unsigned int)firstSavePageNumber
           pageMode:(LTCodecsSavePageMode)pageMode
              error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public void save(RasterImage image, ILeadStream stream, RasterImageFormat format, int bitsPerPixel, int firstPage, int lastPage, int firstSavePageNumber, CodecsSavePageMode pageMode)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.IO.Stream,System.Int64,Leadtools.RasterImageFormat,System.Int32)">
      <summary>Saves the specified image to a stream using an offset within to begin saving. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that holds the image data.</param>
      <param name="stream">A <see cref="T:System.IO.Stream" /> where the image data will be saved.</param>
      <param name="offset">The offset within the specified stream to embed the saved image file. For example, if you specify 5,
            then 5 bytes of other data will precede the embedded file.</param>
      <param name="format">The output file format. For valid values,
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</param>
      <param name="bitsPerPixel">Resulting file's pixel depth. Note that not all bits per pixel are
            available to all file formats.  For valid values, refer to 
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>. If
            <paramref name="bitsPerPixel" /> is 0, the image will be stored using the closet bits/pixel value supported by that format.
            For example, if a file format supports 1, 4, and 24 bits/pixel, and
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 5, the file will be stored as 24 bit. Likewise, if
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 2, the file will be stored as 4 bit.</param>
      <returns>The size of the embedded image file in bytes.</returns>
      <remarks>
        <para>You can use this method to embed an image file in another file.</para>
        <para>If the output file format supports multipage and then all the pages in <paramref name="image" /> will be saved to the
            file.</para>
        <para>If the image is 8 bits per pixel or greater, use the LEAD CMP format or one of the JPEG (JTIF or JFIF) formats to
            save disk space.</para>
        <para>If the image is 1-bit per pixel, use the LEAD 1-bit format or a CCITT Group 3 or 4 format to save disk space.</para>
        <para>If the image has a region, the region stored in the image will be saved, if the image is saved as one of the TIFF
            file formats. 
            Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit. 
            For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled. Images can be
            window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevel</see> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see>, by using
            the <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> or by loading an image from a file format that supports Window Leveling. If a
            window-leveled image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsSaveOptions" /> class to set up other save options parameters before calling this
            method.</para>
        <para>Use to the <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">Leadtools.Codecs.RasterCodecs.SaveImage</see> event to provide progress feedback or to set or modify the saved image data.</para>
        <para>This method supports signed data images, but only DICOM and TIFF formats support signed data. This method will throw
            an exception if you attempt to save a signed image to a format other than DICOM or TIFF.</para>
        <para>In LEADTOOLS version 17 and up, when saving a colored image (such as a 24-bits per pixel image) to bitonal (1-bit per pixel), the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will not use any dithering when converting the image data. This is done because dithering is not the
            recommended when converting colored images containing text for document processing such as OCR and Barcode. The resulting text will be fuzzy and
            hard for a recognition engine to process. To save a colored image as bitonal with Floyd-Stein dithering (the behavior of LEADTOOLS 16.5 and earlier)
            use <see cref="P:Leadtools.Codecs.CodecsSaveOptions.UseImageDitheringMethod">CodecsSaveOptions.UseImageDitheringMethod</see> along with
            <see cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod</see> as illustrated below:</para>
        <para>
          <pre>
            <code>
            // 'codecs' is the RasterCodecs to use when saving
            // 'image' is a colored RasterImage object
            // Setup FloydStein dithering:
            codecs.Options.Save.UseImageDitheringMethod = true;
            image.DitheringMethod = RasterDitheringMethod.FloydStein;
            // Save the image as 1-bpp with auto-dithering:
            codecs.Save(image, fileName, RasterImageFormat.Tif, 1);
            </code>
          </pre>
        </para>
        <para>For information about quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will save an image to a stream before loading it back.
            <!--RasterCodecs.Save(RasterImage, Stream, long, RasterImageFormat, int)--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.IO.Stream,System.Int64,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">
      <summary>Saves the specified image to a stream using an offset within to begin saving. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that holds the image data.</param>
      <param name="stream">A <see cref="T:System.IO.Stream" /> where the image data will be saved.</param>
      <param name="offset">The offset within the specified stream to embed the saved image file. For example, if you specify 5,
            then 5 bytes of other data will precede the embedded file.</param>
      <param name="format">The output file format. For valid values,
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</param>
      <param name="bitsPerPixel">Resulting file's pixel depth. Note that not all bits per pixel are
            available to all file formats.  For valid values, refer to 
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>. If
            <paramref name="bitsPerPixel" /> is 0, the image will be stored using the closet bits/pixel value supported by that format.
            For example, if a file format supports 1, 4, and 24 bits/pixel, and
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 5, the file will be stored as 24 bit. Likewise, if
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 2, the file will be stored as 4 bit.</param>
      <param name="firstPage">1-based index of the first page in <paramref name="image" /> to save.</param>
      <param name="lastPage">1-based index of the last page in <paramref name="image" /> to save. Pass -1 to save from
            <paramref name="firstPage" /> to the last page in <paramref name="image" />.</param>
      <param name="firstSavePageNumber">1-based index of the first output page. If the output file already exists, then this
            parameter lets you control which pages to overwrite and/or where to append the new pages.</param>
      <param name="pageMode">
        <para>Determines how to handle the page when saving to multipage formats. This can be one of the following:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Append</see>
            </term>
            <description>Append the new page(s) to the end of the file. If the file does not exist, this option will create
            the file and add the pages to it.  <paramref name="firstSavePageNumber" /> is not used.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Insert</see>
            </term>
            <description>Insert the new page(s) at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Replace</see>
            </term>
            <description>Replace the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Overwrite</see>
            </term>
            <description>Overwrite the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
        </list>
      </param>
      <returns>The size of the embedded image file in bytes.</returns>
      <remarks>
        <para>You can use this method to embed an image file in another file.</para>
        <para>If the output file format supports multipage and then all the pages in <paramref name="image" /> will be saved to the
            file.</para>
        <para>If the image is 8 bits per pixel or greater, use the LEAD CMP format or one of the JPEG (JTIF or JFIF) formats to
            save disk space.</para>
        <para>If the image is 1-bit per pixel, use the LEAD 1-bit format or a CCITT Group 3 or 4 format to save disk space.</para>
        <para>If the image has a region, the region stored in the image will be saved, if the image is saved as one of the TIFF
            file formats. 
            Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit. 
            For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled. Images can be
            window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevel</see> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see>, by using
            the <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> or by loading an image from a file format that supports Window Leveling. If a
            window-leveled image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsSaveOptions" /> class to set up other save options parameters before calling this
            method.</para>
        <para>Use to the <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage_EV">Leadtools.Codecs.RasterCodecs.SaveImage</see> event to provide progress feedback or to set or modify the saved image data.</para>
        <para>This method supports signed data images, but only DICOM and TIFF formats support signed data. This method will throw
            an exception if you attempt to save a signed image to a format other than DICOM or TIFF.</para>
        <para>In LEADTOOLS version 17 and up, when saving a colored image (such as a 24-bits per pixel image) to bitonal (1-bit per pixel), the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will not use any dithering when converting the image data. This is done because dithering is not the
            recommended when converting colored images containing text for document processing such as OCR and Barcode. The resulting text will be fuzzy and
            hard for a recognition engine to process. To save a colored image as bitonal with Floyd-Stein dithering (the behavior of LEADTOOLS 16.5 and earlier)
            use <see cref="P:Leadtools.Codecs.CodecsSaveOptions.UseImageDitheringMethod">CodecsSaveOptions.UseImageDitheringMethod</see> along with
            <see cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod</see> as illustrated below:</para>
        <para>
          <pre>
            <code>
            // 'codecs' is the RasterCodecs to use when saving
            // 'image' is a colored RasterImage object
            // Setup FloydStein dithering:
            codecs.Options.Save.UseImageDitheringMethod = true;
            image.DitheringMethod = RasterDitheringMethod.FloydStein;
            // Save the image as 1-bpp with auto-dithering:
            codecs.Save(image, fileName, RasterImageFormat.Tif, 1);
            </code>
          </pre>
        </para>
        <para>For information about quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.IO.Stream,System.Int64,Leadtools.RasterImageFormat,System.Int32)" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SaveStamp(Leadtools.RasterImage,System.String)">
      <summary>Saves a stamp in an existing file with default options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that contain the thumbnail (stamp) image.</param>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of an existing image file.</param>
      <remarks>
        <para>The stamp will be written to last page in the file. If that page already has a stamp, it will be overwritten; If the
            file to which the stamp is being written does not exist, an exception will occur.</para>
        <para>This method works for regular JPEG files and Exif JPEG files. For regular JPEG files, the stamp saved is always
            uncompressed and can be 8 or 24 bits per pixel. The stamp can be any width and height, but the stamp data and stamp header
            must completely fit in an APP0 marker. Therefore, the size must be less than 64k bytes (0xFFFF).</para>
        <para>For Exif JPEG files, the stamps can be uncompressed or JPEG compressed and must be 24 bits per pixel. Exif JPEG
            stamps are supposed to be 160 x 120. However, LEADTOOLS can save and read Exif JPEG stamps of other dimensions. The stamp,
            along with other information such as the TIFF_HEADER, 0th IFD, 1st IFD, etc. must completely fit in an APP1 marker.
            Therefore, the size must be less than 64k bytes (0xFFFF).</para>
      </remarks>
      <para>
        <strong>NOTE</strong>: At this time, there are no multipage formats that support stamps.
            </para>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.SaveStamp(Leadtools.RasterImage,System.String,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SaveStamp(Leadtools.RasterImage,System.IO.Stream)">
      <summary>Saves a stamp in an existing stream with default options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that contain the thumbnail (stamp) image.</param>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the data of an existing image file.</param>
      <remarks>
        <para>The stamp will be written to last page in the file. If that page already has a stamp, it will be overwritten; If the
            file to which the stamp is being written does not exist, an exception will occur.</para>
        <para>This method works for regular JPEG files and Exif JPEG files. For regular JPEG files, the stamp saved is always
            uncompressed and can be 8 or 24 bits per pixel. The stamp can be any width and height, but the stamp data and stamp header
            must completely fit in an APP0 marker. Therefore, the size must be less than 64k bytes (0xFFFF).</para>
        <para>For Exif JPEG files, the stamps can be uncompressed or JPEG compressed and must be 24 bits per pixel. Exif JPEG
            stamps are supposed to be 160 x 120. However, LEADTOOLS can save and read Exif JPEG stamps of other dimensions. The stamp,
            along with other information such as the TIFF_HEADER, 0th IFD, 1st IFD, etc. must completely fit in an APP1 marker.
            Therefore, the size must be less than 64k bytes (0xFFFF).</para>
      </remarks>
      <para>
        <strong>NOTE</strong>: At this time, there are no multipage formats that support stamps.
            </para>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.SaveStamp(Leadtools.RasterImage,System.String,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)" />.</example>
      <objectivec>
        <pre>
-(BOOL)saveStamp:(LTRasterImage*)image
          stream:(LTLeadStream*)stream
           error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public void saveStamp(RasterImage image, ILeadStream stream)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SaveStamp(Leadtools.RasterImage,System.String,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">
      <summary>Saves a stamp in an existing file with specific options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that contain the thumbnail (stamp) image.</param>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of an existing image file.</param>
      <param name="firstPage">1-based index of the first page in <paramref name="image" /> to save.</param>
      <param name="lastPage">1-based index of the last page in <paramref name="image" /> to save. Pass -1 to save from
            <paramref name="firstPage" /> to the last page in <paramref name="image" />.</param>
      <param name="firstSavePageNumber">1-based index of the first output page. If the output file already exists, then this
            parameter lets you control which pages to overwrite and/or where to append the new pages.</param>
      <param name="pageMode">
        <para>Determines how to handle the page when saving to multipage formats. This can be one of the following:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Append</see>
            </term>
            <description>Append the new page(s) to the end of the file. If the file does not exist, this option will create
            the file and add the pages to it.  <paramref name="firstSavePageNumber" /> is not used.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Insert</see>
            </term>
            <description>Insert the new page(s) at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Replace</see>
            </term>
            <description>Replace the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Overwrite</see>
            </term>
            <description>Overwrite the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
        </list>
      </param>
      <remarks>
        <para>The stamp will be written to last page in the file. If that page already has a stamp, it will be overwritten; If the
            file to which the stamp is being written does not exist, an exception will occur.</para>
        <para>This method works for regular JPEG files and Exif JPEG files. For regular JPEG files, the stamp saved is always
            uncompressed and can be 8 or 24 bits per pixel. The stamp can be any width and height, but the stamp data and stamp header
            must completely fit in an APP0 marker. Therefore, the size must be less than 64k bytes (0xFFFF).</para>
        <para>For Exif JPEG files, the stamps can be uncompressed or JPEG compressed and must be 24 bits per pixel. Exif JPEG
            stamps are supposed to be 160 x 120. However, LEADTOOLS can save and read Exif JPEG stamps of other dimensions. The stamp,
            along with other information such as the TIFF_HEADER, 0th IFD, 1st IFD, etc. must completely fit in an APP1 marker.
            Therefore, the size must be less than 64k bytes (0xFFFF).</para>
        <para>
          <strong>NOTE</strong>: At this time, there are no multipage formats that support stamps.
            </para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <example>
            This example will add a stamp to an existing file before reading it back
            <!--RasterCodecs.Stamp--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SaveStamp(Leadtools.RasterImage,System.IO.Stream,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">
      <summary>Saves a stamp in an existing stream with specific options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that contain the thumbnail (stamp) image.</param>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the data of an existing image file.</param>
      <param name="firstPage">1-based index of the first page in <paramref name="image" /> to save.</param>
      <param name="lastPage">1-based index of the last page in <paramref name="image" /> to save. Pass -1 to save from
            <paramref name="firstPage" /> to the last page in <paramref name="image" />.</param>
      <param name="firstSavePageNumber">1-based index of the first output page. If the output file already exists, then this
            parameter lets you control which pages to overwrite and/or where to append the new pages.</param>
      <param name="pageMode">
        <para>Determines how to handle the page when saving to multipage formats. This can be one of the following:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Append</see>
            </term>
            <description>Append the new page(s) to the end of the file. If the file does not exist, this option will create
            the file and add the pages to it.  <paramref name="firstSavePageNumber" /> is not used.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Insert</see>
            </term>
            <description>Insert the new page(s) at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Replace</see>
            </term>
            <description>Replace the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Overwrite</see>
            </term>
            <description>Overwrite the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
        </list>
      </param>
      <remarks>
        <para>The stamp will be written to last page in the file. If that page already has a stamp, it will be overwritten; If the
            file to which the stamp is being written does not exist, an exception will occur.</para>
        <para>This method works for regular JPEG files and Exif JPEG files. For regular JPEG files, the stamp saved is always
            uncompressed and can be 8 or 24 bits per pixel. The stamp can be any width and height, but the stamp data and stamp header
            must completely fit in an APP0 marker. Therefore, the size must be less than 64k bytes (0xFFFF).</para>
        <para>For Exif JPEG files, the stamps can be uncompressed or JPEG compressed and must be 24 bits per pixel. Exif JPEG
            stamps are supposed to be 160 x 120. However, LEADTOOLS can save and read Exif JPEG stamps of other dimensions. The stamp,
            along with other information such as the TIFF_HEADER, 0th IFD, 1st IFD, etc. must completely fit in an APP1 marker.
            Therefore, the size must be less than 64k bytes (0xFFFF).</para>
        <para>
          <strong>NOTE</strong>: At this time, there are no multipage formats that support stamps.
            </para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.SaveStamp(Leadtools.RasterImage,System.String,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)" />.</example>
      <objectivec>
        <pre>
-(BOOL)     saveStamp:(LTRasterImage*)image
               stream:(LTLeadStream*)stream
            firstPage:(unsigned int)firstPage
             lastPage:(int)lastPage
  firstSavePageNumber:(unsigned int)firstSavePageNumber
             pageMode:(LTCodecsSavePageMode)pageMode
                error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public void saveStamp(RasterImage image, ILeadStream stream, int firstPage, int lastPage, int firstSavePageNumber, CodecsSavePageMode pageMode)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)">
      <summary>Initializes a file-load process in which you control the input stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>The desired color order. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <remarks>
        <para>You must call the <see cref="M:Leadtools.Codecs.RasterCodecs.FeedLoad(System.Byte[],System.Int32,System.Int32)" /> method to supply buffered data, and you must call <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedLoad" /> when
            the loading is complete.</para>
        <para>This file-load process is useful when receiving transmitted images, such as those on the Internet. It works the same
            way as the <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods, except that your code supplies the image data. The file-load process works as
            follows:</para>
        <para>
          <list type="number">
            <item>
              <description>
            You call the <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" /> method to initialize the file-load process.</description>
            </item>
            <item>
              <description>
            You create a buffer, and each time you fill it with information, you call the <see cref="M:Leadtools.Codecs.RasterCodecs.FeedLoad(System.Byte[],System.Int32,System.Int32)" />
            method, which sends the data to the file-load process just as if the data were being read from a file on disk.
            </description>
            </item>
            <item>
              <description>
                <para>Whenever it has enough data to do so, the file-load process behaves the same as in the <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" />
            methods. It allocates and begins loading the image. It calls your <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage_EV">Leadtools.Codecs.RasterCodecs.LoadImage</see> event handler, if one is specified,
            whenever it has enough data in its input buffer.</para>
                <para>The file-load process updates information in the <see cref="T:Leadtools.RasterImage" /> when it has received enough
            information to do so.  The file-load process will make the first call to your event handler whenever this information is
            available.</para>
              </description>
            </item>
            <item>
              <description>
            At any time after calling <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" />, you can call <see cref="M:Leadtools.Codecs.RasterCodecs.CancelFeedLoad" /> to gracefully abort the
            feed load operation.  This allows you to end the feed load process without throwing an exception.
            </description>
            </item>
            <item>
              <description>
            To end the file-load process, you call the <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedLoad" /> method, which cleans up the process, and returns
            the loaded <see cref="T:Leadtools.RasterImage" />, if successful. If you call this method before supplying the complete file, it will
            successfully clean up the process, but will throw an exception. You should catch the exception if the load is canceled
            purposely.</description>
            </item>
          </list>
        </para>
        <para>
          <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images.
            Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>This method cannot be used in combination with <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will use feed load to load an image from a url
            <!--RasterCodecs.FeedLoad--></example>
      <objectivec>
        <pre>-(BOOL)startFeedLoad:(unsigned int)bitsPerPixel order:(LTCodecsLoadByteOrder)order error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public FeedCallbackThunk startFeedLoad(int bitsPerPixel, CodecsLoadByteOrder order)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">
      <summary>Initializes a file-load process in which you control the input stream with specific number of pages. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>The desired color order. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <remarks>
        <para>You must call the <see cref="M:Leadtools.Codecs.RasterCodecs.FeedLoad(System.Byte[],System.Int32,System.Int32)" /> method to supply buffered data, and you must call <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedLoad" /> when
            the loading is complete.</para>
        <para>This file-load process is useful when receiving transmitted images, such as those on the Internet. It works the same
            way as the <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods, except that your code supplies the image data. The file-load process works as
            follows:</para>
        <para>
          <list type="number">
            <item>
              <description>
            You call the <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" /> method to initialize the file-load process.</description>
            </item>
            <item>
              <description>
            You create a buffer, and each time you fill it with information, you call the <see cref="M:Leadtools.Codecs.RasterCodecs.FeedLoad(System.Byte[],System.Int32,System.Int32)" />
            method, which sends the data to the file-load process just as if the data were being read from a file on disk.
            </description>
            </item>
            <item>
              <description>
                <para>Whenever it has enough data to do so, the file-load process behaves the same as in the <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" />
            methods. It allocates and begins loading the image. It calls your <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage_EV">Leadtools.Codecs.RasterCodecs.LoadImage</see> event handler, if one is specified,
            whenever it has enough data in its input buffer.</para>
                <para>The file-load process updates information in the <see cref="T:Leadtools.RasterImage" /> when it has received enough
            information to do so.  The file-load process will make the first call to your event handler whenever this information is
            available.</para>
              </description>
            </item>
            <item>
              <description>
            At any time after calling <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" />, you can call <see cref="M:Leadtools.Codecs.RasterCodecs.CancelFeedLoad" /> to gracefully abort the
            feed load operation.  This allows you to end the feed load process without throwing an exception.
            </description>
            </item>
            <item>
              <description>
            To end the file-load process, you call the <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedLoad" /> method, which cleans up the process, and returns
            the loaded <see cref="T:Leadtools.RasterImage" />, if successful. If you call this method before supplying the complete file, it will
            successfully clean up the process, but will throw an exception. You should catch the exception if the load is canceled
            purposely.</description>
            </item>
            <item>
              <description>You can also call the <see cref="P:Leadtools.Codecs.RasterCodecs.IsFeedLoadDone" /> property to determine whether the framework has enough data to 
            load the pages specified in <paramref name="firstPage" /> and <paramref name="lastPage" />.</description>
            </item>
          </list>
        </para>
        <para>
          <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see> is only valid for 12 and 16-bit grayscale images.
            Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>This method cannot be used in combination with <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will use feed load to load a few pages of a multipage file
            <!--RasterCodecs.FeedLoadMulti--></example>
      <objectivec>
        <pre>-(BOOL)startFeedLoad:(unsigned int)bitsPerPixel order:(LTCodecsLoadByteOrder)order firstPage:(unsigned int)firstPage lastPage:(int)lastPage error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public FeedCallbackThunk startFeedLoad(int bitsPerPixel, CodecsLoadByteOrder order, int firstPage, int lastPage)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.FeedLoad(System.Byte[],System.Int32,System.Int32)">
      <summary>Supplies image data to the file-load process from a buffer that you provide. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="data">The image file data.</param>
      <param name="offset">Offset from the beginning of the buffer to where the image data starts.</param>
      <param name="length">Total size (in bytes) of the image data.</param>
      <remarks>
        <para>Use this method with the <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedLoad" /> methods.</para>
        <para>For a description of how the methods relate to each other, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" />.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image. For these images, the
            load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.FeedLoad(System.IntPtr,System.Int32)">
      <summary>Supplies unmanaged memory image data to the file-load process from a buffer that you provide. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="data">The image file unmanaged memory data.</param>
      <param name="length">Total size (in bytes) of the image data.</param>
      <remarks>
        <para>Use this method with the <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedLoad" /> methods.</para>
        <para>For a description of how the methods relate to each other, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" />.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image. For these images, the
            load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" />.</example>
      <objectivec>
        <pre>-(BOOL)feedLoad:(const unsigned char*)buffer length:(unsigned int)length error:(NSError**)outError;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StopFeedLoad">
      <summary>Ends a file-load process in which you control the input stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <returns>The image loaded by the <see cref="M:Leadtools.Codecs.RasterCodecs.FeedLoad(System.Byte[],System.Int32,System.Int32)" /> process.</returns>
      <remarks>
        <para>This cleans up all the variables and buffers allocated by the <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.FeedLoad(System.Byte[],System.Int32,System.Int32)" />
            methods and resets all internal variables to their default settings.</para>
        <para>You must call this method to complete a file load that was started with <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" />.</para>
        <para>If you call this method before supplying the complete file, it will successfully clean up the process, but will throw
            a file-read exception. You should trap the error if the load is canceled purposely.</para>
        <para>For a description of how the methods relate to each other, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" />.</example>
      <objectivec>
        <pre>-(LTRasterImage*)stopFeedLoad:(NSError**)outError;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.CancelFeedLoad">
      <summary>This method can be used to purposefully cancel the <see cref="M:Leadtools.Codecs.RasterCodecs.FeedLoad(System.Byte[],System.Int32,System.Int32)" /> process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>This method can be used to gracefully cancel a feed load operation.  For example, during feed load progressing, the
            user might click a cancel button to abort the operation.  You can then call this method to end the feed load process
            without throwing an exception.</para>
        <para>For a description of how the methods relate to each other, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" />.</example>
      <objectivec>
        <pre>-(void)cancelFeedLoad;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)">
      <summary>Initializes a file information process in which you control the input stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="totalPages">true to query the file for total number of pages; false, otherwise.</param>
      <param name="pageNumber">1-based index to the page number to query.</param>
      <remarks>
        <para>You must call the <see cref="M:Leadtools.Codecs.RasterCodecs.FeedGetInformation(System.Byte[],System.Int32,System.Int32)" /> method to supply buffered data, and you must call
            <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedGetInformation" /> when the process is complete.</para>
        <para>This file information process is useful when receiving transmitted images, such as those on the Internet. It works the same
            way as the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)" /> method, except that your code supplies the image data. The file information process works as
            follows:</para>
        <para>
          <list type="number">
            <item>
              <description>
            You call the <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" /> method to initialize the file information process.</description>
            </item>
            <item>
              <description>
                <para>You create a buffer, and each time you fill it with information, you call the <see cref="M:Leadtools.Codecs.RasterCodecs.FeedGetInformation(System.Byte[],System.Int32,System.Int32)" />
            method, which sends the data to the file information process just as if the data were being read from a file on disk.</para>
                <para>If the <see cref="M:Leadtools.Codecs.RasterCodecs.FeedGetInformation(System.Byte[],System.Int32,System.Int32)" /> returns true, this means the frameworks does not have enough data to get the
            information required; you must read more data and call the <see cref="M:Leadtools.Codecs.RasterCodecs.FeedGetInformation(System.Byte[],System.Int32,System.Int32)" /> again. When <see cref="M:Leadtools.Codecs.RasterCodecs.FeedGetInformation(System.Byte[],System.Int32,System.Int32)" />
            returns false, the framework has gathered enough data and you can break out of the loop.</para>
              </description>
            </item>
            <item>
              <description>
            At any time after calling <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" />, you can call <see cref="M:Leadtools.Codecs.RasterCodecs.CancelFeedGetInformation" /> to gracefully
            abort the feed operation.  This allows you to end the feed process without throwing an exception.
            </description>
            </item>
            <item>
              <description>
            To end the file information process, you call the <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedGetInformation" /> method, which cleans up the process,
            and returns an instance of the <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> class if successful. If you call this method before enough image data
            is passed to gather the information, it will successfully clean up the process, but will throw an exception. You should catch the
            exception if the process is canceled purposely.
            </description>
            </item>
          </list>
        </para>
        <para>This method cannot be used in combination with <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" />.</para>
        <para>Specifying true for <paramref name="totalPages" /> can cause the process to be slow for files with large number of
            pages.</para>
      </remarks>
      <example>
            This example will use feed information to get information of an image from a url
            <!--RasterCodecs.FeedGetInformation--></example>
      <objectivec>
        <pre>-(BOOL)startFeedGetInformation:(BOOL)totalPages pageNumber:(int)pageNumber error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public FeedCallbackThunk startFeedGetInformation(boolean totalPages, int pageNumber)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.FeedGetInformation(System.Byte[],System.Int32,System.Int32)">
      <summary>Supplies image data to the file information process from a buffer that you provide. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="data">The image file data.</param>
      <param name="offset">Offset from the beginning of the buffer to where the image data starts.</param>
      <param name="length">Total size (in bytes) of the image data.</param>
      <returns>true if the get information process requires more data; false, otherwise. When this method returns false,
            you can break out of the loop and call <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedGetInformation" /> to obtain the <see cref="T:Leadtools.Codecs.CodecsImageInfo" />
            object containing information about the image file.</returns>
      <remarks>
        <para>Use this method with the <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedGetInformation" /> methods.</para>
        <para>For a description of how the methods relate to each other, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" />.</example>
      <objectivec>
        <pre>-(LTCodecsFeedGetInformationStatus)feedGetInformation:(const unsigned char*)buffer length:(unsigned int)length error:(NSError**)outError;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.FeedGetInformation(System.IntPtr,System.Int64)">
      <summary>Supplies unmanaged memory image data to the file information process from a buffer that you provide. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="data">The image file unmanaged memory data.</param>
      <param name="length">Total size (in bytes) of the image data.</param>
      <returns>true if the get information process requires more data; false, otherwise. When this method returns false,
            you can break out of the loop and call <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedGetInformation" /> to obtain the <see cref="T:Leadtools.Codecs.CodecsImageInfo" />
            object containing information about the image file.</returns>
      <remarks>
        <para>Use this method with the <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedGetInformation" /> methods.</para>
        <para>For a description of how the methods relate to each other, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" />.</example>
      <objectivec>
        <pre>-(LTCodecsFeedGetInformationStatus)feedGetInformationData:(NSData*)data length:(unsigned int)length error:(NSError**)outError;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StopFeedGetInformation">
      <summary>Ends a file information process in which you control the input stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <returns>An <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object containing information about the image data provided by <see cref="M:Leadtools.Codecs.RasterCodecs.FeedGetInformation(System.Byte[],System.Int32,System.Int32)" />.</returns>
      <remarks>
        <para>This cleans up all the variables and buffers allocated by the <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" /> and
            <see cref="M:Leadtools.Codecs.RasterCodecs.FeedGetInformation(System.Byte[],System.Int32,System.Int32)" /> methods and resets all internal variables to their default settings.</para>
        <para>You must call this method to complete the file information that was started with <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" />.</para>
        <para>If you call this method before enough data is supplied to obtain the image information, it will successfully clean up the process, but will
            throw an exception. You should trap the error if the process is canceled purposely.</para>
        <para>For a description of how the methods relate to each other, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" />.</example>
      <objectivec>
        <pre>-(LTCodecsImageInfo*)stopFeedGetInformation:(NSError**)outError;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.CancelFeedGetInformation">
      <summary>This method can be used to purposefully cancel the feed information process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>This method can be used to gracefully cancel a feed information operation.  For example, during feed information progressing,
            the user might click a cancel button to abort the operation.  You can then call this method to end the feed information process
            without throwing an exception.</para>
        <para>For a description of how the methods relate to each other, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" />.</example>
      <objectivec>
        <pre>-(void)cancelFeedGetInformation;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.DeletePage(System.String,System.Int32)">
      <summary>Deletes the specified page from a multipage file, if the format supports delete operations. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the file from which to delete the page.</param>
      <param name="page">1-based index of the page to delete. Use -1 to delete the last page. Use 1 to delete the first page.</param>
      <remarks>
            The following file formats support delete operations:
            <list><item><description>TIFF (most TIFF formats, including JTIF, but excluding EXIF)</description></item><item><description>PCX</description></item><item><description>Winfax</description></item></list></remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.DeletePage(System.IO.Stream,System.Int32)">
      <summary>Deletes the specified page from a multipage file in a stream, if the format supports delete operations. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the data of the image file from which to delete the page.</param>
      <param name="page">1-based index of the page to delete. Use -1 to delete the last page. Use 1 to delete the first page.</param>
      <remarks>
            The following file formats support delete operations:
            <list><item><description>TIFF (most TIFF formats, including JTIF, but excluding EXIF)</description></item><item><description>PCX</description></item><item><description>Winfax</description></item></list></remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)" />.</example>
      <objectivec>
        <pre>-(BOOL)deletePage:(LTLeadStream*)stream page:(unsigned int)page error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void deletePage(ILeadStream stream, int page)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadLoadResolutions(System.String)">
      <summary>Examines a file to determine which resolutions it contains. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the file to query.</param>
      <returns>A <see cref="T:Leadtools.LeadSize" /> structure containing the available resolutions.</returns>
      <remarks>
        <para>A FlashPix, PhotoCD, ECW, JPEG 2000 or JBIG/JBIG2 file can contain more than one copy of the same image, each at a different physical
            resolution (width and height in pixels).</para>
        <para>After you get the available resolutions, you can use any of the following to specify the one to be loaded:</para>
        <para>
          <list type="bullet">
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsJbigLoadOptions.Resolution">CodecsJbigLoadOptions.Resolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsJpeg2000LoadOptions.J2kResolution">CodecsJpeg2000LoadOptions.J2kResolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsJpeg2000LoadOptions.CmwResolution">CodecsJpeg2000LoadOptions.CmwResolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsFpxLoadOptions.Resolution">CodecsFpxLoadOptions.Resolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsPcdLoadOptions.Resolution">CodecsPcdLoadOptions.Resolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsEcwLoadOptions.Resolution">CodecsEcwLoadOptions.Resolution</see>
              </description>
            </item>
          </list>
        </para>
        <para>For more information, refer to <see cref="T:L.Topics.ImplementingJbigFeatures">Implementing JBIG Features</see>.</para>
      </remarks>
      <example>
            This example shows how many physical resolutions are available, selects the smallest one, then loads the file.
            <!--RasterCodecs.ReadLoadResolutions--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadLoadResolutions(System.IO.Stream)">
      <summary>Examines a stream to determine which resolutions it contains. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the data of the image file to query.</param>
      <returns>A <see cref="T:Leadtools.LeadSize" /> structure containing the available resolutions.</returns>
      <remarks>
        <para>A FlashPix, PhotoCD, ECW, JPEG 2000 or JBIG/JBIG2 file can contain more than one copy of the same image, each at a different physical
            resolution (width and height in pixels).</para>
        <para>After you get the available resolutions, you can use any of the following to specify the one to be loaded:</para>
        <para>
          <list type="bullet">
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsJbigLoadOptions.Resolution">CodecsJbigLoadOptions.Resolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsJpeg2000LoadOptions.J2kResolution">CodecsJpeg2000LoadOptions.J2kResolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsJpeg2000LoadOptions.CmwResolution">CodecsJpeg2000LoadOptions.CmwResolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsFpxLoadOptions.Resolution">CodecsFpxLoadOptions.Resolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsPcdLoadOptions.Resolution">CodecsPcdLoadOptions.Resolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsEcwLoadOptions.Resolution">CodecsEcwLoadOptions.Resolution</see>
              </description>
            </item>
          </list>
        </para>
        <para>For more information, refer to <see cref="T:L.Topics.ImplementingJbigFeatures">Implementing JBIG Features</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadLoadResolutions(System.String)">ReadLoadResolutions</see>.</example>
      <objectivec>
        <pre>-(NSArray*)readLoadResolutions:(LTLeadStream*)stream error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public LeadSize[] readLoadResolutions(ILeadStream stream)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Convert(System.String,System.String,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsImageInfo)">
      <summary>Converts an image file from one format to another, creating a new file in the new format. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="srcFileName">A <see cref="T:System.String" /> containing the input file name.</param>
      <param name="destFileName">A <see cref="T:System.String" /> containing the output file name.</param>
      <param name="format">The output file format. For valid values, refer to 
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</param>
      <param name="width">New width of the output image. If this value is not 0, then the output file will be resized to the
            <paramref name="width" /> value. Use a value of 0 if you do not wish to resize the output file.</param>
      <param name="height">New height of the output image. If this value is not 0, then the output file will be resized to the
            <paramref name="height" /> value. Use a value of 0 if you do not wish to resize the output file.</param>
      <param name="bitsPerPixel">The output image pixel depth. Note that not all bits per pixel are available to
            all file formats.</param>
      <param name="info">A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object specifying more options for the conversion.</param>
      <keywords>Bits per pixel | Color space | Image converter|Silverlight</keywords>
      <remarks>
        <para>If you convert to a lower bits-per-pixel format, this method optimizes the colors automatically. For example, when
            converting a 24-bit file (16 million colors) to an 8-bit file (256 colors) this method selects the best 256 colors to
            represent the 24-bit image</para>
        <para>Note that this is a high-level method that does conversion from all possible formats to all possible formats.</para>
      </remarks>
      <example>
            This example will convert create a <see cref="T:Leadtools.RasterImage" /> that contains as pages, thumbnails for all the CMP images in a folder
            <!--RasterCodecs.Convert--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Convert(System.IO.Stream,System.IO.Stream,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsImageInfo)">
      <summary>Converts an image stream from one format to another, creating a new image file in a stream in the new format. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="srcStream">A <see cref="T:System.IO.Stream" /> containing the data of the input image file.</param>
      <param name="destStream">A <see cref="T:System.IO.Stream" /> that will contain the data of the output image file.</param>
      <param name="format">The output file format. For valid values, refer to 
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</param>
      <param name="width">New width of the output image. If this value is not 0, then the output file will be resized to the
            <paramref name="width" /> value. Use a value of 0 if you do not wish to resize the output file.</param>
      <param name="height">New height of the output image. If this value is not 0, then the output file will be resized to the
            <paramref name="height" /> value. Use a value of 0 if you do not wish to resize the output file.</param>
      <param name="bitsPerPixel">The output image pixel depth. Note that not all bits per pixel are available to
            all file formats.</param>
      <param name="info">A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object specifying more options for the conversion.</param>
      <keywords>Bits per pixel | Color space | Image converter|Silverlight</keywords>
      <remarks>
        <para>If you convert to a lower bits-per-pixel format, this method optimizes the colors automatically. For example, when
            converting a 24-bit file (16 million colors) to an 8-bit file (256 colors) this method selects the best 256 colors to
            represent the 24-bit image</para>
        <para>Note that this is a high-level method that does conversion from all possible formats to all possible formats.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Convert(System.String,System.String,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsImageInfo)">Convert</see>.</example>
      <objectivec>
        <pre>
-(BOOL)convert:(LTLeadStream*)srcStream
    destStream:(LTLeadStream*)destStream
        format:(LTRasterImageFormat)format
         width:(unsigned int)width
        height:(unsigned int)height
  bitsPerPixel:(unsigned int)bitsPerPixel
          info:(LTCodecsImageInfo*)info
         error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public void convert(ILeadStream srcStream, ILeadStream destStream, RasterImageFormat format, int width, int height, int bitsPerPixel, CodecsImageInfo info)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadMarkers(System.String)">
      <summary>Reads all the metadata markers (COM and APPn) from a file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the input file name.</param>
      <returns>A collection of <see cref="T:Leadtools.RasterMarkerMetadata" /> objects containing the metadata marker data.</returns>
      <remarks>
        <para>This method reads all the metadata markers from a file, and returns a collection of the markers.</para>
        <para> For Exif files, this metadata collection will contain all the Exif and GPS comments, stored in APP1. It will also
            contain the audio information stored in APP2.</para>
        <para>If the file contains no marker, then this method will return an empty collection.</para>
      </remarks>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>
            This example will read all the markers from an EXIF file
            <!--RasterCodecs.ReadMarkers(string)--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadMarkers(System.IO.Stream)">
      <summary>Reads all the metadata markers (COM and APPn) from a stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the input file image data.</param>
      <returns>A collection of <see cref="T:Leadtools.RasterMarkerMetadata" /> objects containing the metadata marker data.</returns>
      <remarks>
        <para>This method reads all the metadata markers from a file, and returns a collection of the markers.</para>
        <para>For Exif files, this metadata collection will contain all the Exif and GPS comments, stored in APP1. It will also
            contain the audio information stored in APP2.</para>
        <para>If the file contains no marker, then this method will return an empty collection.</para>
      </remarks>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>
            This example will read all the markers from a stream that contains an EXIF file data
            <!--RasterCodecs.ReadMarkers(Stream)--></example>
      <objectivec>
        <pre>-(NSArray*)readMarkers:(LTLeadStream*)stream error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterCollection&lt;RasterMarkerMetadata&gt; readMarkers(ILeadStream stream)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">
      <summary>Creates a thumbnail from the specified image file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the file from which the thumbnail image will be
            created.</param>
      <param name="options">Options for creating the thumbnail image.</param>
      <param name="pageNumber">1-based index of the page from which the thumbnail image should be created.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method creates.</returns>
      <remarks>
            This method will always return a thumbnail image. Depending on the <paramref name="options" /> passed, this method might
            read the stamp stored inside EXIF, CMP, JFIF and FlashPix files and return that.  To read the file stamp only, use
            <see cref="M:Leadtools.Codecs.RasterCodecs.ReadStamp(System.String,System.Int32)" />.
            </remarks>
      <seealso cref="T:L.Topics.ThumbnailBrowser">Thumbnail Browser</seealso>
      <example>
            This example will read a thumbnail from a CMP file
            <!--RasterCodecs.ReadThumbnail--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.IO.Stream,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">
      <summary>Creates a thumbnail from the specified image stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data from which the thumbnail image will be
            created.</param>
      <param name="options">Options for creating the thumbnail image.</param>
      <param name="pageNumber">1-based index of the page from which the thumbnail image should be created.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method creates.</returns>
      <remarks>
            This method will always return a thumbnail image. Depending on the <paramref name="options" /> passed, this method might
            read the stamp stored inside EXIF, CMP, JFIF and FlashPix files and return that.  To read the file stamp only, use
            <see cref="M:Leadtools.Codecs.RasterCodecs.ReadStamp(System.String,System.Int32)" />.
            </remarks>
      <seealso cref="T:L.Topics.ThumbnailBrowser">Thumbnail Browser</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">ReadThumbnail</see>.</example>
      <objectivec>
        <pre>-(LTRasterImage*)readThumbnail:(LTLeadStream*)stream options:(LTCodecsThumbnailOptions*)thumbnailOptions pageNumber:(unsigned int)pageNumber error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage readThumbnail(ILeadStream stream, CodecsThumbnailOptions options, int pageNumber)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadStamp(System.String,System.Int32)">
      <summary>Reads a thumbnail image stored in the image file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the file which contains the stamp image to load.</param>
      <param name="pageNumber">1-based index of the page from which the stamp image should be loaded.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <remarks>
        <para>
            Only EXIF, CMP, JFIF and FlashPix formats support stamps. However, not all file of these formats contain stamps. To create a
            thumbnail image from any file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)" />.
            </para>
        <para>
          <strong>NOTE</strong>: At this time, there are no multipage formats that support stamps.
            </para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.SaveStamp(Leadtools.RasterImage,System.String,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadStamp(System.IO.Stream,System.Int32)">
      <summary>Reads a thumbnail image stored in an image stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data which contains the stamp image to load.</param>
      <param name="pageNumber">1-based index of the page from which the stamp image should be loaded.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <remarks>
            Only EXIF, CMP, JFIF and FlashPix formats support stamps. However, not all file of these formats contain stamps. To create a
            thumbnail image from any file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)" />.
            </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.SaveStamp(Leadtools.RasterImage,System.String,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)" />.</example>
      <objectivec>
        <pre>-(LTRasterImage*)readStamp:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage readStamp(ILeadStream stream, int pageNumber)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">
      <summary>Indicates which method should be called when an overlay is detected inside a file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="callback">The method which should be called when an overlay is detected. Use a null reference (Nothing in
            Visual Basic) to indicate that LEADTOOLS should handle overlays automatically.</param>
      <param name="mode">Indicates when should this method be called. See <see cref="T:Leadtools.Codecs.CodecsOverlayCallbackMode" /> for possible
            values.</param>
      <remarks>
        <para>Currently, only PTOCA files are known to use such overlays.</para>
        <para>PTOCA files contain file references (i.e. filenames) to external files that contain overlay bitmaps. (These files are
            typically in IOCA format)</para>
        <para>These external overlay files will be resized and placed on the current page according to the information from the
            PTOCA files. By default, LEADTOOLS will load these external overlay files from disk. You should override this behavior if
            you load files that are not stored locally (for example, on a remote storage or in a database).</para>
        <para>To load overlays stored on other storage, you have to pass your overlay callback to this method and load the overlays
            in your overlay callback.</para>
        <para>The overlay callback will be used until <see cref="M:Leadtools.Codecs.RasterCodecs.StopOverlay" /> is called.</para>
      </remarks>
      <example>
            This example will read a PTOKA file and overlays a TIF file on it
            <!--RasterCodecs.StartOverlay--></example>
      <objectivec>
        <pre>-(BOOL)startOverlay:(LTCodecsOverlayCallback)callback mode:(LTCodecsOverlayCallbackMode)mode error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void startOverlay(CodecsOverlayListener listener, CodecsOverlayCallbackMode mode)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StopOverlay">
      <summary>Restores the previous overlay callback. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
            Call this method to restore the old overlay handling prior to calling <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)" /></remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)" />.</example>
      <objectivec>
        <pre>-(void)stopOverlay;</pre>
      </objectivec>
      <java>
        <pre>public void stopOverlay()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)">
      <summary>Enumerates all the tags in a file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the input file name.</param>
      <param name="pageNumber">1-based index of the page from which to enumerate the tags.</param>
      <remarks>
        <para>This method will fire the <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound_EV">Leadtools.Codecs.RasterCodecs.TagFound</see> event for each tag found in the file.</para>
        <para>Currently, only TIFF and Exif files contain tags.</para>
        <para>For multipage TIFF files, you can enumerate the tags from a particular page. Specify the page number whose tags to
            enumerate.</para>
        <para>This method enumerates the standard TIFF tags and the user tags. Standard TIFF tags are less than 32767. User TIFF
            tags are usually between 32768 and 65535.</para>
        <para>To enumerate the tags stored in a stream, use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.IO.Stream,System.Int32)" />.</para>
        <para>To read a tag value, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" /> and to read all the tags in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</para>
        <para>For general information about TIFF tags, refer to
            <see cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</see>.</para>
        <para>Do not attempt to use <see cref="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)" /> to delete tags from inside the <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound_EV">Leadtools.Codecs.RasterCodecs.TagFound</see> event. If you
            want to delete tags that you enumerate, use this event to add the tags to a list. Upon returning from
            <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />, you can delete all the tags from the list.</para>
        <para>You can use <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" /> to determine whether a certain file format supports tags.</para>
      </remarks>
      <example>
            This example will show all the tags in the give file, read them then saves them to another file
            <!--RasterCodecs.EnumTags--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.IO.Stream,System.Int32)">
      <summary>Enumerates all the tags in a stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the input file image data.</param>
      <param name="pageNumber">1-based index of the page from which to enumerate the tags.</param>
      <remarks>
        <para>This method will fire the <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound" /> event for each tag found in the stream.</para>
        <para>Currently, only TIFF and Exif files contain tags.</para>
        <para>For multipage TIFF files, you can enumerate the tags from a particular page. Specify the page number whose tags to
            enumerate.</para>
        <para>This method enumerates the standard TIFF tags and the user tags. Standard TIFF tags are less than 32767. User TIFF
            tags are usually between 32768 and 65535.</para>
        <para>To enumerate the tags stored in a disk file, use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</para>
        <para>To read a tag value, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" /> and to read all the tags in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</para>
        <para>For general information about TIFF tags, refer to
            <see cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</see>.</para>
        <para>Do not attempt to use <see cref="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)" /> to delete tags from inside the <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound" /> event. If you
            want to delete tags that you enumerate, use this event to add the tags to a list. Upon returning from
            <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />, you can delete all the tags from the list.</para>
        <para>You can use <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" /> to determine whether a certain file format supports tags.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</example>
      <objectivec>
        <pre>-(BOOL)enumTags:(LTLeadStream*)stream  pageNumber:(unsigned int)pageNumber error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void enumTags(ILeadStream stream, int pageNumber)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)">
      <summary>Enumerates all the GeoKeys in a Geo TIFF file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the input file name.</param>
      <param name="pageNumber">1-based index of the page from which to enumerate the tags.</param>
      <remarks>
        <para>To enumerate all the keys stored in a stream, use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.IO.Stream,System.Int32)" />.</para>
        <para>For multipage Geo TIFF files, you can enumerate the GeoKeys from a particular page. Specify the page number whose
            GeoKeys to enumerate.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.GeoKeyFound" /> event is called for each GeoKey value stored in the three standard Geo TIFF tags 
            (34735, 34736 and 34737). For enumerating the other standard Geo TIFF data stored as separate tags, you can use
            <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />. Or, you can call <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" /> for each of these tags (since there are not that
            many of them to warrant the use of <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />).</para>
        <para>For more information, refer to<see cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</see>.</para>
      </remarks>
      <example>
            This example will show all the GeoKeys in the given file and then load them and add them to a destination file
            <!--RasterCodecs.EnumGeoKeys--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.IO.Stream,System.Int32)">
      <summary>Enumerates all the GeoKeys in a Geo TIFF stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the input image data.</param>
      <param name="pageNumber">1-based index of the page from which to enumerate the tags.</param>
      <remarks>
        <para>To enumerate all the keys stored in a disk file, use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />.</para>
        <para>For multipage Geo TIFF files, you can enumerate the GeoKeys from a particular page. Specify the page number whose
            GeoKeys to enumerate.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.GeoKeyFound" /> event is called for each GeoKey value stored in the three standard Geo TIFF tags 
            (34735, 34736 and 34737). For enumerating the other standard Geo TIFF data stored as separate tags, you can use
            <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />. Or, you can call <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" /> for each of these tags (since there are not that
            many of them to warrant the use of <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />).</para>
        <para>For more information, refer to <see cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</see>.</para>
      </remarks>
      <example>
            This example will show all the GeoKeys in the given file and then load them and add them to a destination file
            <!--RasterCodecs.EnumGeoKeys--></example>
      <objectivec>
        <pre>-(BOOL)EnumGeoKeys:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void enumGeoKeys(ILeadStream stream, int pageNumber)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)">
      <summary>Deletes a tag from a file, if the file supports tags (TIFF or Exif). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the file from which to delete the tag.</param>
      <param name="pageNumber">The 1-based index of the page from which the tag will be deleted. Use -1 to delete the tag from
            the last page. Use 1 to delete the tag from the first page.</param>
      <param name="id">The ID of the tag in the TIFF file. The tag IDs are between 0 and 65535.</param>
      <remarks>
        <para>If you want to delete the tag from a particular IFD in the file, set
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.UseImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.UseImageFileDirectoryOffset</see>
            to true, and set <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.ImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.ImageFileDirectoryOffset</see>
            to the IFD in question. This method will delete tags only from the main IFDs that make up an image. Some TIFF tags are
            themselves SubIFDs. You can delete tags from such SubIFDs by using
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.UseImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.UseImageFileDirectoryOffset</see>
            and
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.ImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.ImageFileDirectoryOffset</see>
            specifying the IFD as above.</para>
        <para>Notes:</para>
        <para>
          <list type="bullet">
            <item>
              <description>The <strong>Leadtools.Codecs.Cmp.dll</strong> codec is used to delete the tag from all the TIFF and Exif
            files.</description>
            </item>
            <item>
              <description>Do not attempt to use this method to delete tags from inside the <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound" /> event. If you
            want to delete tags that you enumerate, use the <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound" /> event to add the tags to a list. Upon returning
            from <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />, you can delete all the tags from the list.</description>
            </item>
            <item>
              <description>You should be careful when you delete non-custom tags (tags below 32768). If you delete the wrong tag,
            you might corrupt the TIF file!.</description>
            </item>
          </list>
        </para>
        <para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <example>
            This example will create a TIF file, add a certain tag to it then delete it
            <!--RasterCodecs.Tags--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.IO.Stream,System.Int32,System.Int32)">
      <summary>Deletes a tag from a stream, if the file supports tags (TIFF or Exif). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data of the file from which to delete the tag.</param>
      <param name="pageNumber">The 1-based index of the page from which the tag will be deleted. Use -1 to delete the tag from
            the last page. Use 1 to delete the tag from the first page.</param>
      <param name="id">The ID of the tag in the TIFF file. The tag IDs are between 0 and 65535.</param>
      <remarks>
        <para>If you want to delete the tag from a particular IFD in the file, set
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.UseImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.UseImageFileDirectoryOffset</see>
            to true, and set <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.ImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.ImageFileDirectoryOffset</see>
            to the IFD in question. This method will delete tags only from the main IFDs that make up an image. Some TIFF tags are
            themselves SubIFDs. You can delete tags from such SubIFDs by using
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.UseImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.UseImageFileDirectoryOffset</see>
            and
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.ImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.ImageFileDirectoryOffset</see>
            specifying the IFD as above.</para>
        <para>Notes:</para>
        <para>
          <list type="bullet">
            <item>
              <description>The <strong>Leadtools.Codecs.Cmp.dll</strong> codec is used to delete the tag from all the TIFF and Exif
            files.</description>
            </item>
            <item>
              <description>Do not attempt to use this method to delete tags from inside the <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound" /> event. If you
            want to delete tags that you enumerate, use the <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound" /> event to add the tags to a list. Upon returning
            from <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />, you can delete all the tags from the list.</description>
            </item>
            <item>
              <description>You should be careful when you delete non-custom tags (tags below 32768). If you delete the wrong tag,
            you might corrupt the TIF file!.</description>
            </item>
          </list>
        </para>
        <para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)">DeleteTag</see>.</example>
      <objectivec>
        <pre>-(BOOL)deleteTag:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber tagId:(int)tagId error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void deleteTag(ILeadStream stream, int pageNumber, int id)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)">
      <summary>Gets the specified tagged data from a TIFF file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>The tag data.</returns>
      <remarks>
        <para>This method is provided to support TIFF tags that you define. If no such tag exists in the image, this method will
            return a null reference (Nothing in Visual Basic).</para>
        <para>To read all the tags stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" /></para>
        <para>You can use <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" /> to determine whether a certain file format supports tags.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)">EnumTags(string, int) Method</seealso>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)">EnumTags(Stream, int) method</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)">DeleteTag</see>.</example>
      <param name="fileName">A <see cref="T:System.String" /> containing the input file name.</param>
      <param name="pageNumber">1-based index of the page from which to read the tag.</param>
      <param name="id">
        <para>Tag to identify the data in the TIFF file. Use the same tag that you specified in the <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTag(System.String,System.Int32,Leadtools.RasterTagMetadata)" />. Examples
            of registered tags are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0x8298</term>
            <description>Copyright comment</description>
          </item>
          <item>
            <term>0x8769</term>
            <description>General Exif comments</description>
          </item>
          <item>
            <term>0x8825</term>
            <description>Exif GPS comments</description>
          </item>
          <item>
            <term>0x80A4</term>
            <description>Annotation TIFF tag</description>
          </item>
        </list>
      </param>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.IO.Stream,System.Int32,System.Int32)">
      <summary>Gets the specified tagged data from a TIFF stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>The tag data.</returns>
      <remarks>
        <para>This method is provided to support TIFF tags that you define. If no such tag exists in the image, this method will
            return a null reference (Nothing in Visual Basic).</para>
        <para>To read all the tags stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" /></para>
        <para>You can use <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" /> to determine whether a certain file format supports tags.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)">DeleteTag</see>.</example>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)">EnumTags(string, int) Method</seealso>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)">EnumTags(Stream, int) Method</seealso>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the input file image data.</param>
      <param name="pageNumber">1-based index of the page from which to read the tag.</param>
      <param name="id">
        <para>Tag to identify the data in the TIFF file. Use the same tag that you specified in the <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTag(System.String,System.Int32,Leadtools.RasterTagMetadata)" />. Examples
            of registered tags are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0x8298</term>
            <description>Copyright comment</description>
          </item>
          <item>
            <term>0x8769</term>
            <description>General Exif comments</description>
          </item>
          <item>
            <term>0x8825</term>
            <description>Exif GPS comments</description>
          </item>
          <item>
            <term>0x80A4</term>
            <description>Annotation TIFF tag</description>
          </item>
        </list>
      </param>
      <objectivec>
        <pre>-(LTRasterTagMetadata*)readTag:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber tagId:(int)tagId error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterTagMetadata readTag(ILeadStream stream, int pageNumber, int id)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadGeoKey(System.String,System.Int32,System.Int32)">
      <summary>Gets the specified GeoKey data from a TIFF file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the input file name.</param>
      <param name="pageNumber">1-based index of the page from which to read the GeoKey.</param>
      <param name="id">
        <para>GeoKey ID. Values of the GeoKey ID range between 0 and 65535. Possible ranges are:</para>
        <list type="table">
          <listheader>
            <term>Range</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0..1023</term>
            <description>Do not use; reserved for future use.</description>
          </item>
          <item>
            <term>1024..2047</term>
            <description>GeoTIFF Configuration Keys.</description>
          </item>
          <item>
            <term>2048..3071</term>
            <description>Geographic/Geocentric CS Parameter Keys.</description>
          </item>
          <item>
            <term>3072..4095</term>
            <description>Projected CS Parameter Keys.</description>
          </item>
          <item>
            <term>4096..5119</term>
            <description>Vertical CS Parameter Keys.</description>
          </item>
          <item>
            <term>5120..32767</term>
            <description>Reserved.</description>
          </item>
          <item>
            <term>32768..65535</term>
            <description>Private use - use to store your own data.</description>
          </item>
        </list>
      </param>
      <returns>The GeoKey data.</returns>
      <remarks>
        <para>You can use this method to obtain the GeoKey data from a particular file.</para>
        <para>If no such GeoKey exists in the image, this method will return a null reference (Nothing in Visual Basic).</para>
        <para>The most efficient way of reading the GeoKeys in a file is to enumerate them with <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" /> and 
            then read each GeoKey with <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKey(System.String,System.Int32,System.Int32)" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <example>Refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadGeoKey(System.IO.Stream,System.Int32,System.Int32)">
      <summary>Gets the specified GeoKey data from a TIFF stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the input file data.</param>
      <param name="pageNumber">1-based index of the page from which to read the GeoKey.</param>
      <param name="id">
        <para>GeoKey ID. Values of the GeoKey ID range between 0 and 65535. Possible ranges are:</para>
        <list type="table">
          <listheader>
            <term>Range</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0..1023</term>
            <description>Do not use; reserved for future use.</description>
          </item>
          <item>
            <term>1024..2047</term>
            <description>GeoTIFF Configuration Keys.</description>
          </item>
          <item>
            <term>2048..3071</term>
            <description>Geographic/Geocentric CS Parameter Keys.</description>
          </item>
          <item>
            <term>3072..4095</term>
            <description>Projected CS Parameter Keys.</description>
          </item>
          <item>
            <term>4096..5119</term>
            <description>Vertical CS Parameter Keys.</description>
          </item>
          <item>
            <term>5120..32767</term>
            <description>Reserved.</description>
          </item>
          <item>
            <term>32768..65535</term>
            <description>Private use - use to store your own data.</description>
          </item>
        </list>
      </param>
      <returns>The GeoKey data.</returns>
      <remarks>
        <para>You can use this method to obtain the GeoKey data from a particular file.</para>
        <para>If no such GeoKey exists in the image, this method will return a null reference (Nothing in Visual Basic).</para>
        <para>The most efficient way of reading the GeoKeys in a file is to enumerate them with <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" /> and 
            then read each GeoKey with <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKey(System.String,System.Int32,System.Int32)" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKey(System.String,System.Int32,System.Int32)" />.</example>
      <objectivec>
        <pre>-(LTRasterTagMetadata*)readGeoKey:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber tagId:(int)tagId error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterTagMetadata readGeoKey(ILeadStream stream, int pageNumber, int id)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteTag(System.String,System.Int32,Leadtools.RasterTagMetadata)">
      <summary>Writes or changes a tag to an existing file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains the file name.</param>
      <param name="pageNumber">1-based index of the page at which to write the tag.</param>
      <param name="tag">Tag to identify the data in the TIFF file.</param>
      <remarks>
        <para>This method writes tags into an existing file or changes tags in an existing file.</para>
        <para>This method works only with TIFF files.</para>
        <para>Note: Use this method carefully. LEADTOOLS will not restrict the tags that you write. If you write bad tags, the file
            might become corrupted. Consult the TIFF documentation for a list of predefined tags. It is recommended that you write only
            the user-defined tags (the tags between 0x8000 and 0xFFFF).</para>
        <para>See the TIFF documentation for a complete list of the TIFF tags and types.</para>
        <para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the comment. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)">DeleteTag</see>.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteTag(System.IO.Stream,System.Int32,Leadtools.RasterTagMetadata)">
      <summary>Writes or changes a tag to an existing stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the tag.</param>
      <param name="tag">Tag to identify the data in the TIFF file.</param>
      <remarks>
        <para>This method writes tags into an existing file or changes tags in an existing file.</para>
        <para>This method works only with TIFF files.</para>
        <para>Note: Use this method carefully. LEADTOOLS will not restrict the tags that you write. If you write bad tags, the file
            might become corrupted. Consult the TIFF documentation for a list of predefined tags. It is recommended that you write only
            the user-defined tags (the tags between 0x8000 and 0xFFFF).</para>
        <para>See the TIFF documentation for a complete list of the TIFF tags and types.</para>
        <para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the tag. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)">DeleteTag</see>.</example>
      <objectivec>
        <pre>-(BOOL)writeTag:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber tag:(LTRasterTagMetadata*)tag error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void writeTag(ILeadStream stream, int pageNumber, RasterTagMetadata tag)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteTags(System.String,System.Int32,Leadtools.RasterCollection{Leadtools.RasterTagMetadata})">
      <summary>
            Writes or changes one or more tags to an existing file.
            </summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains the file name.</param>
      <param name="pageNumber">1-based index of the page at which to write the tag.</param>
      <param name="tags">A collection of <see cref="T:Leadtools.RasterTagMetadata" /> objects to identify the data in the TIFF file.</param>
      <remarks>
        <para>This method writes tags into an existing file or changes tags in an existing file.</para>
        <para>This method works only with TIFF files.</para>
        <para>Note: Use this method carefully. LEADTOOLS will not restrict the tags that you write. If you write bad tags, the file
            might become corrupted. Consult the TIFF documentation for a list of predefined tags. It is recommended that you write only
            the user-defined tags (the tags between 0x8000 and 0xFFFF).</para>
        <para>See the TIFF documentation for a complete list of the TIFF tags and types.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the comment. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteTags(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterTagMetadata})">
      <summary>
            Writes or changes one or more tags to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the tag.</param>
      <param name="tags">A collection of <see cref="T:Leadtools.RasterTagMetadata" /> objects to identify the data in the TIFF file.</param>
      <remarks>
        <para>This method writes tags into an existing file or changes tags in an existing file.</para>
        <para>This method works only with TIFF files.</para>
        <para>Note: Use this method carefully. LEADTOOLS will not restrict the tags that you write. If you write bad tags, the file
            might become corrupted. Consult the TIFF documentation for a list of predefined tags. It is recommended that you write only
            the user-defined tags (the tags between 0x8000 and 0xFFFF).</para>
        <para>See the TIFF documentation for a complete list of the TIFF tags and types.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the comment. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</example>
      <objectivec>
        <pre>-(BOOL)writeTags:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber tags:(NSArray*)tags error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void writeTags(ILeadStream stream, int pageNumber, RasterCollection&lt;RasterTagMetadata&gt; tags)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteGeoKey(System.String,System.Int32,Leadtools.RasterTagMetadata)">
      <summary>Writes or changes a GeoKeys to an existing file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains the filename.</param>
      <param name="pageNumber">1-based index of the page at which to write the GeoKey.</param>
      <param name="geoKey">GeoKey to identify the data in the Geo TIFF file.</param>
      <remarks>
        <para>This method writes to or changes the GeoKeys in an existing file.</para>
        <para>This method works only with TIFF files. If you also want to write the other TIFF tags and comments, use
            <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarkers(System.String,System.Int32,Leadtools.RasterCollection{Leadtools.RasterMarkerMetadata})">WriteMarkers</see> instead.</para>
        <para>Note: Use this method carefully. LEADTOOLS will not restrict the GeoKeys that you write. If you write bad GeoKeys,
            the file might become corrupted. Consult the GeoTIFF specification documentation for a list of GeoKeys.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the GeoKey. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>
            This example will show all the GeoKeys in the given file and then load them and add them to a destination file
            <!--RasterCodecs.WriteGeoKey--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteGeoKey(System.IO.Stream,System.Int32,Leadtools.RasterTagMetadata)">
      <summary>Writes or changes a GeoKeys to an existing stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the GeoKey.</param>
      <param name="geoKey">GeoKey to identify the data in the Geo TIFF file.</param>
      <remarks>
        <para>This method writes to or changes the GeoKeys in an existing file.</para>
        <para>This method works only with TIFF files. If you also want to write the other TIFF tags and comments, use
            <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarkers(System.String,System.Int32,Leadtools.RasterCollection{Leadtools.RasterMarkerMetadata})">WriteMarkers</see> instead.</para>
        <para>Note: Use this method carefully. LEADTOOLS will not restrict the GeoKeys that you write. If you write bad GeoKeys,
            the file might become corrupted. Consult the GeoTIFF specification documentation for a list of GeoKeys.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the GeoKey. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteGeoKey(System.String,System.Int32,Leadtools.RasterTagMetadata)" />.</example>
      <objectivec>
        <pre>-(BOOL)writeGeoKey:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber geoKey:(LTRasterTagMetadata*)geoKey error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void writeGeoKey(ILeadStream stream, int pageNumber, RasterTagMetadata geoKey)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteGeoKeys(System.String,System.Int32,Leadtools.RasterCollection{Leadtools.RasterTagMetadata})">
      <summary>
            Writes or changes one or more GeoKeys to an existing file.
            </summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains the file name.</param>
      <param name="pageNumber">1-based index of the page at which to write the tag.</param>
      <param name="geoKeys">A collection of <see cref="T:Leadtools.RasterTagMetadata" /> GeoKey objects to identify the data in the TIFF file.</param>
      <remarks>
        <para>This method writes to or changes the GeoKeys in an existing file.</para>
        <para>This method works only with TIFF files. If you also want to write the other TIFF tags and comments, use
            <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarkers(System.String,System.Int32,Leadtools.RasterCollection{Leadtools.RasterMarkerMetadata})">WriteMarkers</see> instead.</para>
        <para>Note: Use this method carefully. LEADTOOLS will not restrict the GeoKeys that you write. If you write bad GeoKeys,
            the file might become corrupted. Consult the GeoTIFF specification documentation for a list of GeoKeys.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the GeoKey. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteGeoKeys(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterTagMetadata})">
      <summary>
            Writes or changes one or more GeoKeys to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the tag.</param>
      <param name="geoKeys">A collection of <see cref="T:Leadtools.RasterTagMetadata" /> GeoKey objects to identify the data in the TIFF file.</param>
      <remarks>
        <para>This method writes to or changes the GeoKeys in an existing file.</para>
        <para>This method works only with TIFF files. If you also want to write the other TIFF tags and comments, use
            <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarkers(System.String,System.Int32,Leadtools.RasterCollection{Leadtools.RasterMarkerMetadata})">WriteMarkers</see> instead.</para>
        <para>Note: Use this method carefully. LEADTOOLS will not restrict the GeoKeys that you write. If you write bad GeoKeys,
            the file might become corrupted. Consult the GeoTIFF specification documentation for a list of GeoKeys.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the GeoKey. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />.</example>
      <objectivec>
        <pre>-(BOOL)writeGeoKeys:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber geoKeys:(NSArray*)geoKeys error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void writeGeoKeys(ILeadStream stream, int pageNumber, RasterCollection&lt;RasterTagMetadata&gt; geoKeys)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)">
      <summary>Gets a comment field from a file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the input file name.</param>
      <param name="pageNumber">1-based index of the page from which to read the comment.</param>
      <param name="type">The type of comment. Refer to <see cref="T:L.Topics.FileComments">Types of File Comments</see>.</param>
      <returns>A <see cref="T:Leadtools.RasterCommentMetadata" /> object containing the comment field information.  If no such comment
            is found in the file, this method will return a null reference (Nothing in Visual Basic).</returns>
      <remarks>
        <para>Some file formats can contain comments, and some cannot, and each file format has its own set of comment types.
            When you save a file, the comments in the <see cref="T:Leadtools.RasterImage" /> object can be saved in the file. The index into the
            array (specified using a constant) determines the type of comment.</para>
        <para>You can use <see cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" /> to determine whether a certain file format supports tags.</para>
        <para>To read all the comments stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComments(System.String,System.Int32)" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <example>
            This example demonstrates all of the methods related to comments for TIFF files. It saves a few comments to a file before loading them back
            <!--RasterCodecs.Comments--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.IO.Stream,System.Int32,Leadtools.RasterCommentMetadataType)">
      <summary>Gets a comment field from a stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the input file data.</param>
      <param name="pageNumber">1-based index of the page from which to read the comment.</param>
      <param name="type">The type of comment. Refer to 
            <see cref="T:L.Topics.FileComments">Types of File Comments</see>.</param>
      <returns>A <see cref="T:Leadtools.RasterCommentMetadata" /> object containing the comment field information.  
            If no such comment
            is found in the file, this method will return a null reference (Nothing in Visual Basic).</returns>
      <remarks>
        <para>Some file formats can contain comments, and some cannot, and each file format has its 
            own set of comment types.
            When you save a file, the comments in the <see cref="T:Leadtools.RasterImage" /> object can be saved in the 
            file. The index into the
            array (specified using a constant) determines the type of comment.</para>
        <para>You can use <see cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" /> to determine whether a certain file format supports tags.</para>
        <para>To read all the comments stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComments(System.String,System.Int32)" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />.</example>
      <objectivec>
        <pre>-(LTRasterCommentMetadata*)readComment:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber type:(LTRasterCommentMetadataType)type error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterCommentMetadata readComment(ILeadStream stream, int pageNumber, RasterCommentMetadataType type)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.DeleteComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)">
      <summary>Deletes a comment field from a file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the input file name.</param>
      <param name="pageNumber">1-based index of the page from which to read the comment.</param>
      <param name="type">The type of comment. Refer to 
            <see cref="T:L.Topics.FileComments">Types of File Comments</see>.</param>
      <remarks>
        <para>Some file formats can contain comments, and some cannot, and each file format has its 
            own set of comment types.
            When you save a file, the comments in the <see cref="T:Leadtools.RasterImage" /> object can be saved in the 
            file. The index into the
            array (specified using a constant) determines the type of comment.</para>
        <para>You can use <see cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" /> to determine whether a certain file format supports tags.</para>
        <para>To read all the comments stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComments(System.String,System.Int32)" />.</para>
      </remarks>
      <example>
        <!--RasterCodecs.DeleteComment-->
      </example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.DeleteComment(System.IO.Stream,System.Int32,Leadtools.RasterCommentMetadataType)">
      <summary>Deletes a comment field from a file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the input file data.</param>
      <param name="pageNumber">1-based index of the page from which to read the comment.</param>
      <param name="type">The type of comment. Refer to 
            <see cref="T:L.Topics.FileComments">Types of File Comments</see>.</param>
      <remarks>
        <para>Some file formats can contain comments, and some cannot, and each file format has its 
            own set of comment types.
            When you save a file, the comments in the <see cref="T:Leadtools.RasterImage" /> object can be saved in the 
            file. The index into the
            array (specified using a constant) determines the type of comment.</para>
        <para>You can use <see cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" /> to determine whether a certain file format supports tags.</para>
        <para>To read all the comments stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComments(System.String,System.Int32)" />.</para>
      </remarks>
      <example>
        <!--RasterCodecs.DeleteComment-->
      </example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteComment(System.String,System.Int32,Leadtools.RasterCommentMetadata)">
      <summary>Writes a comment to an existing file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains the file name.</param>
      <param name="pageNumber">1-based index of the page at which to write the comment.</param>
      <param name="comment">A <see cref="T:Leadtools.RasterCommentMetadata" /> object containing the comment data.</param>
      <remarks>
        <para>This function only applies to TIF, uncompressed EXIF, or FPX files.</para>
        <para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the comment. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> 
            and <see cref="T:L.Topics.FileComments">Types of File Comments</see> topics for more information.</p>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <seealso cref="T:L.Topics.ImplementingExifFeatures">Implementing Exif Features</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteComment(System.IO.Stream,System.Int32,Leadtools.RasterCommentMetadata)">
      <summary>Writes a comment to an existing stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the comment.</param>
      <param name="comment">A <see cref="T:Leadtools.RasterCommentMetadata" /> object containing the comment data.</param>
      <remarks>
        <para>This function only applies to TIF, uncompressed EXIF, or FPX files.</para>
        <para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the comment. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> and 
            <see cref="T:L.Topics.FileComments">Types of File Comments</see> topics for more information.</p>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <seealso cref="T:L.Topics.ImplementingExifFeatures">Implementing Exif Features</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />.</example>
      <objectivec>
        <pre>-(BOOL)writeComment:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber comment:(LTRasterCommentMetadata*)comment error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void writeComment(ILeadStream stream, int pageNumber, RasterCommentMetadata comment)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteComments(System.String,System.Int32,Leadtools.RasterCollection{Leadtools.RasterCommentMetadata})">
      <summary>
            Writes one or more comments to an existing file.
            </summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains the file name.</param>
      <param name="pageNumber">1-based index of the page at which to write the comment.</param>
      <param name="comments">A collection of <see cref="T:Leadtools.RasterCommentMetadata" /> objects containing the comments data.</param>
      <remarks>
        <para>This function only applies to TIF, uncompressed EXIF, or FPX files.</para>
        <para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the comment. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExifFeatures">Implementing Exif Features</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteComments(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterCommentMetadata})">
      <summary>
            Writes one or more comments to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the input file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the comment.</param>
      <param name="comments">A collection of <see cref="T:Leadtools.RasterCommentMetadata" /> objects containing the comments data.</param>
      <remarks>
        <para>This function only applies to TIF, uncompressed EXIF, or FPX files.</para>
        <para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the comment. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExifFeatures">Implementing Exif Features</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />.</example>
      <objectivec>
        <pre>-(BOOL)writeComments:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber comments:(NSArray*)comments error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void writeComments(ILeadStream stream, int pageNumber, RasterCollection&lt;RasterCommentMetadata&gt; comments)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteMarker(System.String,System.Int32,Leadtools.RasterMarkerMetadata)">
      <summary>Writes a marker to an existing file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains the file name.</param>
      <param name="pageNumber">1-based index of the page at which to write the marker.</param>
      <param name="marker">A <see cref="T:Leadtools.RasterMarkerMetadata" /> object that contains the marker data.</param>
      <remarks>
        <para>For Exif files, this metadata collection will contain all the Exif and GPS comments, stored in APP1. It will also
            contain the audio information stored in APP2.</para>
        <para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para>
      </remarks>
      <example>
            This example read the markers from a source file and saving them to a destination file
            <!--RasterCodecs.Markers--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteMarker(System.IO.Stream,System.Int32,Leadtools.RasterMarkerMetadata)">
      <summary>Writes a marker to an existing stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the output file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the marker.</param>
      <param name="marker">A <see cref="T:Leadtools.RasterMarkerMetadata" /> object that contains the marker data.</param>
      <remarks>
        <para>For Exif files, this metadata collection will contain all the Exif and GPS comments, stored in APP1. It will also
            contain the audio information stored in APP2.</para>
        <para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarker(System.String,System.Int32,Leadtools.RasterMarkerMetadata)" />.</example>
      <objectivec>
        <pre>-(BOOL)writeMarker:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber marker:(LTRasterMarkerMetadata*)marker error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void writeMarker(ILeadStream stream, int pageNumber, RasterMarkerMetadata marker)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteMarkers(System.String,System.Int32,Leadtools.RasterCollection{Leadtools.RasterMarkerMetadata})">
      <summary>
            Writes one or more markers to an existing file.
            </summary>
      <param name="fileName">A <see cref="T:System.String" /> that contains the file name.</param>
      <param name="pageNumber">1-based index of the page at which to write the marker.</param>
      <param name="markers">A collection of <see cref="T:Leadtools.RasterMarkerMetadata" /> objects that contains the marker data.</param>
      <remarks>
        <para>For Exif files, this metadata collection will contain all the Exif and GPS comments, stored in APP1. It will also
            contain the audio information stored in APP2.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarker(System.String,System.Int32,Leadtools.RasterMarkerMetadata)" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteMarkers(System.IO.Stream,System.Int32,Leadtools.RasterCollection{Leadtools.RasterMarkerMetadata})">
      <summary>
            Writes one or more markers to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the output file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the marker.</param>
      <param name="markers">A collection of <see cref="T:Leadtools.RasterMarkerMetadata" /> objects that contains the marker data.</param>
      <remarks>
        <para>For Exif files, this metadata collection will contain all the Exif and GPS comments, stored in APP1. It will also
            contain the audio information stored in APP2.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarker(System.String,System.Int32,Leadtools.RasterMarkerMetadata)" />.</example>
      <objectivec>
        <pre>-(BOOL)writeMarkers:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber markers:(NSArray*)markers error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public void writeMarkers(ILeadStream stream, int pageNumber, RasterCollection&lt;RasterMarkerMetadata&gt; markers)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)">
      <summary>Performs a lossless transformation for certain formats. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="srcFileName">A <see cref="T:System.String" /> containing the name of the source file.</param>
      <param name="destFileName">A <see cref="T:System.String" /> containing the name of the destination file.</param>
      <param name="flags">
        <para>Indicates the transform to be performed.  Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsTransformFlags">CodecsTransformFlags.Flip</see>
            </term>
            <description>Flip the image vertically</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsTransformFlags">CodecsTransformFlags.Reverse</see>
            </term>
            <description>Reverse the image (flip horizontally)</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsTransformFlags">CodecsTransformFlags.Rotate90</see>
            </term>
            <description>Rotate the image clockwise by 90 degrees</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsTransformFlags">CodecsTransformFlags.Rotate180</see>
            </term>
            <description>Rotate the image clockwise by 180 degrees</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsTransformFlags">CodecsTransformFlags.Rotate270</see>
            </term>
            <description>Rotate the image clockwise by 270 degrees</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsTransformFlags">CodecsTransformFlags.None</see>
            </term>
            <description>Do nothing</description>
          </item>
        </list>
      </param>
      <param name="pageNumber">1-based index of the page within the source file to process.</param>
      <param name="callback">
        <para>Optional callback method for processing custom markers. (This is useful for rotating JPEG files only). When
            transforming JPEG files, the method will enumerate all the markers contained in the file and it will pass them to this
            callback. The user has the ability to control the transformation for all the markers. For additional information on JPEG
            markers, please consult the JPEG specification.</para>
        <para>
          <list type="bullet">
            <item>
              <description>If you do not provide a callback method, use a null reference (Nothing in Visual Basic) as the value of
            this parameter and no JPEG markers will be transformed</description>
            </item>
            <item>
              <description>If you do provide a callback method, use a delegate to a method that has the same signature as 
            <see cref="T:Leadtools.Codecs.CodecsTransformMarkerCallback" /> as the value of this parameter</description>
            </item>
          </list>
        </para>
      </param>
      <remarks>
        <para>Currently, only JPEG, CMP and JPEG TIFF formats are supported.</para>
        <para>Only one of the rotate flags can be specified.</para>
        <para>The files transformed by this method will be read transformed by other applications capable of reading these file
            formats.</para>
        <para>JPEG and Exif JPEG stamps are transformed according to the flags specified in <paramref name="flags" />. Please note
            that some JPEG stamps will not be transformed by this method. Specifically, stamps stored in markers other than APP0 and
            APP1 will not be transformed. Use the <paramref name="callback" /> parameter to handle these cases. For example, if a stamp
            is in the APP14 marker, check for this in the <paramref name="callback" /> and write your own stamp using
            <see cref="M:Leadtools.Codecs.RasterCodecs.SaveStamp(Leadtools.RasterImage,System.String)" />.</para>
        <para>
            For JPEG files, the size of the image might be changed. The image width and height
            is adjusted to be a multiple of 8 or 16 depending on the subsampling present in the
            image. If the image is 4:4:4, the width and height is adjusted to be a multiple of
            16. If the image is 422, the original width is adjusted to be a multiple of 16 and
            the height to be a multiple of 8. After rotation, the width might become height.
            If the image is 411, the width and height are adjusted to be a multiple of 16.
            </para>
        <para>The transformation is lossless. It is better than loading the image, transforming it using
            <see cref="T:Leadtools.ImageProcessing.RotateCommand" /> or <see cref="T:Leadtools.ImageProcessing.FlipCommand" /> and resaving it. Repeated load and save process will cause image
            degradation, but calling this method will not cause any image degradation.</para>
        <para>The rotation transformations are performed before the flip/reverse operations.</para>
        <para>Use the <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTransformMarker(System.Int32,System.Byte[],System.Int32,System.Int32)" /> method to control how the transform markers are used.</para>
      </remarks>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:Leadtools.Topics.ProcessingAnImage">Introduction to Image Processing With LEADTOOLS</seealso>
      <example>
            This example will use the JPEG transformation to rotate a file by 90 degrees
            <!--RasterCodecs.Transform--></example>
      <java>
        <pre>public void transform(String srcFileName, String destFileName, CodecsTransformFlags flags, int pageNumber, CodecsTransformMarkerListener callback)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteTransformMarker(System.Int32,System.Byte[],System.Int32,System.Int32)">
      <summary>Controls how the transform markers are used when performing a lossless transformation for certain formats. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="id">The id of the metadata marker.</param>
      <param name="data">A byte array containing the data for the metadata marker.</param>
      <param name="dataOffset">Offset into <paramref name="data" /> into which to begin the read operation.</param>
      <param name="dataLength">Number of bytes to read from <paramref name="data" />.</param>
      <remarks>
        <para>You should use this method to write a certain marker data into the file.</para>
        <para>This method can be called only from within the <see cref="T:Leadtools.Codecs.CodecsTransformMarkerCallback" /> passed to the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)" /> method.</para>
        <para>The transform mechanism is as follows:</para>
        <para>
          <list type="bullet">
            <item>
              <description>You call <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)" />.</description>
            </item>
            <item>
              <description>
                <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)" /> will call the <see cref="T:Leadtools.Codecs.CodecsTransformMarkerCallback" /> callback passed to it
            for every marker contained in the source file. In the callback, you can replace markers, insert markers or allow LEADTOOLS
            to do the default processing (<strong>recommended</strong>).</description>
            </item>
            <item>
              <description>You can override the default action for a marker by returning one of the following values from the
            transform callback:
            <list type="bullet"><item><description><see cref="T:Leadtools.Codecs.CodecsTransformMarkerAction">CodecsTransformMarkerAction.Default</see>:
            Let LEADTOOLS perform the default action on the marker. This means the marker might (or might not) be transformed and will
            be written to the destination file.</description></item><item><description><see cref="T:Leadtools.Codecs.CodecsTransformMarkerAction">CodecsTransformMarkerAction.Ignore</see>: This marker will be
            ignored (this is useful for stripping unwanted markers). You should also use this if you want to do your own
            transformation and write the marker yourself by calling <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTransformMarker(System.Int32,System.Byte[],System.Int32,System.Int32)" />.</description></item><item><description><see cref="T:Leadtools.Codecs.CodecsTransformMarkerAction">CodecsTransformMarkerAction.Abort</see>: Abort the process.
            This will cause <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)" /> to throw a 'user-abort' exception.</description></item></list></description>
            </item>
          </list>
        </para>
        <para>Note: You can also use <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTransformMarker(System.Int32,System.Byte[],System.Int32,System.Int32)" /> to insert your own markers. The marker will be inserted
            before the current marker. You can call <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTransformMarker(System.Int32,System.Byte[],System.Int32,System.Int32)" /> as many times as you wish. Every call to
            <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTransformMarker(System.Int32,System.Byte[],System.Int32,System.Int32)" /> will insert a new marker.</para>
        <para>
          <strong>Warning</strong>: Incorrect handling of the markers will generate corrupt files!  Since some markers contain
            important information about the image (image width, height, compression method, colorspace, etc), you should use caution
            when working with markers.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)" />.</example>
      <java>
        <pre>public void writeTransformMarker(int id, byte data[], int dataOffset, int dataLength)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteTransformMarker(System.Int32,System.IntPtr,System.Int32)">
      <summary>Controls how the transform markers are used when performing a lossless transformation for certain formats. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="id">The id of the metadata marker.</param>
      <param name="data">A pointer to unmanaged memory buffer containing the data for the metadata marker.</param>
      <param name="dataLength">Number of bytes to read from <paramref name="data" />.</param>
      <remarks>
        <para>You should use this method to write a certain marker data into the file.</para>
        <para>This method can be called only from within the <see cref="T:Leadtools.Codecs.CodecsTransformMarkerCallback" /> passed to the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)" /> method.</para>
        <para>The transform mechanism is as follows:</para>
        <para>
          <list type="bullet">
            <item>
              <description>You call <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)" />.</description>
            </item>
            <item>
              <description>
                <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)" /> will call the <see cref="T:Leadtools.Codecs.CodecsTransformMarkerCallback" /> callback passed to it
            for every marker contained in the source file. In the callback, you can replace markers, insert markers or allow LEADTOOLS
            to do the default processing (<strong>recommended</strong>).</description>
            </item>
            <item>
              <description>You can override the default action for a marker by returning one of the following values from the
            transform callback:
            <list type="bullet"><item><description><see cref="T:Leadtools.Codecs.CodecsTransformMarkerAction">CodecsTransformMarkerAction.Default</see>:
            Let LEADTOOLS perform the default action on the marker. This means the marker might (or might not) be transformed and will
            be written to the destination file.</description></item><item><description><see cref="T:Leadtools.Codecs.CodecsTransformMarkerAction">CodecsTransformMarkerAction.Ignore</see>: This marker will be
            ignored (this is useful for stripping unwanted markers). You should also use this if you want to do your own
            transformation and write the marker yourself by calling <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTransformMarker(System.Int32,System.Byte[],System.Int32,System.Int32)" />.</description></item><item><description><see cref="T:Leadtools.Codecs.CodecsTransformMarkerAction">CodecsTransformMarkerAction.Abort</see>: Abort the process.
            This will cause <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)" /> to throw a 'user-abort' exception.</description></item></list></description>
            </item>
          </list>
        </para>
        <para>Note: You can also use <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTransformMarker(System.Int32,System.Byte[],System.Int32,System.Int32)" /> to insert your own markers. The marker will be inserted
            before the current marker. You can call <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTransformMarker(System.Int32,System.Byte[],System.Int32,System.Int32)" /> as many times as you wish. Every call to
            <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTransformMarker(System.Int32,System.Byte[],System.Int32,System.Int32)" /> will insert a new marker.</para>
        <para>
          <strong>Warning</strong>: Incorrect handling of the markers will generate corrupt files!  Since some markers contain
            important information about the image (image width, height, compression method, colorspace, etc), you should use caution
            when working with markers.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Transform(System.String,System.String,Leadtools.Codecs.CodecsTransformFlags,System.Int32,Leadtools.Codecs.CodecsTransformMarkerCallback)" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)">
      <summary>Initializes the buffered compression engine. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="width">The image being compressed width in pixels.</param>
      <param name="height">The image being compressed height in pixels.</param>
      <param name="bitsPerPixel">The image being compressed bits/pixel value.</param>
      <param name="order">The image being compressed byte order.</param>
      <param name="viewPerspective">The image being compressed view perspective value.</param>
      <param name="inputDataLength">Size in bytes of the input image data.</param>
      <param name="outputData">Array of bytes which will be filled with the compressed data.</param>
      <param name="outputDataIndex">Index into <paramref name="outputData" /> where the compressed data should be inserted.</param>
      <param name="outputDataLength">Size of <paramref name="outputData" /> in bytes.</param>
      <param name="compression">
        <para>Type of compression to use. Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Cmp</see>
            </term>
            <description>LEAD CMP compression format</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg444</see>
            </term>
            <description>JPEG File Interchange Format using YUV 4:4:4 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg422</see>
            </term>
            <description>JPEG File Interchange Format using YUV 4:2:2 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg411</see>
            </term>
            <description>JPEG File Interchange Format using YUV 4:1:1 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg444</see>
            </term>
            <description>JPEG JTIF using YUV 4:4:4 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg422</see>
            </term>
            <description>JPEG JTIF using YUV 4:2:2 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg411</see>
            </term>
            <description>JPEG JTIF using YUV 4:1:1 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead0</see>
            </term>
            <description>LEAD 1 bit, lossless compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead1</see>
            </term>
            <description>LEAD 1 bit, excellent compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcitt</see>
            </term>
            <description>TIFF CCITT</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax1Dim</see>
            </term>
            <description>CCITT Group 3 one dimensional</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax2Dim</see>
            </term>
            <description>CCITT Group 3 two dimensional</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG4Fax</see>
            </term>
            <description>CCITT Group 4 two dimensional</description>
          </item>
        </list>
      </param>
      <param name="callback">The callback method responsible for writing or handling the compressed data.</param>
      <remarks>
        <para>This method initializes the buffered compression engine. The compression is then carried out using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Compress(System.Byte[],System.Int32)" /> method. It is ended by the <see cref="M:Leadtools.Codecs.RasterCodecs.StopCompress" /> method.</para>
        <para>If <paramref name="order" /> is set to to <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> and
            <paramref name="viewPerspective" /> is <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft</see> then the
            data that you put into the input buffer must be <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> and loaded from top
            left.</para>
        <para>The compression process starts after the first call to <see cref="M:Leadtools.Codecs.RasterCodecs.Compress(System.Byte[],System.Int32)" />. The <paramref name="callback" />
            is called when the output buffer is filled with compressed data or after completing the compression process.
            <paramref name="callback" /> is responsible for emptying the output buffer - storing it, sending it, or doing other
            processing.</para>
        <para>The following is a flow chart that shows the relationship of these methods:</para>
        <para>
          <img src="CompressBuffer.gif" />
        </para>
        <para>Call <see cref="M:Leadtools.Codecs.RasterCodecs.StopCompress" /> to end the compression process started by a call to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.</para>
        <para>The quality factor of the compressed data is obtained as follows:
            <list type="table"><listheader><term>Format</term><description>Quality factor used</description></listheader><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Cmp</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see> and
            <see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.CmpQualityFactorPredefined">CodecsJpegSaveOptions.CmpQualityFactorPredefined</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg444</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg422</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg411</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg444</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg422</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg411</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead0</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead1</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcitt</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax1Dim</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax2Dim</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG4Fax</see></term><description>Not used</description></item></list></para>
        <para>This method does not support signed data images.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>
            This example demonstrates low-level image compression using <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />, <see cref="M:Leadtools.Codecs.RasterCodecs.Compress(System.Byte[],System.Int32)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.StopCompress" />.
            The callback method for writing the output is included at the end of the example
            <!--RasterCodecs.Compress--></example>
      <java>
        <pre>public void startCompress(int width, int height, int bitsPerPixel, RasterByteOrder order, RasterViewPerspective viewPerspective, int inputDataLength, byte[] outputData, int outputDataIndex, int outputDataLength, CodecsCompression compression, CodecsCompressDataListener callback)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.IntPtr,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)">
      <summary>Initializes the unmanaged memory buffered compression engine. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="width">The image being compressed width in pixels.</param>
      <param name="height">The image being compressed height in pixels.</param>
      <param name="bitsPerPixel">The image being compressed bits/pixel value.</param>
      <param name="order">The image being compressed byte order.</param>
      <param name="viewPerspective">The image being compressed view perspective value.</param>
      <param name="inputDataLength">Size in bytes of the input image data.</param>
      <param name="outputData">Pointer to unmanaged memory buffer will be filled with the compressed data.</param>
      <param name="outputDataLength">Size of <paramref name="outputData" /> in bytes.</param>
      <param name="compression">
        <para>Type of compression to use. Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Cmp</see>
            </term>
            <description>LEAD CMP compression format</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg444</see>
            </term>
            <description>JPEG File Interchange Format using YUV 4:4:4 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg422</see>
            </term>
            <description>JPEG File Interchange Format using YUV 4:2:2 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg411</see>
            </term>
            <description>JPEG File Interchange Format using YUV 4:1:1 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg444</see>
            </term>
            <description>JPEG JTIF using YUV 4:4:4 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg422</see>
            </term>
            <description>JPEG JTIF using YUV 4:2:2 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg411</see>
            </term>
            <description>JPEG JTIF using YUV 4:1:1 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead0</see>
            </term>
            <description>LEAD 1 bit, lossless compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead1</see>
            </term>
            <description>LEAD 1 bit, excellent compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcitt</see>
            </term>
            <description>TIFF CCITT</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax1Dim</see>
            </term>
            <description>CCITT Group 3 one dimensional</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax2Dim</see>
            </term>
            <description>CCITT Group 3 two dimensional</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG4Fax</see>
            </term>
            <description>CCITT Group 4 two dimensional</description>
          </item>
        </list>
      </param>
      <param name="callback">The callback method responsible for writing or handling the compressed data.</param>
      <remarks>
        <para>This method initializes the buffered compression engine. The compression is then carried out using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Compress(System.Byte[],System.Int32)" /> method. It is ended by the <see cref="M:Leadtools.Codecs.RasterCodecs.StopCompress" /> method.</para>
        <para>If <paramref name="order" /> is set to to <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> and
            <paramref name="viewPerspective" /> is <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft</see> then the
            data that you put into the input buffer must be <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> and loaded from top
            left.</para>
        <para>The compression process starts after the first call to <see cref="M:Leadtools.Codecs.RasterCodecs.Compress(System.Byte[],System.Int32)" />. The <paramref name="callback" />
            is called when the output buffer is filled with compressed data or after completing the compression process.
            <paramref name="callback" /> is responsible for emptying the output buffer - storing it, sending it, or doing other
            processing.</para>
        <para>The following is a flow chart that shows the relationship of these methods:</para>
        <para>
          <img src="CompressBuffer.gif" />
        </para>
        <para>Call <see cref="M:Leadtools.Codecs.RasterCodecs.StopCompress" /> to end the compression process started by a call to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.</para>
        <para>The quality factor of the compressed data is obtained as follows:
            <list type="table"><listheader><term>Format</term><description>Quality factor used</description></listheader><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Cmp</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see> and
            <see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.CmpQualityFactorPredefined">CodecsJpegSaveOptions.CmpQualityFactorPredefined</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg444</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg422</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg411</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg444</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg422</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg411</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead0</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead1</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcitt</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax1Dim</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax2Dim</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG4Fax</see></term><description>Not used</description></item></list></para>
        <para>This method does not support signed data images.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.</example>
      <objectivec>
        <pre>
-(BOOL)startCompress:(unsigned int)width
              height:(unsigned int)height
        bitsPerPixel:(unsigned int)bitsPerPixel
               order:(LTRasterByteOrder)order
     viewPerspective:(LTRasterViewPerspective)viewPerspective
     inputDataLength:(size_t)inputDataLength
          outputData:(unsigned char*)outputData
    outputDataLength:(size_t)outputDataLength
         compression:(LTCodecsCompression)compression
            callback:(LTCodecsCompressDataCallback)callback
               error:(NSError**)outError;            </pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Compress(System.Byte[],System.Int32)">
      <summary>Does buffer-to-buffer JPEG or LEAD CMP compression. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="data">Array of bytes that holds the data to be compressed.</param>
      <param name="dataIndex">Index into <paramref name="data" /> where the data starts.</param>
      <remarks>
            You must call <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" /> before using this method, and you must call <see cref="M:Leadtools.Codecs.RasterCodecs.StopCompress" /> to end
            the compression process. For a description of how these methods work together, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.
            </remarks>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.</example>
      <java>
        <pre>public void compress(byte data[], int dataIndex)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Compress(System.IntPtr)">
      <summary>Does buffer-to-buffer JPEG or LEAD CMP compression using an unmanaged memory buffer. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="data">Pointer to unmanaged memory that holds the data to be compressed.</param>
      <remarks>
            You must call <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" /> before using this method, and you must call <see cref="M:Leadtools.Codecs.RasterCodecs.StopCompress" /> to end
            the compression process. For a description of how these methods work together, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.
            </remarks>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.</example>
      <objectivec>
        <pre>-(BOOL)compress:(unsigned char*)data error:(NSError**)outError;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StopCompress">
      <summary>Cleans up all data variables and buffers allocated by the JPEG or LEAD CMP compression engine. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
            Calling this method will reset all internal variables to their default settings. Call this method after the compression of
            the entire image using <see cref="M:Leadtools.Codecs.RasterCodecs.Compress(System.Byte[],System.Int32)" />. For a detailed description of when to use this method, refer to
            <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.
            </remarks>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.</example>
      <objectivec>
        <pre>-(void)stopCompress;</pre>
      </objectivec>
      <java>
        <pre>public void stopCompress()</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">
      <summary>Initializes the buffered decompression engine. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="options">Provides input parameters for the decompression process.</param>
      <returns>An object that identifies the decompression process.  This same object must be passed to the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Decompress(System.Object,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsDecompressDataFlags)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.StopDecompress(System.Object)" /> methods.</returns>
      <remarks>
        <para>Initializes the buffered decompression engine. The decompression is then carried out using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Decompress(System.Object,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsDecompressDataFlags)" /> method. It is ended by the <see cref="M:Leadtools.Codecs.RasterCodecs.StopDecompress(System.Object)" /> method.</para>
        <para>Currently, raw JPEG must contain all the Huffman tables encoded. That is, it must be a readable JPEG file.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>
        <!--RasterCodecs.Decompress-->
      </example>
      <objectivec>
        <pre>-(NSObject*)startDecompress:(LTCodecsStartDecompressOptions*)decompressOptions error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public Object startDecompress(CodecsStartDecompressOptions options)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Decompress(System.Object,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsDecompressDataFlags)">
      <summary>Called for each buffer, strip or tile of decompressed data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="decompressContext">The decompressing context object obtained through <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)" />.</param>
      <param name="data">An array of bytes that contains the raw compressed data.</param>
      <param name="dataOffset">Offset of the strip referenced by <paramref name="data" />, This is usually zero.</param>
      <param name="dataLength">Number of bytes in <paramref name="data" />.</param>
      <param name="width">Width of the uncompressed strip or tile, in bytes</param>
      <param name="height">Height of the uncompressed strip or tile, in bytes. If the image consists of a single compressed
            strip, as with TWAIN, this is the height of the image.</param>
      <param name="row">Row offset of the tile or strip.</param>
      <param name="column">Column offset of the tile or strip.</param>
      <param name="flags">
        <para>Flags that indicate whether which part of a strip or tile is being processed. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.Start</see>
            </term>
            <description>Processing the beginning of a tile or strip</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.End</see>
            </term>
            <description>Processing the end of a tile or strip</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.Complete</see>
            </term>
            <description>Process a complete tile or strip. This is the same as
            <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.Start</see> |
            <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.End</see></description>
          </item>
        </list>
      </param>
      <remarks>
        <para>Note that you must call the <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)" /> method before using this method, and you must call the
            <see cref="M:Leadtools.Codecs.RasterCodecs.StopDecompress(System.Object)" /> method to end the decompression process.</para>
        <para>If <paramref name="data" /> does not point to a full tile or strip, set <paramref name="flags" /> to
            <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.Start</see> when the tile/strip begins and set it to
            <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.End</see> when the tile/strip ends.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)" />.</example>
      <objectivec>
        <pre>
-(BOOL)decompress:(NSObject*)decompressContext
             data:(const unsigned char*)data
       dataOffset:(size_t)dataOffset
       dataLength:(size_t)dataLength
            width:(unsigned int)width
           height:(unsigned int)height
              row:(unsigned int)row
           column:(unsigned int)column
            flags:(LTCodecsDecompressDataFlags)flags
            error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public void decompress(Object decompressContext, byte data[], int dataOffset, int dataLength, int width, int height, int row, int column, CodecsDecompressDataFlags flags)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Decompress(System.Object,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsDecompressDataFlags)">
      <summary>Called for each unmanaged memory buffer, strip or tile of decompressed data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="decompressContext">The decompressing context object obtained through <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)" />.</param>
      <param name="data">A pointer to an unmanaged memory buffer that contains the raw compressed data.</param>
      <param name="dataOffset">Offset of the strip referenced by <paramref name="data" />, This is usually zero.</param>
      <param name="dataLength">Number of bytes in <paramref name="data" />.</param>
      <param name="width">Width of the uncompressed strip or tile, in bytes</param>
      <param name="height">Height of the uncompressed strip or tile, in bytes. If the image consists of a single compressed
            strip, as with TWAIN, this is the height of the image.</param>
      <param name="row">Row offset of the tile or strip.</param>
      <param name="column">Column offset of the tile or strip.</param>
      <param name="flags">
        <para>Flags that indicate whether which part of a strip or tile is being processed. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.Start</see>
            </term>
            <description>Processing the beginning of a tile or strip</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.End</see>
            </term>
            <description>Processing the end of a tile or strip</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.Complete</see>
            </term>
            <description>Process a complete tile or strip. This is the same as
            <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.Start</see> |
            <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.End</see></description>
          </item>
        </list>
      </param>
      <remarks>
        <para>Note that you must call the <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)" /> method before using this method, and you must call the
            <see cref="M:Leadtools.Codecs.RasterCodecs.StopDecompress(System.Object)" /> method to end the decompression process.</para>
        <para>If <paramref name="data" /> does not point to a full tile or strip, set <paramref name="flags" /> to
            <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.Start</see> when the tile/strip begins and set it to
            <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.End</see> when the tile/strip ends.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StopDecompress(System.Object)">
      <summary>Ends the decompression process and cleans up all the variables and buffers allocated. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="decompressContext">The decompressing context object obtained through <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)" />.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object created from decompressing the input image data.</returns>
      <remarks>
        <para>This method will end the decompression process and cleans up all the variables and buffers allocated by the
            <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.Decompress(System.Object,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsDecompressDataFlags)" />.</para>
        <para>Call this method after the decompression of the entire image using <see cref="M:Leadtools.Codecs.RasterCodecs.Decompress(System.Object,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsDecompressDataFlags)" />.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)" />.</example>
      <objectivec>
        <pre>-(LTRasterImage*)stopDecompress:(NSObject*)decompressContext error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage stopDecompress(Object decompressContext)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetPcdResolution(System.String)">
      <summary>Examines a PhotoCD file to determine which resolutions it contains. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the PhotoCD file.</param>
      <returns>An array of 6 boolean values that specifies if the resolution at the corresponding index exists.</returns>
      <remarks>
        <para>For the returned array of booleans, <strong>true</strong> means the corresponding resolution at this index exist in
            the file, while <strong>false</strong> means the corresponding resolution at the index does not exist in the file.</para>
        <para>The following table defines the resolution value at each index:</para>
        <list type="table">
          <listheader>
            <term>Index</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0 (PCD Base Over 64)</term>
            <description>Resolution 64 x 96</description>
          </item>
          <item>
            <term>1 (PCD Base Over 16)</term>
            <description>Resolution 128 x 192</description>
          </item>
          <item>
            <term>2 (PCD Base Over 4)</term>
            <description>Resolution 256 x 384</description>
          </item>
          <item>
            <term>3 (PCD Base)</term>
            <description>Resolution 512 x 768</description>
          </item>
          <item>
            <term>4 (PCD 4 Base)</term>
            <description>Resolution 1024 x 1536</description>
          </item>
          <item>
            <term>5 (PCD 16 Base)</term>
            <description>Resolution 2048 x 3072</description>
          </item>
        </list>
      </remarks>
      <example>
             This example checks for a high resolution PCD image and loads it if possible.
            <!--RasterCodecs.GetPcdResolution--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">
      <summary>Loads the specified layer from the specified PSD file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to load.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">The desired color order.</param>
      <param name="layer">Index of the layer to load. This index is zero-based. Pass 0 to load the first layer,
            1 to load the second layer, etc.</param>
      <param name="layerInfo">a <see cref="T:Leadtools.Codecs.CodecsPsdLayerInfo" /> object to be updated with information about the
            loaded layer. Pass a null reference (Nothing in Visual Basic) for this parameter if layer information is not needed.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <remarks>
        <para>Use this method to load PSD files only.</para>
        <para>This method works similarly to a normal <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods, except that it loads only a layer from a
            PSD file. It loads the layer specified in <paramref name="layer" />.</para>
        <para>Before calling this method, you may need to get or set file information, such as the number of layers on
            the file. Refer to <see cref="T:Leadtools.Codecs.CodecsPsdImageInfo" />.</para>
        <para>The number of layers in a file is indicated in <see cref="P:Leadtools.Codecs.CodecsPsdImageInfo.Layers">CodecsPsdImageInfo.Layers</see>.
            If this number is 0, the file does not contains any layers and this method should not be called.</para>
      </remarks>
      <example>
            This example will create and save a PSD with layers before re-loading the first layer back
            <!--RasterCodecs.LoadPsdLayer--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadPsdChannel(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdChannelInfo)">
      <summary>Loads the specified channel from the specified PSD file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to load.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">The desired color order.</param>
      <param name="channelIndex">Index of the channel to load. This index is zero-based. Pass 0 to load the first channel,
            1 to load the second channel, etc.</param>
      <param name="channelInfo">a <see cref="T:Leadtools.Codecs.CodecsPsdChannelInfo" /> object to be updated with information about the
            loaded channel. Pass a null reference (Nothing in Visual Basic) for this parameter if channel information is not needed.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <remarks>
        <para>Use this method to load PSD files only.</para>
        <para>This method works similarly to a normal <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods, except that it loads only a channel from a
            PSD file. It loads the channel specified in <paramref name="channelIndex" />.</para>
        <para>Before calling this method, you may need to get or set file information, such as the number of channels on
            the file. Refer to <see cref="T:Leadtools.Codecs.CodecsPsdImageInfo" />.</para>
        <para>The number of channels in a file is indicated in <see cref="P:Leadtools.Codecs.CodecsPsdImageInfo.Channels">CodecsPsdImageInfo.Channels</see>.
            If this number is 0, the file does not contains any channels and this method should not be called.</para>
      </remarks>
      <example>
            This example loads all channels from a PSD file
            <!--RasterCodecs.LoadPsdChannel--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">
      <summary>Saves an image to a PSD file, along with the specified layers. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="image">The image to save.</param>
      <param name="fileName">The output file name.</param>
      <param name="bitsPerPixel">Resulting file's pixel depth. For color images this can be 24 or 32. For grayscale images this
            can be 8.</param>
      <param name="layerImages">An <see cref="T:Leadtools.RasterImage" /> object that contains layers (in each page) to save in the output
            file. The layers should have the same bits per pixel as the file. Every page in the image will be saved as a
            layer. The first page in the image will be interpreted as the first layer. The pages in the image must have the
            same bits per pixel as specified in <paramref name="bitsPerPixel" />.</param>
      <param name="layerInfos">An optional array of <see cref="T:Leadtools.Codecs.CodecsPsdLayerInfo" /> objects. If this is a null reference
            (Nothing in Visual Basic), then each layer will start at (0, 0) and will have the same size as the image. If this is not
            a null reference (Nothing in Visual Basic), then the layer information for each layer in <paramref name="layerInfos" />
            will be stored here.The number of <see cref="T:Leadtools.Codecs.CodecsPsdLayerInfo" /> objects must be the same as the number of pages in
            <paramref name="layerImages" />.
            </param>
      <remarks>
            Use this method to save PSD files with layers.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.CompactFile(System.String,System.String,System.Int32)">
      <summary>Compacts TIFF files with default options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="srcFileName">A <see cref="T:System.String" /> containing the name of the file being compacted. All the pages will be
            read from this file.</param>
      <param name="destFileName">A <see cref="T:System.String" /> containing the name of the file in which all the pages will be written.</param>
      <param name="pages">Value that represents the number of pages to copy. Use 0 to copy all the pages. If
            <paramref name="pages" /> is &gt; 0, only <paramref name="pages" /> will be copied to <paramref name="destFileName" />.</param>
      <remarks>
        <para>
            This method can also be used to copy or extract one or more pages from a TIFF file and 
            copy them without recompression to another TIFF file. Whenever you save an image 
            containing a region as a TIFF file format, the region is also saved. Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit. 
            </para>
      </remarks>
      <example>
        <!--RasterCodecs.CompactFile-->
      </example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.CompactFile(System.IO.Stream,System.IO.Stream,System.Int32)">
      <summary>Compacts TIFF streams with default options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="srcStream">A <see cref="T:System.IO.Stream" /> containing the data for the file being compacted. All the pages will be
            read from this stream.</param>
      <param name="destStream">A <see cref="T:System.IO.Stream" /> that will contain the data written.</param>
      <param name="pages">Value that represents the number of pages to copy. Use 0 to copy all the pages. If
            <paramref name="pages" /> is &gt; 0, only <paramref name="pages" /> will be copied to <paramref name="destStream" />.</param>
      <remarks>
        <para>
            This method can also be used to copy or extract one or more pages from a TIFF file and 
            copy them without recompression to another TIFF file. Whenever you save an image 
            containing a region as a TIFF file format, the region is also saved. Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit. 
            </para>
      </remarks>
      <example>For an an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.CompactFile(System.String,System.String,System.Int32)" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.CompactFile(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Int32,Leadtools.Codecs.CodecsSavePageMode,System.Boolean,System.Boolean)">
      <summary>Compacts TIFF files with specific options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="srcFileName">A <see cref="T:System.String" /> containing the name of the file being compacted. All the pages will be
            read from this file.</param>
      <param name="destFileName">A <see cref="T:System.String" /> containing the name of the file in which all the pages will be written.</param>
      <param name="pages">Value that represents the number of pages to copy. Use 0 to copy all the pages. If
            <paramref name="pages" /> is &gt; 0, only <paramref name="pages" /> will be copied to <paramref name="destFileName" />.</param>
      <param name="srcStartPage">Specifies the start page in the source file. Page 1 is the first page, page 2 is the second page,
            etc. The pages will be read starting with this page.</param>
      <param name="useSrcIfd">true to use <paramref name="srcIfd" /> as the file offset of the first page.  false to use
            <paramref name="srcStartPage" />.</param>
      <param name="srcIfd">
        <para>Offset into the source file for the start page.  Used only if <paramref name="useSrcIfd" /> is true.</para>
        <para>All pages will be relative to that page. (Note that this might not be the first physical page in the file). This is
            a common technique for manipulating files with thousands of pages.</para>
      </param>
      <param name="destStartPage">0 to overwrite <paramref name="destFileName" />. &lt;&gt;0 to append the pages to the end
            of the file.</param>
      <param name="useDestIfd">true to use <paramref name="destIfd" /> as the file offset of the first page.  false to use
            <paramref name="destStartPage" />.</param>
      <param name="destIfd">
        <para>Offset into the destination file for the start page.  Used only if <paramref name="useDestIfd" /> is true.</para>
        <para>All pages will be relative to that page. (Note that this might not be the first physical page in the file). This
            is a common technique for manipulating files with thousands of pages.</para>
      </param>
      <param name="pageMode">
            Flag which indicates the save page mode.
            <list type="table"><listheader><term>Value</term><description>Meaning</description></listheader><item><term><see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Insert</see></term><description>All pages are inserted before <paramref name="destStartPage" />.</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Replace</see></term><description>Pages in <paramref name="destFileName" /> are replaced beginning with <paramref name="destStartPage" />.</description></item></list></param>
      <param name="noSubFileType">true to have the <strong>TGSUBFILETYPE</strong> tag stripped from all pages in the destination
            file.</param>
      <param name="motorolaOrder">true to save pages in Motorola byte order. false to save pages in Intel byte order. This only
            applies when creating a new file. When updating existing files, the byte order of the original file is used.</param>
      <remarks>
        <para>
            This method can also be used to copy or extract one or more pages from a TIFF file and 
            copy them without recompression to another TIFF file. Whenever you save an image 
            containing a region as a TIFF file format, the region is also saved. Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.CompactFile(System.String,System.String,System.Int32)" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.CompactFile(System.IO.Stream,System.IO.Stream,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Int32,Leadtools.Codecs.CodecsSavePageMode,System.Boolean,System.Boolean)">
      <summary>Compacts TIFF streams with specific options. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="srcStream">A <see cref="T:System.IO.Stream" /> containing the data of the file being compacted. All the pages will be
            read from this stream.</param>
      <param name="destStream">A <see cref="T:System.IO.Stream" /> that will contain the written data.</param>
      <param name="pages">Value that represents the number of pages to copy. Use 0 to copy all the pages. If
            <paramref name="pages" /> is &gt; 0, only <paramref name="pages" /> will be copied to <paramref name="destStream" />.</param>
      <param name="srcStartPage">Specifies the start page in the source stream. Page 1 is the first page, page 2 is the second page,
            etc. The pages will be read starting with this page.</param>
      <param name="useSrcIfd">true to use <paramref name="srcIfd" /> as the stream offset of the first page.  false to use
            <paramref name="srcStartPage" />.</param>
      <param name="srcIfd">
        <para>Offset into the source stream for the start page.  Used only if <paramref name="useSrcIfd" /> is true.</para>
        <para>All pages will be relative to that page. (Note that this might not be the first physical page in the stream). This is
            a common technique for manipulating files with thousands of pages.</para>
      </param>
      <param name="destStartPage">0 to overwrite <paramref name="destStream" />. &lt;&gt;0 to append the pages to the end
            of the stream.</param>
      <param name="useDestIfd">true to use <paramref name="destIfd" /> as the stream offset of the first page.  false to use
            <paramref name="destStartPage" />.</param>
      <param name="destIfd">
        <para>Offset into the destination stream for the start page.  Used only if <paramref name="useDestIfd" /> is true.</para>
        <para>All pages will be relative to that page. (Note that this might not be the first physical page in the stream). This
            is a common technique for manipulating files with thousands of pages.</para>
      </param>
      <param name="pageMode">
            Flag which indicates the save page mode.
            <list type="table"><listheader><term>Value</term><description>Meaning</description></listheader><item><term><see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Insert</see></term><description>All pages are inserted before <paramref name="destStartPage" />.</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Replace</see></term><description>Pages in <paramref name="destStream" /> are replaced beginning with <paramref name="destStartPage" />.</description></item></list></param>
      <param name="noSubFileType">true to have the <strong>TGSUBFILETYPE</strong> tag stripped from all pages in the destination
            file.</param>
      <param name="motorolaOrder">true to save pages in Motorola byte order. false to save pages in Intel byte order. This only
            applies when creating a new file. When updating existing files, the byte order of the original file is used.</param>
      <remarks>
        <para>
            This method can also be used to copy or extract one or more pages from a TIFF file and 
            copy them without recompression to another TIFF file. Whenever you save an image 
            containing a region as a TIFF file format, the region is also saved. Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.CompactFile(System.String,System.String,System.Int32)" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadCmykPlanes(System.String,System.Int32,System.Int32)">
      <summary>Loads CMYK TIFF files as CMYK and avoids the colorspace conversion to RGB. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to load. The file must be
            CMYK, otherwise the method will fail and throw an exception.</param>
      <param name="bitsPerPixel">
            Resulting image pixel depth.  Possible values are:<br /><list type="table"><listheader><term>Value</term><description>Meaning</description></listheader><item><term>8</term><description>Each plane will be a grayscale 8 bits per pixel image.</description></item><item><term>16</term><description>Each plane will be a grayscale 16 bits per pixel image.</description></item></list></param>
      <param name="page">1-based index of the page from which the planes should be loaded.</param>
      <returns>A <see cref="T:Leadtools.RasterImage" /> that this method loads.  The image will contain one page for each of the CMYK planes.</returns>
      <remarks>
        <para>If the data does not have to be loaded as CMYK, use <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" />.</para>
        <para>Support for 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>This method will fail if the input file is not TIFF CMYK. Note that not all the pages should be CMYK - it is enough
            if only the page that you wish to load is CMYK.</para>
        <para>Only the following memory load options are supported by this method:
            <list type="bullet"><item><description><see cref="P:Leadtools.Codecs.CodecsLoadOptions.AllocateImage">RasterCodecs.Options.Load.AllocateImage</see></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsLoadOptions.StoreDataInImage">RasterCodecs.Options.Load.StoreDataInImage</see></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsLoadOptions.SuperCompressed">RasterCodecs.Options.Load.SuperCompressed</see></description></item></list></para>
        <para>This method uses the values of
            <see cref="P:Leadtools.Codecs.CodecsTiffLoadOptions.ImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Load.ImageFileDirectoryOffset</see>.</para>
        <para>If the image being loaded contains alpha channel information, it will be stored in the 5th page of the returned image.</para>
        <para>Use <see cref="M:Leadtools.Drawing.RasterImagePainter.PaintCmykPlanes(Leadtools.RasterImage,System.IntPtr,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.Drawing.RasterPaintProperties,System.Object)">RasterImagePainter.PaintCmykPlanes</see> to display the array and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SaveCmykPlanes(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">SaveCmykArray</see> to save an image as a CMYK TIFF file.</para>
        <para>If you want to convert the CMYK array to a regular BGR image and use the other methods or save to a file format other
            than TIFF CMYK, use <see cref="T:Leadtools.ImageProcessing.Color.ColorMergeCommand">ColorMergeCommand</see> and set the
            <see cref="P:Leadtools.ImageProcessing.Color.ColorMergeCommand.Type">ColorMergeCommand.Type</see> to
            <see cref="T:Leadtools.ImageProcessing.Color.ColorMergeCommandType">ColorMergeCommandType.Cmyk</see>.</para>
        <para>If you have an alpha image, use <see cref="M:Leadtools.RasterImage.SetAlphaImage(Leadtools.RasterImage)">RasterImage.SetAlphaImage</see> to set the
            alpha image.</para>
        <para>You can apply image processing on each individual image. This allows you to process each color plane separately.</para>
        <para>If you want to load a non-CMYK file as an array of color plane, use the normal <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> method and
            then use <see cref="T:Leadtools.ImageProcessing.Color.ColorSeparateCommand">ColorSeparateCommand</see> and
            <see cref="M:Leadtools.RasterImage.CreateAlphaImage">RasterImage.CreateAlphaImage</see> method.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.HandlingCMYKFilesAsSeparateBitmaps">Handling CMYK Files as Separate Images</seealso>
      <example>
            This example will load all CMYK TIFF file, increase the brightness of the K plane only (which will darken the image) and save the file as CMYK TIFF
            <!--RasterCodecs.LoadCmykPlanes--></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadCmykPlanes(System.IO.Stream,System.Int32,System.Int32)">
      <summary>Loads CMYK TIFF streams as CMYK and avoids the colorspace conversion to RGB. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the data of the image file to load. The image data must be
            CMYK, otherwise the method will fail and throw an exception.</param>
      <param name="bitsPerPixel">
            Resulting image pixel depth.  Possible values are:<br /><list type="table"><listheader><term>Value</term><description>Meaning</description></listheader><item><term>8</term><description>Each plane will be a grayscale 8 bits per pixel image.</description></item><item><term>16</term><description>Each plane will be a grayscale 16 bits per pixel image.</description></item></list></param>
      <param name="page">1-based index of the page from which the planes should be loaded.</param>
      <returns>A <see cref="T:Leadtools.RasterImage" /> that this method loads.  The image will contain one page for each of the CMYK planes.</returns>
      <remarks>
        <para>If the data does not have to be loaded as CMYK, use <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" />.</para>
        <para>Support for 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>This method will fail if the input file is not TIFF CMYK. Note that not all the pages should be CMYK - it is enough
            if only the page that you wish to load is CMYK.</para>
        <para>Only the following memory load options are supported by this method:
            <list type="bullet"><item><description><see cref="P:Leadtools.Codecs.CodecsLoadOptions.AllocateImage">RasterCodecs.Options.Load.AllocateImage</see></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsLoadOptions.StoreDataInImage">RasterCodecs.Options.Load.StoreDataInImage</see></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsLoadOptions.SuperCompressed">RasterCodecs.Options.Load.SuperCompressed</see></description></item></list></para>
        <para>This method uses the values of
            <see cref="P:Leadtools.Codecs.CodecsTiffLoadOptions.ImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Load.ImageFileDirectoryOffset</see>.</para>
        <para>If the image being loaded contains alpha channel information, it will be stored in the 5th page of the returned image.</para>
        <para>Use <see cref="M:Leadtools.Drawing.RasterImagePainter.PaintCmykPlanes(Leadtools.RasterImage,System.IntPtr,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.Drawing.RasterPaintProperties,System.Object)">RasterImagePainter.PaintCmykPlanes</see> to display the array and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SaveCmykPlanes(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">SaveCmykArray</see> to save an image as a CMYK TIFF file.</para>
        <para>If you want to convert the CMYK array to a regular BGR image and use the other methods or save to a file format other
            than TIFF CMYK, use <see cref="T:Leadtools.ImageProcessing.Color.ColorMergeCommand">ColorMergeCommand</see> and set the
            <see cref="P:Leadtools.ImageProcessing.Color.ColorMergeCommand.Type">ColorMergeCommand.Type</see> to
            <see cref="T:Leadtools.ImageProcessing.Color.ColorMergeCommandType">ColorMergeCommandType.Cmyk</see>.</para>
        <para>If you have an alpha image, use <see cref="M:Leadtools.RasterImage.SetAlphaImage(Leadtools.RasterImage)">RasterImage.SetAlphaImage</see> to set the
            alpha image.</para>
        <para>You can apply image processing on each individual image. This allows you to process each color plane separately.</para>
        <para>If you want to load a non-CMYK file as an array of color plane, use the normal <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods and
            then use <see cref="T:Leadtools.ImageProcessing.Color.ColorSeparateCommand">ColorSeparateCommand</see> and
            <see cref="M:Leadtools.RasterImage.CreateAlphaImage">RasterImage.CreateAlphaImage</see> method.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.HandlingCMYKFilesAsSeparateBitmaps">Handling CMYK Files as Separate Images</seealso>
      <example>Refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadCmykPlanes(System.String,System.Int32,System.Int32)" />.</example>
      <objectivec>
        <pre>
-(LTRasterImage*)loadCmykPlanes:(LTLeadStream*)stream
                   bitsPerPixel:(unsigned int)bitsPerPixel
                     pageNumber:(unsigned int)pageNumber
                          error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public RasterImage loadCmykPlanes(ILeadStream stream, int bitsPerPixel, int pageNumber)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SaveCmykPlanes(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">
      <summary>Saves the pages of an image as a CMYK TIFF file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">The image that contains the CMKY planes to be saved.</param>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to save.</param>
      <param name="format">
        <para>Specifies the output file format. Valid values are:</para>
        <para>
          <list>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.TifCmyk</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.TifPackBitsCmyk</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.TifLzwCmyk</see>
              </description>
            </item>
          </list>
        </para>
      </param>
      <param name="bitsPerPlane">
        <para>Resulting bits per pixel for each plane.  Possible values:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Default bits per pixel. LEADTOOLS will pick the closest valid value.</description>
          </item>
          <item>
            <term>8</term>
            <description>Save 8 bits per component. The generated file will contain 32 bits (no alpha) or 40 bits
                  (if alpha). Note that <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" />will report 8 bits less (24 or 32-bit).</description>
          </item>
          <item>
            <term>16</term>
            <description>Save 16 bits per component. The generated file will contain 64 bits (no alpha) or 80 bits
                  (if alpha). Note that <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" />will report 16 bits less (48 or 64-bit).</description>
          </item>
        </list>
      </param>
      <param name="pageNumber">Specifies the reference page number when saving a multipage file.</param>
      <param name="pageMode">Determines how to handle the page when saving to multipage formats.</param>
      <remarks>
        <para>This method will save a CMYK file without performing a color conversion. Each page in the <paramref name="image" />
            will contain one of the C, M, Y, K, Alpha planes. The Alpha plane is optional. The <paramref name="image" /> should contain:
            </para>
        <para>
          <list>
            <item>
              <description>4 pages if you do not save alpha channel information or</description>
            </item>
            <item>
              <description>5 pages if you save alpha channel information</description>
            </item>
          </list>
        </para>
        <para>The pages are in this order: C, M, Y, K, Alpha (optional). All the pages must have the same width, height, bits per
            pixel and palette.</para>
        <para>If you want to save the pages of the <paramref name="image" /> as a file format not supported by this function, use 
            <see cref="T:Leadtools.ImageProcessing.Color.ColorMergeCommand">ColorMergeCommand</see> to create a BGR image and save the generated image using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)" /> method.</para>
        <para>CMYK TIFF files can be saved as planar (each image in its own plane) or chunky (the data from all the images will
            be interleaved during saving). Planar images will be saved faster, while chunky images are more compatible (some TIFF
            readers will not read planar files) and require less memory during the load process. The default is to save chunky files.</para>
        <para>You select the planar save mode by setting the
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.SavePlanar">RasterCodecs.Options.Tiff.Save.SavePlanar</see> property to true.</para>
        <para>This method uses the values of
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.ImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.ImageFileDirectoryOffset</see>.</para>
        <para>
            This method can also be used to copy or extract one or more pages from a TIFF file and 
            copy them without recompression to another TIFF file. Whenever you save an image 
            containing a region as a TIFF file format, the region is also saved. Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit.
            </para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.HandlingCMYKFilesAsSeparateBitmaps">Handling CMYK Files as Separate Images</seealso>
      <example>Refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadCmykPlanes(System.String,System.Int32,System.Int32)" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SaveCmykPlanes(Leadtools.RasterImage,System.IO.Stream,Leadtools.RasterImageFormat,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">
      <summary>Saves the pages of an image as a CMYK TIFF stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">The image that contains the CMKY planes to be saved.</param>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that will contain the image data to save.</param>
      <param name="format">
        <para>Specifies the output file format. Valid values are:</para>
        <para>
          <list>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.TifCmyk</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.TifPackBitsCmyk</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.TifLzwCmyk</see>
              </description>
            </item>
          </list>
        </para>
      </param>
      <param name="bitsPerPlane">
        <para>Resulting bits per pixel for each plane.  Possible values:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Default bits per pixel. LEADTOOLS will pick the closest valid value.</description>
          </item>
          <item>
            <term>8</term>
            <description>Save 8 bits per component. The generated file will contain 32 bits (no alpha) or 40 bits
                  (if alpha). Note that <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> will report 8 bits less (24 or 32-bit).</description>
          </item>
          <item>
            <term>16</term>
            <description>Save 16 bits per component. The generated file will contain 64 bits (no alpha) or 80 bits
                  (if alpha). Note that <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> will report 16 bits less (48 or 64-bit).</description>
          </item>
        </list>
      </param>
      <param name="pageNumber">Specifies the reference page number when saving a multipage file.</param>
      <param name="pageMode">Determines how to handle the page when saving to multipage formats.</param>
      <remarks>
        <para>This method will save a CMYK file without performing a color conversion. Each page in the <paramref name="image" />
            will contain one of the C, M, Y, K, Alpha planes. The Alpha plane is optional. The <paramref name="image" /> should contain:
            </para>
        <para>
          <list>
            <item>
              <description>4 pages if you do not save alpha channel information or</description>
            </item>
            <item>
              <description>5 pages if you save alpha channel information</description>
            </item>
          </list>
        </para>
        <para>The pages are in this order: C, M, Y, K, Alpha (optional). All the pages must have the same width, height, bits per
            pixel and palette.</para>
        <para>If you want to save the pages of the <paramref name="image" /> as a file format not supported by this function, use 
            <see cref="T:Leadtools.ImageProcessing.Color.ColorMergeCommand">ColorMergeCommand</see> to create a BGR image and save the generated image using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)" /> method.</para>
        <para>CMYK TIFF files can be saved as planar (each image in its own plane) or chunky (the data from all the images will
            be interleaved during saving). Planar images will be saved faster, while chunky images are more compatible (some TIFF
            readers will not read planar files) and require less memory during the load process. The default is to save chunky files.</para>
        <para>You select the planar save mode by setting the
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.SavePlanar">RasterCodecs.Options.Tiff.Save.SavePlanar</see> property to true.</para>
        <para>This method uses the values of
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.ImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.ImageFileDirectoryOffset</see>.</para>
        <para>
            This method can also be used to copy or extract one or more pages from a TIFF file and 
            copy them without recompression to another TIFF file. Whenever you save an image 
            containing a region as a TIFF file format, the region is also saved. Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit.
            </para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.HandlingCMYKFilesAsSeparateBitmaps">Handling CMYK Files as Separate Images</seealso>
      <example>Refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadCmykPlanes(System.String,System.Int32,System.Int32)" />.</example>
      <objectivec>
        <pre>
-(BOOL)saveCmykPlanes:(LTRasterImage*)image
               stream:(LTLeadStream*)stream
               format:(LTRasterImageFormat)format
         bitsPerPlane:(unsigned int)bitsPerPlane
           pageNumber:(unsigned int)pageNumber
             pageMode:(LTCodecsSavePageMode)pageMode
                error:(NSError**)outError;            </pre>
      </objectivec>
      <java>
        <pre>public void saveCmykPlanes(RasterImage image, ILeadStream stream, RasterImageFormat format, int bitsPerPlane, int pageNumber, CodecsSavePageMode pageMode)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.EncodeAbic(System.Byte[],System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Encodes the input raw data using the ABIC encoder. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="inputData">A byte array which contains the input data.</param>
      <param name="align">Number of bytes aligned for uncompressed input data.</param>
      <param name="width">Image width, in pixels.</param>
      <param name="height">Image height, in pixels.</param>
      <param name="biLevel">true to indicate bi-level encoding, false to indicate 4-bit grayscale encoding.</param>
      <returns>A byte array that contains the ABIC encoded data.</returns>
      <remarks>
        <para>Call this method to compress the input raw data to 1-bit bi-level or 4-bit grayscale ABIC data.</para>
        <para>Use <see cref="M:Leadtools.Codecs.RasterCodecs.DecodeAbic(System.Byte[],System.Int32,System.Int32,System.Int32,System.Boolean)" /> to decode ABIC data.</para>
      </remarks>
      <example>
            This example will load a file and encode as as ABIC. Decodes the data again before saving it to a destination file
            <!--RasterCodecs.Abic--></example>
      <java>
        <pre>public byte[] encodeAbic(byte[] inputData, int align, int width, int height, boolean biLevel)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.EncodeAbic(Leadtools.RasterNativeBuffer,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Encodes the input raw unmanaged memory data using the ABIC encoder. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="inputData">A <see cref="T:Leadtools.RasterNativeBuffer" /> object which contains the input data.</param>
      <param name="align">Number of bytes aligned for uncompressed input data.</param>
      <param name="width">Image width, in pixels.</param>
      <param name="height">Image height, in pixels.</param>
      <param name="biLevel">true to indicate bi-level encoding, false to indicate 4-bit grayscale encoding.</param>
      <returns>A <see cref="T:Leadtools.RasterNativeBuffer" /> object that contains the ABIC encoded data.</returns>
      <remarks>
        <para>Call this method to compress the input raw data to 1-bit bi-level or 4-bit grayscale ABIC data.</para>
        <para>Use <see cref="M:Leadtools.Codecs.RasterCodecs.DecodeAbic(System.Byte[],System.Int32,System.Int32,System.Int32,System.Boolean)" /> to decode ABIC data.</para>
        <para>The output buffer in the <see cref="T:Leadtools.RasterNativeBuffer" /> object returned is allocated automatically by
            this method. The user is responsible to free this unmanaged memory buffer by calling
            <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">Marshal.FreeHGlobal</see> as follows:</para>
        <para>
          <code>
            RasterNativeBuffer buffer = rasterCodecsObject.EncodeAbic(...
            // Use buffer
            Marshal.FreeHGlobal(buffer.Data);
            </code>
        </para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EncodeAbic(System.Byte[],System.Int32,System.Int32,System.Int32,System.Boolean)" />.</example>
      <java>
        <pre>public RasterNativeBuffer encodeAbic(RasterNativeBuffer inputData, int align, int width, int height, boolean biLevel)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.DecodeAbic(System.Byte[],System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Decodes the input ABIC data using the ABIC decoder and returns raw uncompressed data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="inputData">A byte array which contains the input data.</param>
      <param name="align">Number of bytes to align the uncompressed output data.</param>
      <param name="width">Image width, in pixels.</param>
      <param name="height">Image height, in pixels.</param>
      <param name="biLevel">true to indicate bi-level encoding, false to indicate 4-bit grayscale encoding.</param>
      <returns>A byte array that contains the raw uncompressed data.</returns>
      <remarks>
        <para>Call this method to decompress the input 1-bit bi-level or 4-bit grayscale ABIC data.</para>
        <para>Use <see cref="M:Leadtools.Codecs.RasterCodecs.EncodeAbic(System.Byte[],System.Int32,System.Int32,System.Int32,System.Boolean)" /> to encode ABIC data.</para>
        <para>The output buffer in the <see cref="T:Leadtools.RasterNativeBuffer" /> object returned is allocated automatically by
            this method. The user is responsible to free this unmanaged memory buffer by calling
            <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)">Marshal.FreeHGlobal</see> as follows:</para>
        <para>
          <code>
            RasterNativeBuffer buffer = rasterCodecsObject.EncodeAbic(...
            // Use buffer
            Marshal.FreeHGlobal(buffer.Data);
            </code>
        </para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EncodeAbic(System.Byte[],System.Int32,System.Int32,System.Int32,System.Boolean)" />.</example>
      <java>
        <pre>public byte[] decodeAbic(byte[] inputData, int align, int width, int height, boolean biLevel)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.DecodeAbic(Leadtools.RasterNativeBuffer,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Decodes the input ABIC unmanaged memory data using the ABIC decoder and returns raw uncompressed data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="inputData">A <see cref="T:Leadtools.RasterNativeBuffer" /> object which contains the input data.</param>
      <param name="align">Number of bytes to align the uncompressed output data.</param>
      <param name="width">Image width, in pixels.</param>
      <param name="height">Image height, in pixels.</param>
      <param name="biLevel">true to indicate bi-level encoding, false to indicate 4-bit grayscale encoding.</param>
      <returns>A <see cref="T:Leadtools.RasterNativeBuffer" /> object that contains the raw uncompressed data.</returns>
      <remarks>
        <para>Call this method to decompress the input 1-bit bi-level or 4-bit grayscale ABIC data.</para>
        <para>Use <see cref="M:Leadtools.Codecs.RasterCodecs.EncodeAbic(System.Byte[],System.Int32,System.Int32,System.Int32,System.Boolean)" /> to encode ABIC data.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EncodeAbic(System.Byte[],System.Int32,System.Int32,System.Int32,System.Boolean)" />.</example>
      <java>
        <pre>public RasterNativeBuffer decodeAbic(RasterNativeBuffer inputData, int align, int width, int height, boolean biLevel)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)">
      <summary>Loads extensions from the specified Exif file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="fileName">The input file name.</param>
      <param name="pageNumber">1-based index of the page within the file that contains the extension.</param>
      <returns>An <see cref="T:Leadtools.Codecs.CodecsExtensionList" /> object that contains the extensions found in this file.</returns>
      <remarks>
        <para>Please note that not all Exif files have extensions.</para>
        <para>Currently, this method works only with Exif files. Exif files can contain extra data stored as "FlashPix extensions".
            This method can be used to access this extra data. LEADTOOLS refers to this extra data as "extensions".</para>
        <para>You must dispose the <see cref="T:Leadtools.Codecs.CodecsExtensionList" /> returned from this method when you are done using it.</para>
      </remarks>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <example>
            This example will show detailed information on the streams present in the Exif file.
            <!--RasterCodecs.ReadExtensions--></example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.IO.Stream,System.Int32)">
      <summary>Loads extensions from the specified Exif stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="stream">The input file data stream.</param>
      <param name="pageNumber">1-based index of the page within the file that contains the extension.</param>
      <returns>An <see cref="T:Leadtools.Codecs.CodecsExtensionList" /> object that contains the extensions found in this file.</returns>
      <remarks>
        <para>Please note that not all Exif files have extensions.</para>
        <para>Currently, this method works only with Exif files. Exif files can contain extra data stored as "FlashPix extensions".
            This method can be used to access this extra data. Leadtools refers to this extra data as "extensions".</para>
        <para>You must dispose the <see cref="T:Leadtools.Codecs.CodecsExtensionList" /> returned from this method when you are done using it.</para>
      </remarks>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)" />.</example>
      <objectivec>
        <pre>-(LTCodecsExtensionList*)readExtensions:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public CodecsExtensionList readExtensions(ILeadStream stream, int pageNumber)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32)">
      <summary>Saves a <see cref="T:Leadtools.RasterImage" /> to a remote URL in any of the supported compressed or uncompressed formats. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>Save|Saving images|Saving</keywords>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that holds the image data.</param>
      <param name="uri">The <see cref="T:System.Uri" /> containing the output URL name.</param>
      <param name="format">The output file format. For valid values,
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</param>
      <param name="bitsPerPixel">Resulting file's pixel depth. Note that not all bits per pixel are
            available to all file formats.  For valid values, refer to 
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>. If
            <paramref name="bitsPerPixel" /> is 0, the image will be stored using the closet bits/pixel value supported by that format.
            For example, if a file format supports 1, 4, and 24 bits/pixel, and
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 5, the file will be stored as 24 bit. Likewise, if
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 2, the file will be stored as 4 bit.</param>
      <remarks>
        <para>The remote URL defined by <paramref name="uri" /> can be any resource that accepts an HTML "PUT" method. For example, an FTP or SharePoint server.</para>
        <para>To setup the authentication and proxy information to use when accessing <paramref name="uri" />, use <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> and <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" />.</para>
        <para>If the output file format supports multipage and then all the pages in <paramref name="image" /> will be saved to the
            file.</para>
        <para>If the image is 8 bits per pixel or greater, use the LEAD CMP format or one of the JPEG (JTIF or JFIF) formats to
            save disk space.</para>
        <para>If the image is 1-bit per pixel, use the LEAD 1-bit format or a CCITT Group 3 or 4 format to save disk space.</para>
        <para>If the image has a region, the region stored in the image will be saved, if the image is saved as one of the TIFF
            file formats. For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>. 
            Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled. Images can be
            window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevel</see> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see>, by using
            the <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> or by loading an image from a file format that supports Window Leveling. If a
            window-leveled image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsSaveOptions" /> class to set up other save options parameters before calling this
            method.</para>
        <para>Use to the <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage" /> event to provide progress feedback or to set or modify the saved image data.</para>
        <para>This method supports signed data images, but only DICOM and TIFF formats support signed data. This method will throw
            an exception if you attempt to save a signed image to a format other than DICOM or TIFF.</para>
        <para>In LEADTOOLS version 17 and up, when saving a colored image (such as a 24-bits per pixel image) to bitonal (1-bit per pixel), the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will not use any dithering when converting the image data. This is done because dithering is not the
            recommended when converting colored images containing text for document processing such as OCR and Barcode. The resulting text will be fuzzy and
            hard for a recognition engine to process. To save a colored image as bitonal with Floyd-Stein dithering (the behavior of LEADTOOLS 16.5 and earlier)
            use <see cref="P:Leadtools.Codecs.CodecsSaveOptions.UseImageDitheringMethod">CodecsSaveOptions.UseImageDitheringMethod</see> along with
            <see cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod</see> as illustrated below:</para>
        <para>
          <pre>
            <code>
            // 'codecs' is the RasterCodecs to use when saving
            // 'image' is a colored RasterImage object
            // Setup FloydStein dithering:
            codecs.Options.Save.UseImageDitheringMethod = true;
            image.DitheringMethod = RasterDitheringMethod.FloydStein;
            // Save the image as 1-bpp with auto-dithering:
            codecs.Save(image, fileName, RasterImageFormat.Tif, 1);
            </code>
          </pre>
        </para>
        <para>For information about quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">Save(RasterImage image, Uri uri, RasterImageFormat format, int bitsPerPixel, int firstPage, int lastPage)</see>.
            </example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">
      <summary>Saves one or more pages of a <see cref="T:Leadtools.RasterImage" /> to a remote URL in any of the supported compressed or uncompressed formats. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that holds the image data.</param>
      <param name="uri">The <see cref="T:System.Uri" /> containing the output URL name.</param>
      <param name="format">The output file format. For valid values,
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</param>
      <param name="bitsPerPixel">Resulting file's pixel depth. Note that not all bits per pixel are
            available to all file formats.  For valid values, refer to 
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>. If
            <paramref name="bitsPerPixel" /> is 0, the image will be stored using the closet bits/pixel value supported by that format.
            For example, if a file format supports 1, 4, and 24 bits/pixel, and
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 5, the file will be stored as 24 bit. Likewise, if
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 2, the file will be stored as 4 bit.</param>
      <param name="firstPage">1-based index of the first page in <paramref name="image" /> to save.</param>
      <param name="lastPage">1-based index of the last page in <paramref name="image" /> to save. Pass -1 to save from
            <paramref name="firstPage" /> to the last page in <paramref name="image" />.</param>
      <remarks>
        <para>The remote URL defined by <paramref name="uri" /> can be any resource that accepts an HTML "PUT" method. For example, an FTP or SharePoint server.</para>
        <para>To setup the authentication and proxy information to use when accessing <paramref name="uri" />, use <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> and <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" />.</para>
        <para>If the image is 8 bits per pixel or greater, use the LEAD CMP format or one of the JPEG (JTIF or JFIF) formats to
            save disk space.</para>
        <para>If the image is 1-bit per pixel, use the LEAD 1-bit format or a CCITT Group 3 or 4 format to save disk space.</para>
        <para>If the image has a region, the region stored in the image will be saved, if the image is saved as one of the TIFF
            file formats. For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.
            Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled. Images can be
            window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevel</see> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see>, by using
            the <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> or by loading an image from a file format that supports Window Leveling. If a
            window-leveled image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsSaveOptions" /> class to set up other save options parameters before calling this
            method.</para>
        <para>Use to the <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage" /> event to provide progress feedback or to set or modify the saved image data.</para>
        <para>This method supports signed data images, but only DICOM and TIFF formats support signed data. This method will throw
            an exception if you attempt to save a signed image to a format other than DICOM or TIFF.</para>
        <para>In LEADTOOLS version 17 and up, when saving a colored image (such as a 24-bits per pixel image) to bitonal (1-bit per pixel), the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will not use any dithering when converting the image data. This is done because dithering is not the
            recommended when converting colored images containing text for document processing such as OCR and Barcode. The resulting text will be fuzzy and
            hard for a recognition engine to process. To save a colored image as bitonal with Floyd-Stein dithering (the behavior of LEADTOOLS 16.5 and earlier)
            use <see cref="P:Leadtools.Codecs.CodecsSaveOptions.UseImageDitheringMethod">CodecsSaveOptions.UseImageDitheringMethod</see> along with
            <see cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod</see> as illustrated below:</para>
        <para>
          <pre>
            <code>
            // 'codecs' is the RasterCodecs to use when saving
            // 'image' is a colored RasterImage object
            // Setup FloydStein dithering:
            codecs.Options.Save.UseImageDitheringMethod = true;
            image.DitheringMethod = RasterDitheringMethod.FloydStein;
            // Save the image as 1-bpp with auto-dithering:
            codecs.Save(image, fileName, RasterImageFormat.Tif, 1);
            </code>
          </pre>
        </para>
        <para>For information about quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will create a multipage image and then upload only the second page to a share point server "Shared Document" folder.
            <!--RasterCodecs.Save(RasterImage, Uri, RasterImageFormat, int, int, int ))--></example>
      <keywords>SharePoint Server</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)">
      <summary>Checks whether the given file format supports tags <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="format">The <see cref="T:Leadtools.RasterImageFormat" /> to check</param>
      <returns>
        <strong>true</strong> if the format supports tags; otherwise it is <strong>false</strong>.</returns>
      <remarks>
        <para>This is a helper method that can be used to detect if a certain raster file format supports tags. For example,
            <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" />, <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" /> can be used to read the tags stored in a file. If
            the file format supports tags, such as JPEG or TIFF, then these methods will successfully return the tags stored.</para>
        <para>However, if the format does not support tags, such as BMP, an exception will be thrown by the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> objects. You can use <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" /> to determine whether the file supports tags and only call
            the read tags methods if the return value is true.</para>
        <para>Note that the <see cref="T:Leadtools.Codecs.RasterCodecs" /> option uses this method internally to determine whether the file supports tags when the
            <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags">CodecsLoadOptions.Tags</see> is set to true and only read the file tags if the file
            format supports them.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadTagsWithOffsets(System.String,System.Int32,System.Int64[]@)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" />
      <seealso cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys"> Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</example>
      <objectivec>
        <pre>+(BOOL)tagsSupported:(LTRasterImageFormat)format;</pre>
      </objectivec>
      <java>
        <pre>public static boolean tagsSupported(RasterImageFormat format)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)">
      <summary>Checks whether the given file format supports TIFF Geo key tags <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="format">The <see cref="T:Leadtools.RasterImageFormat" /> to check</param>
      <returns>
        <strong>true</strong> if the format supports TIFF Geo key tags; otherwise it is <strong>false</strong>.</returns>
      <remarks>
        <para>This is a helper method that can be used to detect if a certain raster file format supports TIFF Geo key tags. For example,
            <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKey(System.String,System.Int32,System.Int32)" />, <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKeys(System.String,System.Int32)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" /> can be used to read the GeoKeys stored in a file. If
            the file format supports GeoKeys, such as TIFF, then these methods will successfully return the geo key tags stored.</para>
        <para>However, if the format does not support geo key tags, such as BMP, an exception will be thrown by the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> objects. You can use <see cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" /> to determine whether the file supports GeoKeys and only call
            the read methods if the return value is true.</para>
        <para>Note that the <see cref="T:Leadtools.Codecs.RasterCodecs" /> option uses this method internally to determine whether the file supports GeoKeys when the
            <see cref="P:Leadtools.Codecs.CodecsLoadOptions.GeoKeys">CodecsLoadOptions.GeoKeys</see> is set to true and only read the file GeoKeys if the file
            format supports them.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKey(System.String,System.Int32,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKeys(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" />
      <seealso cref="P:Leadtools.RasterImage.GeoKeys">RasterImage.GeoKeys</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys"> Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</example>
      <objectivec>
        <pre>+(BOOL)geoKeysSupported:(LTRasterImageFormat)format;</pre>
      </objectivec>
      <java>
        <pre>public static boolean geoKeysSupported(RasterImageFormat format)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)">
      <summary>Checks whether the given file format supports comment fields <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="format">The <see cref="T:Leadtools.RasterImageFormat" /> to check</param>
      <returns>
        <strong>true</strong> if the format supports comment fields; otherwise it is <strong>false</strong>.</returns>
      <remarks>
        <para>This is a helper method that can be used to detect if a certain raster file format supports comment fields. For example,
            <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComments(System.String,System.Int32)" /> can be used to read the comments stored in a file. If
            the file format supports comments, such as JPEG or EXIF, then these methods will successfully return the comments stored.</para>
        <para>However, if the format does not support comments, such as BMP, an exception will be thrown by the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> objects. You can use <see cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" /> to determine whether the file supports comments and only call
            the read methods if the return value is true.</para>
        <para>Note that the <see cref="T:Leadtools.Codecs.RasterCodecs" /> option uses this method internally to determine whether the file supports comments when the
            <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Comments">CodecsLoadOptions.Comments</see> is set to true and only read the file comments if the file
            format supports them.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadComments(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" />
      <seealso cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys"> Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</example>
      <objectivec>
        <pre>+(BOOL)commentsSupported:(LTRasterImageFormat)format;</pre>
      </objectivec>
      <java>
        <pre>public static boolean commentsSupported(RasterImageFormat format)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.MarkersSupported(Leadtools.RasterImageFormat)">
      <summary>Checks whether the given file format supports markers <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="format">The <see cref="T:Leadtools.RasterImageFormat" /> to check</param>
      <returns>
        <strong>true</strong> if the format supports markers; otherwise it is <strong>false</strong>.</returns>
      <remarks>
        <para>This is a helper method that can be used to detect if a certain raster file format supports markers. For example,
            <see cref="M:Leadtools.Codecs.RasterCodecs.ReadMarkers(System.String)" /> can be used to read the markers stored in a file. If
            the file format supports markers, such as EXIF, then these methods will successfully return the markers stored.</para>
        <para>However, if the format does not support markers, such as BMP, an exception will be thrown by the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> objects. You can use <see cref="M:Leadtools.Codecs.RasterCodecs.MarkersSupported(Leadtools.RasterImageFormat)" /> to determine whether the file supports markers and only call
            the read methods if the return value is true.</para>
        <para>Note that the <see cref="T:Leadtools.Codecs.RasterCodecs" /> option uses this method internally to determine whether the file supports markers when the
            <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Markers">CodecsLoadOptions.Markers</see> is set to true and only read the file markers if the file
            format supports them.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadMarkers(System.String)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" />
      <seealso cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys"> Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</example>
      <objectivec>
        <pre>+(BOOL)markersSupported:(LTRasterImageFormat)format;</pre>
      </objectivec>
      <java>
        <pre>public static boolean markersSupported(RasterImageFormat format)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)">
      <summary>Reads all the tags stored in a TIFF file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the input file name.</param>
      <param name="pageNumber">1-based index of the page from which to read the tags.</param>
      <returns>A collection of <see cref="T:Leadtools.RasterTagMetadata" /> containing all the tags found in the file. If the file does not
            contain any tags, an empty collection will be returned. If the file format does not support tags, an exception will be thrown.</returns>
      <remarks>
        <para>To read a specific tag stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" /> and to enumerate all the tag ids (but not the
            data) stored in a file use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</para>
        <para>This method will throw an exception if the file format does not support tags. To determine whether a file
            format supports tags, use <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />. You can also automatically load all the tags stored in a file during a
            load operation by setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags">CodecsLoadOptions.Tags</see> property to true. The tags
            data will be stored in the resulting image <see cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</see> collection.</para>
        <para>To load all the tags stored in a stream containing the image data, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.IO.Stream,System.Int32)" />.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" />
      <seealso cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys"> Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>
        <para>This example will load all the metadata (tags, geo-keys and comments) found in a disk file.</para>
        <!--RasterCodecs.MetadataLoadExample-->
      </example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.IO.Stream,System.Int32)">
      <summary>Reads all the tags stored in a TIFF file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the input image data.</param>
      <param name="pageNumber">1-based index of the page from which to read the tags.</param>
      <returns>A collection of <see cref="T:Leadtools.RasterTagMetadata" /> containing all the tags found in the file. If the file does not
            contain any tags, an empty collection will be returned. If the file format does not support tags, an exception will be thrown.</returns>
      <remarks>
        <para>To read a specific tag stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" /> and to enumerate all the tag ids (but not the
            data) stored in a file use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</para>
        <para>This method will throw an exception if the file format does not support tags. To determine whether a file
            format supports tags, use <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />. You can also automatically load all the tags stored in a file during a
            load operation by setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags">CodecsLoadOptions.Tags</see> property to true. The tags
            data will be stored in the resulting image <see cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</see> collection.</para>
        <para>To load all the tags stored in a disk file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" />
      <seealso cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys"> Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</example>
      <objectivec>
        <pre>-(NSArray*)readTags:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterCollection&lt;RasterTagMetadata&gt; readTags(ILeadStream stream, int pageNumber)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadTagsWithOffsets(System.String,System.Int32,System.Int64[]@)">
      <summary>
            Reads all the tags stored in a TIFF file, along with the offsets for each tag.
            </summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the input file name.</param>
      <param name="pageNumber">1-based index of the page from which to read the tags.</param>
      <param name="offsets">An array that contains the offsets for each tag.</param>
      <returns>A collection of <see cref="T:Leadtools.RasterTagMetadata" /> containing all the tags found in the file. If the file does not
            contain any tags, an empty collection will be returned. If the file format does not support tags, an exception will be thrown.</returns>
      <remarks>
        <para>To read a specific tag stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" /> and to enumerate all the tag ids (but not the
            data) stored in a file use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</para>
        <para>This method will throw an exception if the file format does not support tags. To determine whether a file
            format supports tags, use <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />. You can also automatically load all the tags stored in a file during a
            load operation by setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags">CodecsLoadOptions.Tags</see> property to true. The tags
            data will be stored in the resulting image <see cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</see> collection.</para>
        <para>To load all the tags stored in a stream containing the image data, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.IO.Stream,System.Int32)" />.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" />
      <seealso cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>
        <para>This example will load all the tags, with their offsets, from a file.</para>
        <!--RasterCodecs.ReadTagsWithOffsetsExample-->
      </example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadTagsWithOffsets(System.IO.Stream,System.Int32,System.Int64[]@)">
      <summary>
            Reads all the tags stored in a TIFF file, along with the offsets for each tag.
            </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the input image data.</param>
      <param name="pageNumber">1-based index of the page from which to read the tags.</param>
      <param name="offsets">An array that contains the offsets for each tag.</param>
      <returns>A collection of <see cref="T:Leadtools.RasterTagMetadata" /> containing all the tags found in the file. If the file does not
            contain any tags, an empty collection will be returned. If the file format does not support tags, an exception will be thrown.</returns>
      <remarks>
        <para>To read a specific tag stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" /> and to enumerate all the tag ids (but not the
            data) stored in a file use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</para>
        <para>This method will throw an exception if the file format does not support tags. To determine whether a file
            format supports tags, use <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />. You can also automatically load all the tags stored in a file during a
            load operation by setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags">CodecsLoadOptions.Tags</see> property to true. The tags
            data will be stored in the resulting image <see cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</see> collection.</para>
        <para>To load all the tags stored in a disk file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" />
      <seealso cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>
        <para>This example will load all the tags, with their offsets, from a file.</para>
        <!--RasterCodecs.ReadTagsWithOffsetsExample-->
      </example>
      <objectivec>
        <pre>-(NSArray*)readTagsWithOffsets:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber offsets:(NSMutableArray*)offsets error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterCollection&lt;RasterTagMetadata&gt; readTagsWithOffsets(ILeadStream stream, int pageNumber, long[][] offsets)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadGeoKeys(System.String,System.Int32)">
      <summary>Read all the GeoKey data found in a TIFF file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the input file name.</param>
      <param name="pageNumber">1-based index of the page from which to read the GeoKey tags.</param>
      <returns>A collection of <see cref="T:Leadtools.RasterTagMetadata" /> containing all the GeoKey tags found in the file. If the file does not
            contain any GeoKeys, an empty collection will be returned. If the file format does not support GeoKeys, an exception will be thrown.</returns>
      <remarks>
        <para>To read a specific geo key stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKey(System.String,System.Int32,System.Int32)" /> and to enumerate all the GeoKeys stored in a
            file use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />.</para>
        <para>This method will throw an exception if the file format does not support GeoKeys. To determine whether a file
            format supports GeoKeys, use <see cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />. You can also automatically load all the GeoKeys stored in a
            file during a load operation by setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.GeoKeys">CodecsLoadOptions.GeoKeys</see> property to
            true. The GeoKeys data will be stored in the resulting image <see cref="P:Leadtools.RasterImage.GeoKeys">RasterImage.GeoKeys</see> collection.</para>
        <para>To load all the GeoKeys stored in a stream containing the image data, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKeys(System.IO.Stream,System.Int32)" />.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKeys(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.GeoKeys" />
      <seealso cref="P:Leadtools.RasterImage.GeoKeys">RasterImage.GeoKeys</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys"> Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadGeoKeys(System.IO.Stream,System.Int32)">
      <summary>Read all the GeoKey data found in a stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the input TIFF image data.</param>
      <param name="pageNumber">1-based index of the page from which to read the GeoKey tags.</param>
      <returns>A collection of <see cref="T:Leadtools.RasterTagMetadata" /> containing all the GeoKey tags found in the file. If the file does not
            contain any GeoKeys, an empty collection will be returned. If the file format does not support GeoKeys, an exception will be thrown.</returns>
      <remarks>
        <para>To read a specific geo key stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKey(System.String,System.Int32,System.Int32)" /> and to enumerate all the GeoKeys stored in a
            file use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />.</para>
        <para>This method will throw an exception if the file format does not support GeoKeys. To determine whether a file
            format supports GeoKeys, use <see cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />. You can also automatically load all the GeoKeys stored in a
            file during a load operation by setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.GeoKeys">CodecsLoadOptions.GeoKeys</see> property to
            true. The GeoKeys data will be stored in the resulting image <see cref="P:Leadtools.RasterImage.GeoKeys">RasterImage.GeoKeys</see> collection.</para>
        <para>To load all the GeoKeys stored in a disk file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKeys(System.String,System.Int32)" />.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKeys(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.GeoKeys" />
      <seealso cref="P:Leadtools.RasterImage.GeoKeys">RasterImage.GeoKeys</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys"> Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</example>
      <objectivec>
        <pre>-(NSArray*)readGeoKeys:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterCollection&lt;RasterTagMetadata&gt; readGeoKeys(ILeadStream stream, int pageNumber)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadComments(System.String,System.Int32)">
      <summary>Gets all the comment fields stored in a file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the input file name.</param>
      <param name="pageNumber">1-based index of the page from which to read the comments.</param>
      <returns>A collection of <see cref="T:Leadtools.RasterTagMetadata" /> containing all the comment fields information found in the file. If
            the file does not contain any comments, an empty collection will be returned. If the file format does not support comment
            fields, an exception will be thrown.</returns>
      <remarks>
        <para>Some file formats can contain comments, and some cannot, and each file format has its own set of comment types.
            When you save a file, the comments in the <see cref="T:Leadtools.RasterImage" /> object can be saved in the file. The index into the
            array (specified using a constant) determines the type of comment.</para>
        <para>To read a specific comment field stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />.</para>
        <para>This method will throw an exception if the file format does not support comments fields. To determine whether a file
            format supports comment fields, use <see cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />. You can also automatically load all the comment fields
            stored in a file during a load operation by setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Comments">CodecsLoadOptions.Comments</see>
            property to true. The comment fields data will be stored in the resulting image
            <see cref="P:Leadtools.RasterImage.Comments">RasterImage.Comments</see> collection.</para>
        <para>To load all the comments stored in a stream, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComments(System.IO.Stream,System.Int32)" />.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Comments" />
      <seealso cref="P:Leadtools.RasterImage.Comments">RasterImage.Comments</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys"> Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadComments(System.IO.Stream,System.Int32)">
      <summary>Gets all the comment fields stored in a stream. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the input image data.</param>
      <param name="pageNumber">1-based index of the page from which to read the comments.</param>
      <returns>A collection of <see cref="T:Leadtools.RasterTagMetadata" /> containing all the comment fields information found in the file. If
            the file does not contain any comments, an empty collection will be returned. If the file format does not support comment
            fields, an exception will be thrown.</returns>
      <remarks>
        <para>Some file formats can contain comments, and some cannot, and each file format has its own set of comment types.
            When you save a file, the comments in the <see cref="T:Leadtools.RasterImage" /> object can be saved in the file. The index into the
            array (specified using a constant) determines the type of comment.</para>
        <para>To read a specific comment field stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />.</para>
        <para>This method will throw an exception if the file format does not support comments fields. To determine whether a file
            format supports comment fields, use <see cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />. You can also automatically load all the comment fields
            stored in a file during a load operation by setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Comments">CodecsLoadOptions.Comments</see>
            property to true. The comment fields data will be stored in the resulting image
            <see cref="P:Leadtools.RasterImage.Comments">RasterImage.Comments</see> collection.</para>
        <para>To load all the comments stored in a disk file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComments(System.String,System.Int32)" />.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Comments" />
      <seealso cref="P:Leadtools.RasterImage.Comments">RasterImage.Comments</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments"> TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys"> Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</example>
      <objectivec>
        <pre>-(NSArray*)readComments:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public RasterCollection&lt;RasterCommentMetadata&gt; readComments(ILeadStream stream, int pageNumber)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.UseAsync">
      <summary>Creates the <see cref="T:System.Net.WebClient" /> object used for asynchronous operations. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> object supports getting information and loading image files asynchronously through the use of the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods. These methods will use an internal <see cref="T:System.Net.WebClient" /> object to perform
            their operations and this object will be created automatically on the first call to these methods and can be accessed through the
            <see cref="P:Leadtools.Codecs.RasterCodecs.AsyncWebClient" /> property.</para>
        <para>If it is desired to create the <see cref="T:System.Net.WebClient" /> object manually (for example, to subscribe to any of its event or set the
            credentials prior to invoking any read operations), you can call <see cref="M:Leadtools.Codecs.RasterCodecs.UseAsync" /> to create the object, change its behavior and then call
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" />.</para>
        <para>
          <strong>Note:</strong>
          <see cref="M:Leadtools.Codecs.RasterCodecs.UseAsync" />, <see cref="P:Leadtools.Codecs.RasterCodecs.AsyncWebClient" />, <see cref="P:Leadtools.Codecs.RasterCodecs.IsAsyncBusy" />, and <see cref="M:Leadtools.Codecs.RasterCodecs.CancelAsync" /> are only applicable
            when the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> was with the versions that take a <see cref="T:System.Uri" /> parameter. The versions
            that take a <see cref="T:System.String" /> or a <see cref="T:System.IO.Stream" /> does not use a <see cref="T:System.Net.WebClient" /> object internally. If you want to check the progress
            or cancel the operation then use the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage" /> event as normal.</para>
      </remarks>
      <example>
        <para>This example will use <see cref="M:Leadtools.Codecs.RasterCodecs.UseAsync" /> to create the <see cref="T:System.Net.WebClient" /> object used by a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object
            for asynchronous operations. It will then change the cache policy of the web client object before loading an image asynchronously.</para>
        <!--RasterCodecs.UseAsync-->
      </example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.CancelAsync">
      <summary>Cancels a pending asynchronous operation. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> object supports getting information and loading image files asynchronously through the use of the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods.</para>
        <para>You can call one asynchronous operation per <see cref="T:Leadtools.Codecs.RasterCodecs" /> object at a time. To determine whether the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object is
            busy with a previous asynchronous operation, use <see cref="P:Leadtools.Codecs.RasterCodecs.IsAsyncBusy" /> property. This is the equivalent of the <see cref="P:System.Net.WebClient.IsBusy">WebClient.IsBusy</see> property of <see cref="P:Leadtools.Codecs.RasterCodecs.AsyncWebClient" />.</para>
        <para>You can also use the <see cref="M:Leadtools.Codecs.RasterCodecs.CancelAsync" /> method to cancel any current asynchronous operation in this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object. This
            is the equivalent of calling <see cref="M:System.Net.WebClient.CancelAsync">WebClient.CancelAsync</see> on <see cref="P:Leadtools.Codecs.RasterCodecs.AsyncWebClient" />.</para>
        <para>
          <strong>Note:</strong>
          <see cref="M:Leadtools.Codecs.RasterCodecs.UseAsync" />, <see cref="P:Leadtools.Codecs.RasterCodecs.AsyncWebClient" />, <see cref="P:Leadtools.Codecs.RasterCodecs.IsAsyncBusy" />, and <see cref="M:Leadtools.Codecs.RasterCodecs.CancelAsync" /> are only applicable
            when the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> was with the versions that take a <see cref="T:System.Uri" /> parameter. The versions
            that take a <see cref="T:System.String" /> or a <see cref="T:System.IO.Stream" /> does not use a <see cref="T:System.Net.WebClient" /> object internally. If you want to check the progress
            or cancel the operation then use the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage" /> event as normal.</para>
      </remarks>
      <example>
        <!--RasterCodecs.CancelAsync-->
      </example>
      <java>
        <pre>public void cancelAsync(Object operation)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">
      <summary>Gets the image information from a disk file asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">
        <see cref="T:System.String" /> containing the input file name to query.</param>
      <param name="totalPages">true to query the file for total number of pages; false, otherwise.</param>
      <param name="pageNumber">The page number to query. Pass 1 for the first page (default).</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object that contains the information about the specified image. See remarks about the usage of this object.</returns>
      <remarks>
        <para>Specifying true for <paramref name="totalPages" /> can cause the process to be slow for files with large number of
            pages.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports getting information on image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">GetInformationAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> that is in a loading status
            (<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes getting the information about the file, the various properties of the
            <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> will be populated with the image file information and the <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>It is recommended that you do not poll for the <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see> property to determine whether the
            image information has been collected. Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">GetInformationAsyncCompleted</see>
            event to get notification on when the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> operation is completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">GetInformationAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">GetInformationAsync</see> so you do not have to keep the original
            object in your application.</para>
        <para>
          <paramref name="userState" /> will be passed to the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.UserState">CodecsGetInformationAsyncCompletedEventArgs.UserState</see>
            member of the <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted" /> event data.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>
        <!--RasterCodecs.GetInformationAsyncString-->
      </example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.IO.Stream,System.Boolean,System.Int32,System.Object)">
      <summary>Gets the image information from a stream containing image data asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> containing the input image data to query.</param>
      <param name="totalPages">true to query the file for total number of pages; false, otherwise.</param>
      <param name="pageNumber">The page number to query. Pass 1 for the first page (default).</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object that contains the information about the specified image. See remarks about the usage of this object.</returns>
      <remarks>
        <para>Specifying true for <paramref name="totalPages" /> can cause the process to be slow for files with large number of
            pages.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports getting information on image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">GetInformationAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> that is in a loading status
            (<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes getting the information about the file, the various properties of the
            <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> will be populated with the image file information and the <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>It is recommended that you do not poll for the <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see> property to determine whether the
            image information has been collected. Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">GetInformationAsyncCompleted</see>
            event to get notification on when the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> operation is completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">GetInformationAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">GetInformationAsync</see> so you do not have to keep the original
            object in your application.</para>
        <para>
          <paramref name="userState" /> will be passed to the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.UserState">CodecsGetInformationAsyncCompletedEventArgs.UserState</see>
            member of the <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted" /> event data.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>
        <!--RasterCodecs.GetInformationAsyncStream-->
      </example>
      <java>
        <pre>public Object getInformationAsync(ILeadStream stream, boolean totalPages, int pageNumber, Object userState)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.Uri,System.Boolean,System.Int32,System.Object)">
      <summary>Gets the specific image page information from the specified <see cref="T:System.Uri" /> asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="uri">The <see cref="T:System.Uri" /> containing the input image data.</param>
      <param name="totalPages">true to query the URI for total number of pages; false, otherwise.</param>
      <param name="pageNumber">The page number to query. Pass 1 for the first page (default).</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object that contains the information about the specified image. See remarks about the usage of this object.</returns>
      <remarks>
        <para>Specifying true for <paramref name="totalPages" /> can cause the process to be slow for files with large number of
            pages.</para>
            LEADTOOLS supports the following URI schemes:
            <list type="table"><listheader><term>Scheme</term><description>Description</description></listheader><item><term><see cref="F:System.Uri.UriSchemeFile" /></term><description>Specifies that the URI is a disk file in local machine or universal naming convention (UNC) path.</description></item><item><term><see cref="F:System.Uri.UriSchemeHttp" /></term><description>Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP).</description></item><item><term><see cref="F:System.Uri.UriSchemeHttps" /></term><description>Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS).</description></item><item><term><see cref="F:System.Uri.UriSchemeFtp" /></term><description>Specifies that the URI is accessed through the File Transfer Protocol (FTP).</description></item></list><para>If <paramref name="uri" /> points to a resource in a <see cref="F:System.Uri.UriSchemeHttp" />, <see cref="F:System.Uri.UriSchemeHttps" /> or
            <see cref="F:System.Uri.UriSchemeFtp" />, then this <see cref="T:Leadtools.Codecs.RasterCodecs" /> will attempt to download image data in an iterative fashion by
            creating a temporary buffer. The size of this buffer can be determined and changed by setting up the
            <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationBufferSize" /> prior to calling this method.</para><para>For authenticity and proxy settings, refer to <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> and <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" />.</para><para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports getting information on image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">GetInformationAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> that is in a loading status
            (<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para><para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes getting the information about the file, the various properties of the
            <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> will be populated with the image file information and the <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see>
            property will be set to <strong>false</strong>.</para><para>It is recommended that you do not poll for the <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see> property to determine whether the
            image information has been collected. Instead, subscribe to the 
            <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">GetInformationAsyncCompleted</see>
            event to get notification on when the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> operation is completed and whether any errors occurred.</para><para>The <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">GetInformationAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">GetInformationAsync</see> so you do not have to keep the original
            object in your application.</para><para><paramref name="userState" /> will be passed to the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.UserState">CodecsGetInformationAsyncCompletedEventArgs.UserState</see>
            member of the <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted" /> event data.</para></remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">
      <summary>Loads the specified rectangle from the specified image file using the specified options asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to load.</param>
      <param name="tile">A <see cref="T:Leadtools.LeadRect" /> describing the tile/area of the image to load.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads. See remarks for the usage of this object.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>This method loads a section of an image file (any format). The section begins is defined by <paramref name="tile" /> rectangle.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to determine whether the image has finished loading. 
            Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
            event to get notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
            object in your application.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(string, LeadRect, int, CodecsLoadByteOrder, int, int, object)-->
      </example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Object)">
      <summary>Loads the specified rectangle from the specified image file using default options asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to load.</param>
      <param name="tile">A <see cref="T:Leadtools.LeadRect" /> describing the tile/area of the image to load.</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads. See remarks for the usage of this object.</returns>
      <remarks>
        <para>This method loads a section of an image file (any format). The section begins is defined by <paramref name="tile" /> rectangle.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to determine whether the
            image has finished loading. 
            Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
            event to get 
            notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
            object in your application.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(string, LeadRect, object)-->
      </example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">
      <summary>Loads the specified image file using specific options asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to load.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads. See remarks for the usage of this object.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to determine whether the
            image has finished loading. 
            Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
            event to get 
            notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
            object in your application.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(string, int, CodecsLoadByteOrder, int, int, object)-->
      </example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,System.Object)">
      <summary>Loads the specified image file using default options asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the image file to load.</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads. See remarks for the usage of this object.</returns>
      <keywords>Multipage File Formats|Load|Loading|Loading Images|Silverlight</keywords>
      <remarks>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>This method will load all the pages in a multipage file. The resulting image will have the same bits/pixel and color
            order value of the image as it was stored in the file.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to determine whether the
            image has finished loading. 
            Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
            event to get 
            notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
            object in your application.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(string, object)-->
      </example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.IO.Stream,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">
      <summary>Loads the specified rectangle from the specified image stream using the specified options asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <param name="tile">A <see cref="T:Leadtools.LeadRect" /> describing the tile/area of the image to load.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.</para>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads. See remarks for the usage of this object.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>This method loads a section of an image file (any format). The section begins is defined by <paramref name="tile" /> rectangle.</para>
        <para>Valid values for the <paramref name="bitsPerPixel" /> parameter are:
            <list type="table"><listheader><term>Value</term><description>Meaning</description></listheader><item><term>0</term><description>Keep the original file's pixel depth (Do not convert).</description></item><item><term>1 to 8</term><description>The specified bits per pixel in the resulting image.</description></item><item><term>12</term><description>12 bits per pixel in the resulting image.</description></item><item><term>16</term><description>16 bits per pixel in the resulting image.</description></item><item><term>24</term><description>24 bits per pixel in the resulting image.</description></item><item><term>32</term><description>32 bits per pixel in the resulting image.</description></item><item><term>48</term><description>48 bits per pixel in the resulting image.</description></item><item><term>64</term><description>64 bits per pixel in the resulting image.</description></item></list></para>
        <para>Valid values for the <paramref name="order" /> parameter are:
             <list type="table"><listheader><term>Value</term><description>Meaning</description></listheader><item><term><see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see></term><description>Red, green, and blue color order in memory</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see></term><description>Blue, green, and red color order in memory</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see></term><description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see></term><description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see></term><description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see></term><description>ROMM order. ROMM only supports 24 and 48-bit images</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see></term><description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description></item></list></para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to determine whether the
            image has finished loading. 
            Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
            event to get 
            notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
            object in your application.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(Stream, LeadRect, int, CodecsLoadByteOrder, int, int, object)-->
      </example>
      <java>
        <pre>public Object loadAsync(ILeadStream stream, LeadRect tile, int bitsPerPixel, CodecsLoadByteOrder order, int firstPage, int lastPage, Object userState)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.IO.Stream,Leadtools.LeadRect,System.Object)">
      <summary>Loads the specified rectangle from the specified image stream using default options asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <param name="tile">A <see cref="T:Leadtools.LeadRect" /> describing the tile/area of the image to load.</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads. See remarks for the usage of this object.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>This method loads a section of an image stream (any format). The section begins is defined by <paramref name="tile" /> rectangle.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to determine whether the
            image has finished loading. 
            Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
            event to get 
            notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
            object in your application.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(Stream, LeadRect, object)-->
      </example>
      <java>
        <pre>public Object loadAsync(ILeadStream stream, LeadRect tile, Object userState)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.IO.Stream,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">
      <summary>Loads the specified image stream using specific options asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the stream.</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads. See remarks for the usage of this object.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>Do not poll the<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> property to determine whether the
            image is finished loaded. Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
            event to get notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation is completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
            object in your application.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(Stream, int, CodecsLoadByteOrder, int, int, object)-->
      </example>
      <java>
        <pre>public Object loadAsync(ILeadStream stream, int bitsPerPixel, CodecsLoadByteOrder order, int firstPage, int lastPage, Object userState)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.IO.Stream,System.Object)">
      <summary>Loads the specified image stream using default options asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads. See remarks for the usage of this object.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>The stream can point to any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>This method will load all the pages in a multipage file. The resulting image will have the same bits/pixel and color
             order value of the image as it was stored in the stream.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
             For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
             method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
             <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
             <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
             <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
             saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
             <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
             will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
             (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
             object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
             <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
             property will be set to <strong>false</strong>.</para>
        <para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
             property to determine whether the
             image has finished loading. 
             Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
             event to get 
             notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
             object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
             object in your application.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(Stream, object)-->
      </example>
      <java>
        <pre>public Object loadAsync(ILeadStream stream, Object userState)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">
      <summary>Loads the specified rectangle from the specified image URL using the specified options asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="uri">The <see cref="T:System.Uri" /> containing the input image data.</param>
      <param name="tile">A <see cref="T:Leadtools.LeadRect" /> describing the tile/area of the image to load.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
             will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
             <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
             images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
             images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
             images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
             ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
             You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads. See remarks for the usage of this object.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>This method loads a section of an image file (any format). The section begins is defined by <paramref name="tile" /> rectangle.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
             For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
             method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
             <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
             <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
             <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
             saving the file.</para>
             LEADTOOLS supports the following URI schemes:
             <list type="table"><listheader><term>Scheme</term><description>Description</description></listheader><item><term><see cref="F:System.Uri.UriSchemeFile" /></term><description>Specifies that the URI is a disk file in local machine or universal naming convention (UNC) path.</description></item><item><term><see cref="F:System.Uri.UriSchemeHttp" /></term><description>Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP).</description></item><item><term><see cref="F:System.Uri.UriSchemeHttps" /></term><description>Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS).</description></item><item><term><see cref="F:System.Uri.UriSchemeFtp" /></term><description>Specifies that the URI is accessed through the File Transfer Protocol (FTP).</description></item></list><para>If <paramref name="uri" /> points to a resource in a <see cref="F:System.Uri.UriSchemeHttp" />, <see cref="F:System.Uri.UriSchemeHttps" /> or
             <see cref="F:System.Uri.UriSchemeFtp" />, then this <see cref="T:Leadtools.Codecs.RasterCodecs" /> will attempt to download image data in an iterative fashion by
             creating a temporary buffer. The size of this buffer can be determined and changed by setting up the
             <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationBufferSize" /> prior to calling this method.</para><para>For authenticity and proxy settings, refer to <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> and <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" />.</para><para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
             <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
             will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
             (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
             object while the object is in loading status.</para><para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
             <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
             property will be set to <strong>false</strong>.</para><para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
             property to determine whether the
             image has finished loading. 
             Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
             event to get 
             notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.</para><para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
             object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
             object in your application.</para></remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(Uri, LeadRect, int, CodecsLoadByteOrder, int, int, object)-->
      </example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,Leadtools.LeadRect,System.Object)">
      <summary>Loads the specified rectangle from the specified image URL using default options asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="uri">The <see cref="T:System.Uri" /> containing the input image data.</param>
      <param name="tile">A <see cref="T:Leadtools.LeadRect" /> describing the tile/area of the image to load.</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads. See remarks for the usage of this object.</returns>
      <remarks>
        <para>This method loads a section of an image file (any format). The section begins is defined by <paramref name="tile" /> rectangle.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
             For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
             method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
             <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
             <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
             <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
             saving the file.</para>
             LEADTOOLS supports the following URI schemes:
             <list type="table"><listheader><term>Scheme</term><description>Description</description></listheader><item><term><see cref="F:System.Uri.UriSchemeFile" /></term><description>Specifies that the URI is a disk file in local machine or universal naming convention (UNC) path.</description></item><item><term><see cref="F:System.Uri.UriSchemeHttp" /></term><description>Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP).</description></item><item><term><see cref="F:System.Uri.UriSchemeHttps" /></term><description>Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS).</description></item><item><term><see cref="F:System.Uri.UriSchemeFtp" /></term><description>Specifies that the URI is accessed through the File Transfer Protocol (FTP).</description></item></list><para>If <paramref name="uri" /> points to a resource in a <see cref="F:System.Uri.UriSchemeHttp" />, <see cref="F:System.Uri.UriSchemeHttps" /> or
             <see cref="F:System.Uri.UriSchemeFtp" />, then this <see cref="T:Leadtools.Codecs.RasterCodecs" /> will attempt to download image data in an iterative fashion by
             creating a temporary buffer. The size of this buffer can be determined and changed by setting up the
             <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationBufferSize" /> prior to calling this method.</para><para>For authenticity and proxy settings, refer to <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> and <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" />.</para><para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
             <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
             will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
             (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
             object while the object is in loading status.</para><para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
             <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
             property will be set to <strong>false</strong>.</para><para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
             property to determine whether the
             image has finished loading. 
             Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
             event to get 
             notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.</para><para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
             object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
             object in your application.</para></remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(Uri, LeadRect, object)-->
      </example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">
      <summary>Loads the specified image URL using specified options asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="uri">The <see cref="T:System.Uri" /> containing the input image data.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
             will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
             <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
             images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
             images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
             images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
             ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
             You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads. See remarks for the usage of this object.</returns>
      <keywords>Multipage File Formats|Silverlight</keywords>
      <remarks>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>This method will load all the pages in a multipage file. The resulting image will have the same bits/pixel and color
             order value of the image as it was stored in the file.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
             For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
             method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
             <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
             <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
             <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
             saving the file.</para>
             LEADTOOLS supports the following URI schemes:
             <list type="table"><listheader><term>Scheme</term><description>Description</description></listheader><item><term><see cref="F:System.Uri.UriSchemeFile" /></term><description>Specifies that the URI is a disk file in local machine or universal naming convention (UNC) path.</description></item><item><term><see cref="F:System.Uri.UriSchemeHttp" /></term><description>Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP).</description></item><item><term><see cref="F:System.Uri.UriSchemeHttps" /></term><description>Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS).</description></item><item><term><see cref="F:System.Uri.UriSchemeFtp" /></term><description>Specifies that the URI is accessed through the File Transfer Protocol (FTP).</description></item></list><para>If <paramref name="uri" /> points to a resource in a <see cref="F:System.Uri.UriSchemeHttp" />, <see cref="F:System.Uri.UriSchemeHttps" /> or
             <see cref="F:System.Uri.UriSchemeFtp" />, then this <see cref="T:Leadtools.Codecs.RasterCodecs" /> will attempt to download image data in an iterative fashion by
             creating a temporary buffer. The size of this buffer can be determined and changed by setting up the
             <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationBufferSize" /> prior to calling this method.</para><para>For authenticity and proxy settings, refer to <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> and <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" />.</para><para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
             <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
             will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
             (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
             object while the object is in loading status.</para><para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
             <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
             property will be set to <strong>false</strong>.</para><para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
             property to determine whether the
             image has finished loading. 
             Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
             event to get 
             notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.</para><para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
             object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
             object in your application.</para></remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(Uri, int, CodecsLoadByteOrder, int, int, object)-->
      </example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,System.Object)">
      <summary>Loads the specified image URL using default options asynchronously. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="uri">The <see cref="T:System.Uri" /> containing the input image data.</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads. See remarks for the usage of this object.</returns>
      <remarks>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>This method will load all the pages in a multipage file. The resulting image will have the same bits/pixel and color
             order value of the image as it was stored in the file.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
             For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
             method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
             <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
             <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
             <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
             saving the file.</para>
             LEADTOOLS supports the following URI schemes:
             <list type="table"><listheader><term>Scheme</term><description>Description</description></listheader><item><term><see cref="F:System.Uri.UriSchemeFile" /></term><description>Specifies that the URI is a disk file in local machine or universal naming convention (UNC) path.</description></item><item><term><see cref="F:System.Uri.UriSchemeHttp" /></term><description>Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP).</description></item><item><term><see cref="F:System.Uri.UriSchemeHttps" /></term><description>Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS).</description></item><item><term><see cref="F:System.Uri.UriSchemeFtp" /></term><description>Specifies that the URI is accessed through the File Transfer Protocol (FTP).</description></item></list><para>If <paramref name="uri" /> points to a resource in a <see cref="F:System.Uri.UriSchemeHttp" />, <see cref="F:System.Uri.UriSchemeHttps" /> or
             <see cref="F:System.Uri.UriSchemeFtp" />, then this <see cref="T:Leadtools.Codecs.RasterCodecs" /> will attempt to download image data in an iterative fashion by
             creating a temporary buffer. The size of this buffer can be determined and changed by setting up the
             <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationBufferSize" /> prior to calling this method.</para><para>For authenticity and proxy settings, refer to <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> and <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" />.</para><para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
             <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
             will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
             (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
             object while the object is in loading status.</para><para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
             <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
             property will be set to <strong>false</strong>.</para><para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
             property to determine whether the
             image has finished loading. 
             Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
             event to get 
             notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.</para><para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
             object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
             object in your application.</para></remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetRasterPdfInfo(System.String,System.Int32)">
      <summary>Gets information for a page in a raster PDF file created with the LEADTOOLS Raster PDF plug in. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="fileName">The input PDF file.</param>
      <param name="pageNumber">The 1-based page number.</param>
      <returns>An instance of <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> containing information about the raster PDF page.</returns>
      <remarks>
        <para>The various <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see> methods are used to return information
            about a raster image file on disk or stream. Information such as the format, size, dimension, bits per pixel are returned as members
            of the <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see>.</para>
        <para>Raster Adobe PDF saved with the various <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)" /> methods (using any of the
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdfXyz</see> flavors), contain extra information that can be obtained using
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetRasterPdfInfo(System.String,System.Int32)">RasterCodecs.GetRasterPdfInfo</see>. This method return an instance of
            <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> filled with these extra information. Refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> for more information.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" />.</example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetRasterPdfInfo(System.IO.Stream,System.Int32)">
      <summary>Gets information for a page in a raster PDF file contained in a stream created with the LEADTOOLS Raster PDF plug in. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="stream">The input PDF stream.</param>
      <param name="pageNumber">The 1-based page number.</param>
      <returns>An instance of <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> containing information about the raster PDF page.</returns>
      <remarks>
        <para>The various <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see> methods are used to return information
            about a raster image file on disk or stream. Information such as the format, size, dimension, bits per pixel are returned as members
            of the <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see>.</para>
        <para>Raster Adobe PDF saved with the various <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)" /> methods (using any of the
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdfXyz</see> flavors), contain extra information that can be obtained using
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetRasterPdfInfo(System.String,System.Int32)">RasterCodecs.GetRasterPdfInfo</see>. This method return an instance of
            <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> filled with these extra information. Refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> for more information.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" />.</example>
      <objectivec>
        <pre>-(LTCodecsRasterPdfInfo*)getRasterPdfInfo:(LTLeadStream*)stream pageNumber:(unsigned int)pageNumber error:(NSError**)outError;</pre>
      </objectivec>
      <java>
        <pre>public CodecsRasterPdfInfo getRasterPdfInfo(ILeadStream stream, int pageNumber)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetMimeType(Leadtools.RasterImageFormat)">
      <summary>Gets a string that represents the MIME type for the specified <see cref="T:Leadtools.RasterImageFormat" /> file format. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="format">A <see cref="T:Leadtools.RasterImageFormat" />.</param>
      <returns>A string that represents the associated MIME type.</returns>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>+(NSString*)getMimeType:(LTRasterImageFormat)format;</pre>
      </objectivec>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Use">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(Leadtools.ILeadStream,System.Boolean,System.Int32)">
      <summary>
            Gets the image information from a disk file asynchronously.
            </summary>
            /// <param name="stream"><see cref="T:Leadtools.ILeadStream" /> containing the input file to query.</param><param name="totalPages">true to query the file for total number of pages; false, otherwise.</param><param name="pageNumber">The page number to query. Pass 1 for the first page (default).</param><returns>
            When this method completes, it returns the file information as a <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.
            </returns><remarks><para>Specifying true for <paramref name="totalPages" /> can cause the process to be slow if the file has a large number of
            pages.</para><para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports getting information on image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">GetInformationAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> that is in a loading status
            (<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see> set to <strong>true</strong>). Do not use the other properties of this
            object while the object is in loading status.</para><para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes getting the information about the file, the various properties of the
            <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> will be populated with the image file information and the <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see>
            property will be set to <strong>false</strong>.</para><para>It is best that you do not poll the <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see> property to determine whether the
            image information has been collected. Instead, subscribe to the <strong>IAsyncOperation.Completed</strong>
            event to get notification on when the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> operation is completed and whether any errors occurred.</para><para>
            When this method completes, it returns the file information as a <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.
            </para></remarks><seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso><seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso><example><!--RasterCodecs.GetInformationAsyncString--></example><winrt /></member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(Leadtools.ILeadStream)">
      <summary>
            Loads the specified rectangle from the specified image stream using the specified options asynchronously.
            </summary>
      <param name="stream">An <see cref="T:Leadtools.ILeadStream" /> containing the image data to load.</param>
      <returns>
            When this method completes, it returns the image as a <see cref="T:Leadtools.RasterImage" />.
            </returns>
      <remarks>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For such images, the load methods succeed, but the <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). 
            Do not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>
            Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to whether the image has finished loading. Instead, subscribe to the <strong>IAsyncOperation.Completed</strong> event to get 
            notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.
            </para>
        <para>
            When this method completes, it returns the image as a <see cref="T:Leadtools.RasterImage" />.
            </para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(ILeadStream)-->
      </example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(Leadtools.ILeadStream,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">
      <summary>
            Loads the specified rectangle from the specified image stream using the specified options asynchronously.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the image data to load.</param>
      <param name="bitsPerPixel">
            Resulting image pixel depth.
            </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order.</para>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <returns>
            When this method completes, it returns the image as a <see cref="T:Leadtools.RasterImage" />.
            </returns>
      <keywords>Multipage File Formats</keywords>
      <remarks>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For such images, the load methods succeed, but the <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>
          <para>Valid values for the <paramref name="bitsPerPixel" /> parameter are:</para>
          <list type="table">
            <listheader>
              <term>Value</term>
              <description>Meaning</description>
            </listheader>
            <item>
              <term>0</term>
              <description>Keep the original file's pixel depth (Do not convert).</description>
            </item>
            <item>
              <term>1 to 8</term>
              <description>The specified bits per pixel in the resulting image.</description>
            </item>
            <item>
              <term>12</term>
              <description>12 bits per pixel in the resulting image.</description>
            </item>
            <item>
              <term>16</term>
              <description>16 bits per pixel in the resulting image.</description>
            </item>
            <item>
              <term>24</term>
              <description>24 bits per pixel in the resulting image.</description>
            </item>
            <item>
              <term>32</term>
              <description>32 bits per pixel in the resulting image.</description>
            </item>
            <item>
              <term>48</term>
              <description>48 bits per pixel in the resulting image.</description>
            </item>
            <item>
              <term>64</term>
              <description>64 bits per pixel in the resulting image.</description>
            </item>
          </list>
        </para>
        <para>Valid values are for the <paramref name="order" /> parameter are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12- and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>
            Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to determine whether the image has finished loading. Instead, subscribe to the <strong>IAsyncOperation.Completed</strong> event to get 
            notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.
            </para>
        <para>
            When this method completes, it returns the image as a <see cref="T:Leadtools.RasterImage" />.
            </para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(ILeadStream, int, CodecsLoadByteOrder, int, int)-->
      </example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(Leadtools.ILeadStream,Leadtools.LeadRect)">
      <summary>
            Loads the specified rectangle from the specified image stream using the specified options asynchronously.
            </summary>
      <param name="stream">An <see cref="T:Leadtools.ILeadStream" /> containing the image data to load.</param>
      <param name="tile">A <see cref="T:Leadtools.LeadRect" /> describing the tile/area of the image to load.</param>
      <returns>
            When this method completes, it returns the image as a <see cref="T:Leadtools.RasterImage" />.
            </returns>
      <keywords>Multipage File Formats</keywords>
      <remarks>
        <para>This method loads a section of an image file (any format). The section begins is defined by <paramref name="tile" /> rectangle.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>
            Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to determine whether the image has finished loading. Instead, subscribe to the <strong>IAsyncOperation.Completed</strong> event to get 
            notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.
            </para>
        <para>
            When this method completes, it returns the image as a <see cref="T:Leadtools.RasterImage" />.
            </para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(ILeadStream, LeadRect)-->
      </example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(Leadtools.ILeadStream,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">
      <summary>
            Loads the specified rectangle from the specified image stream using the specified options asynchronously.
            </summary>
      <param name="stream">An <see cref="T:Leadtools.ILeadStream" /> containing the image data to load.</param>
      <param name="tile">A <see cref="T:Leadtools.LeadRect" /> describing the tile/area of the image to load.</param>
      <param name="bitsPerPixel">
            Resulting image pixel depth.
            </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order.</para>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <returns>
            When this method completes, it returns the image as a <see cref="T:Leadtools.RasterImage" />.
            </returns>
      <keywords>Multipage File Formats</keywords>
      <remarks>
        <para>This method loads a section of an image file (any format). The section begins is defined by <paramref name="tile" /> rectangle.</para>
        <para>Valid values are for the <paramref name="bitsPerPixel" /> parameter are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
        <para>Valid values are for the <paramref name="order" /> parameter are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to 
            <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the 
            <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>
            Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to determine whether the image has finished loading. Instead, subscribe to the <strong>IAsyncOperation.Completed</strong> event to get 
            notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.
            </para>
        <para>
            When this method completes, it returns the image as a <see cref="T:Leadtools.RasterImage" />.
            </para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(ILeadStream, LeadRect, int, CodecsLoadByteOrder, int, int)-->
      </example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(Leadtools.ILeadStream,System.Int32,System.Int32,System.Int32,Leadtools.RasterSizeFlags,Leadtools.Codecs.CodecsLoadByteOrder)">
      <summary>
            Loads the specified rectangle from the specified image stream using the specified options asynchronously.
            </summary>
      <param name="stream">An <see cref="T:Leadtools.ILeadStream" /> containing the image data to load.</param>
      <param name="width">New width of the image in pixels.</param>
      <param name="height">New height of the image in pixels.</param>
      <param name="flags">
            Flag that indicates the type of resizing to use.
            </param>
      <param name="bitsPerPixel">
            Resulting image pixel depth.
            </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order.</para>
      </param>
      <returns>
            When this method completes, it returns the image as a <see cref="T:Leadtools.RasterImage" />.
            </returns>
      <remarks>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For such images, the load methods succeed, but the <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Valid values are for the <paramref name="flags" /> parameter are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.None</term>
            <description>Normal resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Resample</term>
            <description>Linear interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Bicubic</term>
            <description>Bicubic interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.FavorBlack</term>
            <description>Not supported</description>
          </item>
        </list>
        <para>Valid values are for the <paramref name="bitsPerPixel" /> parameter are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
        <para>Valid values are for the <paramref name="order" /> parameter are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> 
            set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the 
            <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>
            Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to determine whether the image has finished loading. Instead, subscribe to the <strong>IAsyncOperation.Completed</strong> event to get 
            notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.
            </para>
        <para>
            When this method completes, it returns the image as a <see cref="T:Leadtools.RasterImage" />.
            </para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(ILeadStream, int, int, int, RasterSizeFlags, CodecsLoadByteOrder)-->
      </example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync(Leadtools.ILeadStream,System.Int32,System.Int32,System.Int32,Leadtools.RasterSizeFlags,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">
      <summary>
            Loads the specified rectangle from the specified image stream using the specified options asynchronously.
            </summary>
      <param name="stream">An <see cref="T:Leadtools.ILeadStream" /> containing the image data to load.</param>
      <param name="width">New width of the image in pixels.</param>
      <param name="height">New height of the image in pixels.</param>
      <param name="flags">
            Flag that indicates the type of resizing to use.
            </param>
      <param name="bitsPerPixel">
            Resulting image pixel depth.
            </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order.</para>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads. See remarks for the usage of this object.</returns>
      <keywords>Multipage File Formats</keywords>
      <remarks>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For such images, the load methods succeed, but the <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Valid values are for the <paramref name="flags" /> parameter are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.None</term>
            <description>Normal resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Resample</term>
            <description>Linear interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Bicubic</term>
            <description>Bicubic interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.FavorBlack</term>
            <description>Not supported</description>
          </item>
        </list>
        <para>Valid values are for the <paramref name="bitsPerPixel" /> parameter are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
        <para>Valid values are for the <paramref name="order" /> parameter are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>
            Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to determine whether the image has finished loading. Instead, subscribe to the <strong>IAsyncOperation.Completed</strong> event to get 
            notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.
            </para>
        <para>
            When this method completes, it returns the image as a <see cref="T:Leadtools.RasterImage" />.
            </para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
        <!--RasterCodecs.LoadAsync(ILeadStream, int, int, int, RasterSizeFlags, CodecsLoadByteOrder, int, int)-->
      </example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SaveAsync(Leadtools.RasterImage,Leadtools.ILeadStream,Leadtools.RasterImageFormat,System.Int32)">
      <summary>
            Saves a <see cref="T:Leadtools.RasterImage" /> to a stream in any of the supported compressed or uncompressed formats.
            </summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that holds the image data.</param>
      <param name="stream">An <see cref="T:Leadtools.ILeadStream" /> where the image data will be saved.</param>
      <param name="format">The output file format. For valid values,
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</param>
      <param name="bitsPerPixel">Resulting file's pixel depth. Note that not all bits per pixel are
            available to all file formats.  For valid values, refer to 
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>. If
            <paramref name="bitsPerPixel" /> is 0, the image will be stored using the closet bits/pixel value supported by that format.
            For example, if a file format supports 1, 4, and 24 bits/pixel, and
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 5, the file will be stored as 24 bit. Likewise, if
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 2, the file will be stored as 4 bit.</param>
      <returns>
            An asynchronous save operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            </returns>
      <remarks>
        <para>If the output file format supports multipage and then all the pages in <paramref name="image" /> will be saved to the
            file.</para>
        <para>If the image is 8 bits per pixel or greater, use the LEAD CMP format or one of the JPEG (JTIF or JFIF) formats to
            save disk space.</para>
        <para>If the image is 1-bit per pixel, use the LEAD 1-bit format or a CCITT Group 3 or 4 format to save disk space.</para>
        <para>If the image has a region, the region stored in the image will be saved, if the image is saved as one of the TIFF
            file formats. For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.
            Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled. Images can be
            window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevel</see> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see>, by using
            the <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> or by loading an image from a file format that supports Window Leveling. If a
            window-leveled image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsSaveOptions" /> class to set up other save options parameters before calling this
            method.</para>
        <para>Use to the <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage" /> event to provide progress feedback or to set or modify the saved image data.</para>
        <para>This method supports signed data images, but only DICOM and TIFF formats support signed data. This method will throw
            an exception if you attempt to save a signed image to a format other than DICOM or TIFF.</para>
        <para>In LEADTOOLS version 17 and up, when saving a colored image (such as a 24-bits per pixel image) to bitonal (1-bit per pixel), the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will not use any dithering when converting the image data. This is done because dithering is not 
            recommended when converting colored images containing text when performing document processing such as OCR or Barcode. The resulting text will be fuzzy and
            hard for a recognition engine to process. To save a colored image as bitonal with Floyd-Stein dithering (the behavior of LEADTOOLS 16.5 and earlier)
            use <see cref="P:Leadtools.Codecs.CodecsSaveOptions.UseImageDitheringMethod">CodecsSaveOptions.UseImageDitheringMethod</see> along with
            <see cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod</see> as illustrated below:</para>
        <para>
          <pre>
            <code>
            // 'codecs' is the RasterCodecs to use when saving
            // 'image' is a colored RasterImage object
            // Setup FloydStein dithering:
            codecs.Options.Save.UseImageDitheringMethod = true;
            image.DitheringMethod = RasterDitheringMethod.FloydStein;
            // Save the image as 1-bpp with auto-dithering:
            codecs.Save(image, fileName, RasterImageFormat.Tif, 1);
            </code>
          </pre>
        </para>
        <para>For information about quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load a 24 bits/pixel CMP image and save it to a stream as 1 bits/pixel TIF image.
            <!--RasterCodecs.SaveAsync(RasterImage, ILeadStream, RasterImageFormat, int)--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SaveAsync(Leadtools.RasterImage,Leadtools.ILeadStream,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">
      <summary>
            Saves a <see cref="T:Leadtools.RasterImage" /> to a stream in any of the supported compressed or uncompressed formats.
            </summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that holds the image data.</param>
      <param name="stream">An <see cref="T:Leadtools.ILeadStream" /> where the image data will be saved.</param>
      <param name="format">The output file format. For valid values,
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</param>
      <param name="bitsPerPixel">Resulting file's pixel depth. Note that not all bits per pixel are
            available to all file formats.  For valid values, refer to 
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>. If
            <paramref name="bitsPerPixel" /> is 0, the image will be stored using the closet bits/pixel value supported by that format.
            For example, if a file format supports 1, 4, and 24 bits/pixel, and
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 5, the file will be stored as 24 bit. Likewise, if
            <see cref="P:Leadtools.RasterImage.BitsPerPixel">RasterImage.BitsPerPixel</see> is 2, the file will be stored as 4 bit.</param>
      <param name="firstPage">1-based index of the first page in <paramref name="image" /> to save.</param>
      <param name="lastPage">1-based index of the last page in <paramref name="image" /> to save. Pass -1 to save from
            <paramref name="firstPage" /> to the last page in <paramref name="image" />.</param>
      <param name="firstSavePageNumber">1-based index of the first output page. If the output file already exists, then this
            parameter lets you control which pages to overwrite and/or where to append the new pages.</param>
      <param name="pageMode">
        <para>Determines how to handle the page when saving to multipage formats. This can be one of the following:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Append</see>
            </term>
            <description>Append the new page(s) to the end of the file. If the file does not exist, this option will create
            the file and add the pages to it.  <paramref name="firstSavePageNumber" /> is not used.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Insert</see>
            </term>
            <description>Insert the new page(s) at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Replace</see>
            </term>
            <description>Replace the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Overwrite</see>
            </term>
            <description>Overwrite the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
        </list>
      </param>
      <returns>
            An asynchronous save operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            </returns>
      <remarks>
        <para>If the output file format supports multipage and then all the pages in <paramref name="image" /> will be saved to the
            file.</para>
        <para>If the image is 8 bits per pixel or greater, use the LEAD CMP format or one of the JPEG (JTIF or JFIF) formats to
            save disk space.</para>
        <para>If the image is 1-bit per pixel, use the LEAD 1-bit format or a CCITT Group 3 or 4 format to save disk space.</para>
        <para>If the image has a region, the region stored in the image will be saved, if the image is saved as one of the TIFF
            file formats. For more information, refer to <see cref="T:L.Topics.SavingARegion">Saving A Region</see>.
            Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit.</para>
        <para>Only TIFF and DICOM file formats are capable of saving images that have been window-leveled. Images can be
            window-leveled by calling <see cref="M:Leadtools.RasterImage.WindowLevel(System.Int32,System.Int32,Leadtools.RasterColor[],Leadtools.RasterWindowLevelMode)">RasterImage.WindowLevel</see> and specifying
            <see cref="T:Leadtools.RasterWindowLevelMode">RasterWindowLevelMode.PaintAndProcessing</see>, by using
            the <see cref="T:Leadtools.ImageProcessing.Core.WindowLevelCommand" /> or by loading an image from a file format that supports Window Leveling. If a
            window-leveled image is saved as any other file format, the image data will be converted before being saved. For more 
            information, refer to <see cref="T:Leadtools.Topics.SavingWindowLeveledBitmaps">Saving Window-Leveled Images</see>.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsSaveOptions" /> class to set up other save options parameters before calling this
            method.</para>
        <para>Use to the <see cref="E:Leadtools.Codecs.RasterCodecs.SaveImage" /> event to provide progress feedback or to set or modify the saved image data.</para>
        <para>This method supports signed data images, but only DICOM and TIFF formats support signed data. This method will throw
            an exception if you attempt to save a signed image to a format other than DICOM or TIFF.</para>
        <para>In LEADTOOLS version 17 and up, when saving a colored image (such as a 24-bits per pixel image) to bitonal (1-bit per pixel), the
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will not use any dithering when converting the image data. This is done because dithering is not the
            recommended when converting colored images containing text for document processing such as OCR and Barcode. The resulting text will be fuzzy and
            hard for a recognition engine to process. To save a colored image as bitonal with Floyd-Stein dithering (the behavior of LEADTOOLS 16.5 and earlier)
            use <see cref="P:Leadtools.Codecs.CodecsSaveOptions.UseImageDitheringMethod">CodecsSaveOptions.UseImageDitheringMethod</see> along with
            <see cref="P:Leadtools.RasterImage.DitheringMethod">RasterImage.DitheringMethod</see> as illustrated below:</para>
        <para>
          <pre>
            <code>
            // 'codecs' is the RasterCodecs to use when saving
            // 'image' is a colored RasterImage object
            // Setup FloydStein dithering:
            codecs.Options.Save.UseImageDitheringMethod = true;
            image.DitheringMethod = RasterDitheringMethod.FloydStein;
            // Save the image as 1-bpp with auto-dithering:
            codecs.Save(image, fileName, RasterImageFormat.Tif, 1);
            </code>
          </pre>
        </para>
        <para>For information about quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>
            This example will load a 24 bits/pixel CMP image and save it to a stream as 1 bits/pixel TIF image.
            <!--RasterCodecs.SaveAsync(RasterImage, ILeadStream, RasterImageFormat, int, int, int, int, CodecsSavePageMode)--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SaveStampAsync(Leadtools.RasterImage,Leadtools.ILeadStream)">
      <summary>
            Saves a stamp in an existing file with specific options.
            </summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that contain the thumbnail (stamp) image.</param>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the data of an existing image file.</param>
      <returns>
            An asynchronous save operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            </returns>
      <remarks>
        <para>The stamp will be written to last page in the file. If that page already has a stamp, it will be overwritten; If the
            file to which the stamp is being written does not exist, an exception will occur.</para>
        <para>This method works for regular JPEG files and Exif JPEG files. For regular JPEG files, the stamp saved is always
            uncompressed and can be 8 or 24 bits per pixel. The stamp can be any width and height, but the stamp data and stamp header
            must completely fit in an APP0 marker. Therefore, the size must be less than 64k bytes (0xFFFF).</para>
        <para>For Exif JPEG files, the stamps can be uncompressed or JPEG compressed and must be 24 bits per pixel. Exif JPEG
            stamps are supposed to be 160 x 120. However, LEADTOOLS can save and read Exif JPEG stamps of other dimensions. The stamp,
            along with other information such as the TIFF_HEADER, 0th IFD, 1st IFD, etc. must completely fit in an APP1 marker.
            Therefore, the size must be less than 64k bytes (0xFFFF).</para>
        <para>
          <strong>NOTE</strong>: At this time, there are no multipage formats that support stamps.
            </para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <example>
            This example will add a stamp to an existing file before reading it back
            <!--RasterCodecs.Stamp--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SaveStampAsync(Leadtools.RasterImage,Leadtools.ILeadStream,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">
      <summary>
            Saves a stamp in an existing file with specific options.
            </summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object that contain the thumbnail (stamp) image.</param>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the data of an existing image file.</param>
      <param name="firstPage">1-based index of the first page in <paramref name="image" /> to save.</param>
      <param name="lastPage">1-based index of the last page in <paramref name="image" /> to save. Pass -1 to save from
            <paramref name="firstPage" /> to the last page in <paramref name="image" />.</param>
      <param name="firstSavePageNumber">1-based index of the first output page. If the output file already exists, then this
            parameter lets you control which pages to overwrite and/or where to append the new pages.</param>
      <param name="pageMode">
        <para>Determines how to handle the page when saving to multipage formats. This can be one of the following:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Append</see>
            </term>
            <description>Append the new page(s) to the end of the file. If the file does not exist, this option will create
            the file and add the pages to it.  <paramref name="firstSavePageNumber" /> is not used.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Insert</see>
            </term>
            <description>Insert the new page(s) at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Replace</see>
            </term>
            <description>Replace the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSavePageMode">CodecsSavePageMode.Overwrite</see>
            </term>
            <description>Overwrite the page(s) starting at the index specified by <paramref name="firstSavePageNumber" />.</description>
          </item>
        </list>
      </param>
      <returns>
            An asynchronous save operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            </returns>
      <remarks>
        <para>The stamp will be written to last page in the file. If that page already has a stamp, it will be overwritten; If the
            file to which the stamp is being written does not exist, an exception will occur.</para>
        <para>This method works for regular JPEG files and Exif JPEG files. For regular JPEG files, the stamp saved is always
            uncompressed and can be 8 or 24 bits per pixel. The stamp can be any width and height, but the stamp data and stamp header
            must completely fit in an APP0 marker. Therefore, the size must be less than 64k bytes (0xFFFF).</para>
        <para>For Exif JPEG files, the stamps can be uncompressed or JPEG compressed and must be 24 bits per pixel. Exif JPEG
            stamps are supposed to be 160 x 120. However, LEADTOOLS can save and read Exif JPEG stamps of other dimensions. The stamp,
            along with other information such as the TIFF_HEADER, 0th IFD, 1st IFD, etc. must completely fit in an APP1 marker.
            Therefore, the size must be less than 64k bytes (0xFFFF).</para>
        <para>
          <strong>NOTE</strong>: At this time, there are no multipage formats that support stamps.
            </para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <example>
            This example will add a stamp to an existing file before reading it back
            <!--RasterCodecs.Stamp--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.FeedLoad(Leadtools.Junk.IBuffer,System.Int32,System.Int32)">
      <summary>
            Supplies unmanaged memory image data to the file-load process from a buffer that you provide.
            </summary>
      <param name="data">The image file in a buffer.</param>
      <param name="offset">Offset from the beginning of the buffer to where the image data starts.</param>
      <param name="length">Total size (in bytes) of the image data.</param>
      <remarks>
        <para>Use this method with the <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedLoad" /> methods.</para>
        <para>For a description of how the methods relate to each other, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" />.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image. For these images, the
            load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.FeedGetInformation(Leadtools.Junk.IBuffer,System.Int32,System.Int32)">
      <summary>
            Supplies unmanaged memory image data to the file information process from a buffer that you provide.
            </summary>
      <param name="data">The image file unmanaged memory data.</param>
      <param name="offset">Offset from the beginning of the buffer to where the image data starts.</param>
      <param name="length">Total size (in bytes) of the image data.</param>
      <returns>true if the get information process requires more data; false, otherwise. When this method returns false,
            you can break out of the loop and call <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedGetInformation" /> to obtain the <see cref="T:Leadtools.Codecs.CodecsImageInfo" />
            object containing the information about the image file.</returns>
      <remarks>
        <para>Use this method with the <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.StopFeedGetInformation" /> methods.</para>
        <para>For a description of how the methods relate to each other, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedGetInformation(System.Boolean,System.Int32)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.DeletePageAsync(Leadtools.ILeadStream,System.Int32)">
      <summary>
            Deletes the specified page from a multipage file in a stream, if the format supports delete operations.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the data of the image file from which to delete the page.</param>
      <param name="page">1-based index of the page to delete. Use -1 to delete the last page. Use 1 to delete the first page.</param>
      <returns>
            An asynchronous delete page operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            </returns>
      <remarks>
            The following file formats support delete operations:
            <list><item><description>TIFF (most TIFF formats, including JTIF, but excluding EXIF)</description></item><item><description>PCX</description></item><item><description>Winfax</description></item></list></remarks>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading and Saving Large Tiff Files</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <seealso cref="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">Fast File Info</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadLoadResolutionsAsync(Leadtools.ILeadStream)">
      <summary>
            Examines a stream to determine which resolutions it contains.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the data of the image file to query.</param>
      <returns>
            When this method completes, it returns the available resolutions as an array of <see cref="T:Leadtools.LeadSize" /> structures.
            </returns>
      <remarks>
        <para>A FlashPix, PhotoCD, ECW, JPEG 2000 or JBIG/JBIG2 file can contain more than one copy of the same image, each at a different physical
            resolution (width and height in pixels).</para>
        <para>After you get the available resolutions, you can use any of the following to specify the one to be loaded:</para>
        <para>
          <list type="bullet">
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsJbigLoadOptions.Resolution">CodecsJbigLoadOptions.Resolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsJpeg2000LoadOptions.J2kResolution">CodecsJpeg2000LoadOptions.J2kResolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsJpeg2000LoadOptions.CmwResolution">CodecsJpeg2000LoadOptions.CmwResolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsFpxLoadOptions.Resolution">CodecsFpxLoadOptions.Resolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsPcdLoadOptions.Resolution">CodecsPcdLoadOptions.Resolution</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsEcwLoadOptions.Resolution">CodecsEcwLoadOptions.Resolution</see>
              </description>
            </item>
          </list>
        </para>
        <para>For more information, refer to <see cref="T:L.Topics.ImplementingJbigFeatures">Implementing JBIG Features</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadLoadResolutions(System.String)">ReadLoadResolutions</see>.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ConvertAsync(Leadtools.ILeadStream,Leadtools.ILeadStream,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsImageInfo)">
      <summary>
            Converts an image stream from one format to another, creating a new image file in a stream in the new format.
            </summary>
      <param name="srcStream">A <see cref="T:Leadtools.ILeadStream" /> containing the data of the input image file.</param>
      <param name="destStream">A <see cref="T:Leadtools.ILeadStream" /> that will contain the data of the output image file.</param>
      <param name="format">The output file format. For valid values, refer to 
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</param>
      <param name="width">New width of the output image. If this value is not 0, then the output file will be resized to the
            <paramref name="width" /> value. Use a value of 0 if you do not wish to resize the output file.</param>
      <param name="height">New height of the output image. If this value is not 0, then the output file will be resized to the
            <paramref name="height" /> value. Use a value of 0 if you do not wish to resize the output file.</param>
      <param name="bitsPerPixel">The output image pixel depth. Note that not all bits per pixel are available to
            all file formats.</param>
      <param name="info">A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object specifying more options for the conversion.</param>
      <returns>
            An asynchronous convert operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            </returns>
      <keywords>Bits per pixel | Color space | Image converter</keywords>
      <remarks>
        <para>If you convert to a lower bits-per-pixel format, this method optimizes the colors automatically. For example, when
            converting a 24-bit file (16 million colors) to an 8-bit file (256 colors) this method selects the best 256 colors to
            represent the 24-bit image</para>
        <para>Note that this is a high-level method that does conversion from all possible formats to all possible formats.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Convert(System.String,System.String,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsImageInfo)">Convert</see>.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadMarkersAsync(Leadtools.ILeadStream)">
      <summary>
            Reads all the metadata markers (COM and APPn) from a stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the input file image data.</param>
      <returns>
            When this method completes, it returns a collection of <see cref="T:Leadtools.RasterMarkerMetadata" /> objects containing the metadata marker data.
            </returns>
      <remarks>
        <para>This method reads all the metadata markers from a file, and returns a collection of the markers.</para>
        <para>For Exif files, this metadata collection will contain all the Exif and GPS comments, stored in APP1. It will also
            contain the audio information stored in APP2.</para>
        <para>If the file contains no marker, then this method will return an empty collection.</para>
      </remarks>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>
            This example will read all the markers from a stream that contains EXIF file data
            <!--RasterCodecs.ReadMarkers(Stream)--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadThumbnailAsync(Leadtools.ILeadStream,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">
      <summary>
            Creates a thumbnail from the specified image stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the image data from which the thumbnail image will be
            created.</param>
      <param name="options">Options for creating the thumbnail image.</param>
      <param name="pageNumber">1-based index of the page from which the thumbnail image should be created.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method creates.</returns>
      <returns>
            When this method completes, it returns the <see cref="T:Leadtools.RasterImage" /> object that this method creates.
            </returns>
      <remarks>
            This method will always return a thumbnail image. Depending on the <paramref name="options" /> passed, this method might
            read the stamp stored inside EXIF, CMP, JFIF and FlashPix files and return that.  To read the file stamp only, use
            <see cref="M:Leadtools.Codecs.RasterCodecs.ReadStamp(System.String,System.Int32)" />.
            </remarks>
      <seealso cref="T:L.Topics.ThumbnailBrowser">Thumbnail Browser</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)">ReadThumbnail</see>.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadStampAsync(Leadtools.ILeadStream,System.Int32)">
      <summary>
            Reads a thumbnail image stored in an image stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the image data which contains the stamp image to load.</param>
      <param name="pageNumber">1-based index of the page from which the stamp image should be loaded.</param>
      <returns>
            When this method completes, it returns the <see cref="T:Leadtools.RasterImage" /> object that this method loads.
            </returns>
      <remarks>
            Only EXIF, CMP, JFIF and FlashPix formats support stamps. However, not all file of these formats contain stamps. To create a
            thumbnail image from any file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)" />.
            </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.SaveStamp(Leadtools.RasterImage,System.String,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.EnumTagsAsync(Leadtools.ILeadStream,System.Int32)">
      <summary>
            Enumerates all the tags in a stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the input file image data.</param>
      <param name="pageNumber">1-based index of the page from which to enumerate the tags.</param>
      <returns>
            An asynchronous enumeration operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            </returns>
      <remarks>
        <para>This method will fire the <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound" /> event for each tag found in the stream.</para>
        <para>Currently, only TIFF and Exif files contain tags.</para>
        <para>For multipage TIFF files, you can enumerate the tags from a particular page. Specify the page number whose tags to
            enumerate.</para>
        <para>This method enumerates the standard TIFF tags and the user tags. Standard TIFF tags are less than 32767. User TIFF
            tags are usually between 32768 and 65535.</para>
        <para>To enumerate the tags stored in a disk file, use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</para>
        <para>To read a tag value, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" /> and to read all the tags in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</para>
        <para>For general information about TIFF tags, refer to
            <see cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</see>.</para>
        <para>Do not attempt to use <see cref="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)" /> to delete tags from inside the <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound" /> event. If you
            want to delete tags that you enumerate, use this event to add the tags to a list. Upon returning from
            <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />, you can delete all the tags from the list.</para>
        <para>You can use <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" /> to determine whether a certain file format supports tags.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeysAsync(Leadtools.ILeadStream,System.Int32)">
      <summary>
            Enumerates all the GeoKeys in a Geo TIFF stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the input image data.</param>
      <param name="pageNumber">1-based index of the page from which to enumerate the tags.</param>
      <returns>
            An asynchronous enumeration operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            </returns>
      <remarks>
        <para>To enumerate all the keys stored in a disk file, use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />.</para>
        <para>For multipage Geo TIFF files, you can enumerate the GeoKeys from a particular page. Specify the page number whose
            GeoKeys to enumerate.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.GeoKeyFound" /> event is called for each GeoKey value stored in the three standard Geo TIFF tags 
            (34735, 34736 and 34737). For enumerating the other standard Geo TIFF data stored as separate tags, you can use
            <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />. Or, you can call <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" /> for each of these tags (since there are not that
            many of them to warrant the use of <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />).</para>
        <para>For more information, refer to <see cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</see>.</para>
      </remarks>
      <example>
            This example will show all the GeoKeys in the given file and then load them and add them to a destination file
            <!--RasterCodecs.EnumGeoKeys--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.DeleteTagAsync(Leadtools.ILeadStream,System.Int32,System.Int32)">
      <summary>
            Deletes a tag from a stream, if the file supports tags (TIFF or Exif).
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the image data of the file from which to delete the tag.</param>
      <param name="pageNumber">The 1-based index of the page from which the tag will be deleted. Use -1 to delete the tag from
            the last page. Use 1 to delete the tag from the first page.</param>
      <param name="id">The ID of the tag in the TIFF file. The tag IDs are between 0 and 65535.</param>
      <returns>
            An asynchronous delete operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            </returns>
      <remarks>
        <para>If you want to delete the tag from a particular IFD in the file, set
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.UseImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.UseImageFileDirectoryOffset</see>
            to true, and set <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.ImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.ImageFileDirectoryOffset</see>
            to the IFD in question. This method will delete tags only from the main IFDs that make up an image. Some TIFF tags are
            themselves SubIFDs. You can delete tags from such SubIFDs by using
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.UseImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.UseImageFileDirectoryOffset</see>
            and
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.ImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.ImageFileDirectoryOffset</see>
            specifying the IFD as above.</para>
        <para>Notes:</para>
        <para>
          <list type="bullet">
            <item>
              <description>The <strong>Leadtools.Codecs.Cmp.dll</strong> codec is used to delete the tag from all the TIFF and Exif
            files.</description>
            </item>
            <item>
              <description>Do not attempt to use this method to delete tags from inside the <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound" /> event. If you
            want to delete tags that you enumerate, use the <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound" /> event to add the tags to a list. Upon returning
            from <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />, you can delete all the tags from the list.</description>
            </item>
            <item>
              <description>You should be careful when you delete non-custom tags (tags below 32768). If you delete the wrong tag,
            you might corrupt the TIF file!</description>
            </item>
          </list>
        </para>
        <para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. Recompression is not performed under any of these cases.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)">DeleteTag</see>.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadTagAsync(Leadtools.ILeadStream,System.Int32,System.Int32)">
      <summary>
            Gets the specified tagged data from a TIFF stream.
            </summary>
      <returns>
            When this method completes, it returns the tag data.
            </returns>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)">EnumTags(string, int) Method</seealso>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)">EnumTags(Stream, int) Method</seealso>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the input file image data.</param>
      <param name="pageNumber">1-based index of the page from which to read the tag.</param>
      <param name="id">
        <para>Tag to identify the data in the TIFF file. Use the same tag that you specified in the <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTag(System.String,System.Int32,Leadtools.RasterTagMetadata)" />. Examples
            of registered tags are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0x8298</term>
            <description>Copyright comment</description>
          </item>
          <item>
            <term>0x8769</term>
            <description>General Exif comments</description>
          </item>
          <item>
            <term>0x8825</term>
            <description>Exif GPS comments</description>
          </item>
          <item>
            <term>0x80A4</term>
            <description>Annotation TIFF tag</description>
          </item>
        </list>
      </param>
      <remarks>
        <para>This method is provided to support TIFF tags that you define. If no such tag exists in the image, this method will
            return a null reference (Nothing in Visual Basic).</para>
        <para>To read all the tags stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" /></para>
        <para>You can use <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" /> to determine whether a certain file format supports tags.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)">DeleteTag</see>.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadTagsAsync(Leadtools.ILeadStream,System.Int32)">
      <summary>
            Reads all the tags stored in a TIFF file.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the input image data.</param>
      <param name="pageNumber">1-based index of the page from which to read the tags.</param>
      <returns>
            When this method completes, it returns a collection of <see cref="T:Leadtools.RasterTagMetadata" /> containing all the tags found in the
            file. If the file does not contain any tags, an empty collection will be returned. If the file format does not support tags,
            an exception will be thrown.
            </returns>
      <remarks>
        <para>To read a specific tag stored in a file use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" />, and to enumerate all the tag ids (but not the
            data) stored in a file use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</para>
        <para>This method will throw an exception if the file format does not support tags. To determine whether a file
            format supports tags, use <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />. You can also automatically load all the tags stored in a file during a
            load operation by setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags">CodecsLoadOptions.Tags</see> property to true. The tag
            data will be stored in the resulting image <see cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</see> collection.</para>
        <para>To load all the tags stored in a disk file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" />
      <seealso cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys"> Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadTagsWithOffsetsAsync(Leadtools.ILeadStream,System.Int32,Leadtools.Junk.IVector{System.Int64})">
      <summary>
            Reads all the tags stored in a TIFF file, along with the offsets for each tag.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the input image data.</param>
      <param name="pageNumber">1-based index of the page from which to read the tags.</param>
      <param name="offsets">An array that contains the offsets for each tag.</param>
      <returns>
            When this method completes, it returns a collection of <see cref="T:Leadtools.RasterTagMetadata" /> containing all the tags found in the
            file. If the file does not contain any tags, an empty collection will be returned. If the file format does not support tags,
            an exception will be thrown.
            </returns>
      <remarks>
        <para>To read a specific tag stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" /> and to enumerate all the tag ids (but not the
            data) stored in a file use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</para>
        <para>This method will throw an exception if the file format does not support tags. To determine whether a file
            format supports tags, use <see cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />. You can also automatically load all the tags stored in a file during a
            load operation by setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags">CodecsLoadOptions.Tags</see> property to true. The tags
            data will be stored in the resulting image <see cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</see> collection.</para>
        <para>To load all the tags stored in a disk file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Tags" />
      <seealso cref="P:Leadtools.RasterImage.Tags">RasterImage.Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>
        <para>This example will load all the tags, with their offsets, from a file.</para>
        <!--RasterCodecs.ReadTagsWithOffsetsExample-->
      </example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadGeoKeyAsync(Leadtools.ILeadStream,System.Int32,System.Int32)">
      <summary>
            Gets the specified GeoKey data from a TIFF stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the input file data.</param>
      <param name="pageNumber">1-based index of the page from which to read the GeoKey.</param>
      <param name="id">
        <para>GeoKey ID. Values of the GeoKey ID range between 0 and 65535. Possible ranges are:</para>
        <list type="table">
          <listheader>
            <term>Range</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0..1023</term>
            <description>Do not use; reserved for future use.</description>
          </item>
          <item>
            <term>1024..2047</term>
            <description>GeoTIFF Configuration Keys.</description>
          </item>
          <item>
            <term>2048..3071</term>
            <description>Geographic/Geocentric CS Parameter Keys.</description>
          </item>
          <item>
            <term>3072..4095</term>
            <description>Projected CS Parameter Keys.</description>
          </item>
          <item>
            <term>4096..5119</term>
            <description>Vertical CS Parameter Keys.</description>
          </item>
          <item>
            <term>5120..32767</term>
            <description>Reserved.</description>
          </item>
          <item>
            <term>32768..65535</term>
            <description>Private use - use to store your own data.</description>
          </item>
        </list>
      </param>
      <returns>When this method completes, it returns the GeoKey data.</returns>
      <remarks>
        <para>You can use this method to obtain the GeoKey data from a particular file.</para>
        <para>If no such GeoKey exists in the image, this method will return a null reference (Nothing in Visual Basic).</para>
        <para>The most efficient way of reading the GeoKeys in a file is to enumerate them with <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" /> and 
            then read each GeoKey with <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKey(System.String,System.Int32,System.Int32)" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKey(System.String,System.Int32,System.Int32)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadGeoKeysAsync(Leadtools.ILeadStream,System.Int32)">
      <summary>
            Reads all the GeoKey data found in a stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the input TIFF image data.</param>
      <param name="pageNumber">1-based index of the page from which to read the GeoKey tags.</param>
      <returns>
            When this method completes it returns a collection of <see cref="T:Leadtools.RasterTagMetadata" /> containing all the GeoKey tags found in the file. If the file does not
            contain any GeoKeys, an empty collection will be returned. If the file format does not support GeoKeys, an exception will be thrown.
            </returns>
      <remarks>
        <para>To read a specific geo key stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKey(System.String,System.Int32,System.Int32)" /> and to enumerate all the GeoKeys stored in a
            file use <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />.</para>
        <para>This method will throw an exception if the file format does not support GeoKeys. To determine whether a file
            format supports GeoKeys, use <see cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />. You can also automatically load all the GeoKeys stored in a
            file during a load operation by setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.GeoKeys">CodecsLoadOptions.GeoKeys</see> property to
            true. The GeoKeys data will be stored in the resulting image <see cref="P:Leadtools.RasterImage.GeoKeys">RasterImage.GeoKeys</see> collection.</para>
        <para>To load all the GeoKeys stored in a disk file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKeys(System.String,System.Int32)" />.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKeys(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.GeoKeys" />
      <seealso cref="P:Leadtools.RasterImage.GeoKeys">RasterImage.GeoKeys</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments">TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys"> Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteTagAsync(Leadtools.ILeadStream,System.Int32,Leadtools.RasterTagMetadata)">
      <summary>
            Writes or changes a tag to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> that contains the file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the tag.</param>
      <param name="tag">Tag to identify the data in the TIFF file.</param>
            An asynchronous write operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            <remarks><para>This method writes tags into an existing file or changes tags in an existing file.</para><para>This method works only with TIFF files.</para><para>Note: Use this method carefully. LEADTOOLS will not restrict the tags that you write. If you write bad tags, the file
            might become corrupted. Consult the TIFF documentation for a list of predefined tags. It is recommended that you write only
            the user-defined tags (the tags between 0x8000 and 0xFFFF).</para><para>See the TIFF documentation for a complete list of the TIFF tags and types.</para><para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para><p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the tag. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p></remarks><seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso><seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso><example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)">DeleteTag</see>.</example><winrt /></member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteTagsAsync(Leadtools.ILeadStream,System.Int32,Leadtools.Junk.IVectorView{Leadtools.RasterTagMetadata})">
      <summary>
            Writes or changes one or more tags to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> that contains the file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the tag.</param>
      <param name="tags">A collection of <see cref="T:Leadtools.RasterTagMetadata" /> objects to identify the data in the TIFF file.</param>
            An asynchronous write operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            <remarks><para>This method writes tags into an existing file or changes tags in an existing file.</para><para>This method works only with TIFF files.</para><para>Note: Use this method carefully. LEADTOOLS will not restrict the tags that you write. If you write bad tags, the file
            might become corrupted. Consult the TIFF documentation for a list of predefined tags. It is recommended that you write only
            the user-defined tags (the tags between 0x8000 and 0xFFFF).</para><para>See the TIFF documentation for a complete list of the TIFF tags and types.</para><p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the comment. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p></remarks><seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso><seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso><example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</example><winrt /></member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteTagsAsync(Leadtools.ILeadStream,System.Int32,Leadtools.RasterTagMetadata[])">
      <summary>
            Writes or changes one or more tags to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> that contains the file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the tag.</param>
      <param name="tags">An array of <see cref="T:Leadtools.RasterTagMetadata" /> objects to identify the data in the TIFF file.</param>
            An asynchronous write operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            <remarks><para>This method writes tags into an existing file or changes tags in an existing file.</para><para>This method works only with TIFF files.</para><para>Note: Use this method carefully. LEADTOOLS will not restrict the tags that you write. If you write bad tags, the file
            might become corrupted. Consult the TIFF documentation for a list of predefined tags. It is recommended that you write only
            the user-defined tags (the tags between 0x8000 and 0xFFFF).</para><para>See the TIFF documentation for a complete list of the TIFF tags and types.</para><p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the comment. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p></remarks><seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso><seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso><example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</example><winrt /></member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteGeoKeyAsync(Leadtools.ILeadStream,System.Int32,Leadtools.RasterTagMetadata)">
      <summary>
            Writes or changes a GeoKeys to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> that contains the file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the GeoKey.</param>
      <param name="geoKey">GeoKey to identify the data in the Geo TIFF file.</param>
            An asynchronous write operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            <remarks><para>This method writes to or changes the GeoKeys in an existing file.</para><para>This method works only with TIFF files. If you also want to write the other TIFF tags and comments, use
            <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarkers(System.String,System.Int32,Leadtools.RasterCollection{Leadtools.RasterMarkerMetadata})">WriteMarkers</see> instead.</para><para>Note: Use this method carefully. LEADTOOLS will not restrict the GeoKeys that you write. If you write bad GeoKeys,
            the file might become corrupted. Consult the GeoTIFF specification documentation for a list of GeoKeys.</para><p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the GeoKey. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p></remarks><seealso cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</seealso><seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso><seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso><example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteGeoKey(System.String,System.Int32,Leadtools.RasterTagMetadata)" />.</example><winrt /></member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteGeoKeysAsync(Leadtools.ILeadStream,System.Int32,Leadtools.Junk.IVectorView{Leadtools.RasterTagMetadata})">
      <summary>
            Writes or changes one or more GeoKeys to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> that contains the file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the tag.</param>
      <param name="geoKeys">A collection of <see cref="T:Leadtools.RasterTagMetadata" /> GeoKey objects to identify the data in the TIFF file.</param>
            An asynchronous write operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            <remarks><para>This method writes to or changes the GeoKeys in an existing file.</para><para>This method works only with TIFF files. If you also want to write the other TIFF tags and comments, use
            <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarkers(System.String,System.Int32,Leadtools.RasterCollection{Leadtools.RasterMarkerMetadata})">WriteMarkers</see> instead.</para><para>Note: Use this method carefully. LEADTOOLS will not restrict the GeoKeys that you write. If you write bad GeoKeys,
            the file might become corrupted. Consult the GeoTIFF specification documentation for a list of GeoKeys.</para><p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the GeoKey. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p></remarks><seealso cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</seealso><seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso><seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso><example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />.</example><winrt /></member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteGeoKeysAsync(Leadtools.ILeadStream,System.Int32,Leadtools.RasterTagMetadata[])">
      <summary>
            Writes or changes one or more GeoKeys to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> that contains the file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the tag.</param>
      <param name="geoKeys">An array of <see cref="T:Leadtools.RasterTagMetadata" /> GeoKey objects to identify the data in the TIFF file.</param>
            An asynchronous write operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            <remarks><para>This method writes to or changes the GeoKeys in an existing file.</para><para>This method works only with TIFF files. If you also want to write the other TIFF tags and comments, use
            <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarkers(System.String,System.Int32,Leadtools.RasterCollection{Leadtools.RasterMarkerMetadata})">WriteMarkers</see> instead.</para><para>Note: Use this method carefully. LEADTOOLS will not restrict the GeoKeys that you write. If you write bad GeoKeys,
            the file might become corrupted. Consult the GeoTIFF specification documentation for a list of GeoKeys.</para><p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the GeoKey. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p></remarks><seealso cref="T:L.Topics.ImplementingGeoKeys">Implementing GeoKeys (GeoTIFF tags)</seealso><seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso><seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso><example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />.</example><winrt /></member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadCommentAsync(Leadtools.ILeadStream,System.Int32,Leadtools.RasterCommentMetadataType)">
      <summary>
            Gets a comment field from a stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the input file data.</param>
      <param name="pageNumber">1-based index of the page from which to read the comment.</param>
      <param name="type">The type of comment. Refer to 
            <see cref="T:L.Topics.FileComments">Types of File Comments</see>.</param>
      <returns>
            When this method completes, it returns a <see cref="T:Leadtools.RasterCommentMetadata" /> object containing the comment field information.  
            If no such comment
            is found in the file, this method will return a null reference (Nothing in Visual Basic).</returns>
      <remarks>
        <para>Some file formats can contain comments, and some cannot, and each file format has its 
            own set of comment types.
            When you save a file, the comments in the <see cref="T:Leadtools.RasterImage" /> object can be saved in the 
            file. The index into the
            array (specified using a constant) determines the type of comment.</para>
        <para>You can use <see cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" /> to determine whether a certain file format supports tags.</para>
        <para>To read all the comments stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComments(System.String,System.Int32)" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadCommentsAsync(Leadtools.ILeadStream,System.Int32)">
      <summary>
            Gets all the comment fields stored in a stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the input image data.</param>
      <param name="pageNumber">1-based index of the page from which to read the comments.</param>
      <returns>
            When this method completes, it returns a collection of <see cref="T:Leadtools.RasterTagMetadata" /> containing all the comment fields information found in the file. If
            the file does not contain any comments, an empty collection will be returned. If the file format does not support comment
            fields, an exception will be thrown.</returns>
      <remarks>
        <para>Some file formats can contain comments, and some cannot, and each file format has its own set of comment types.
            When you save a file, the comments in the <see cref="T:Leadtools.RasterImage" /> object can be saved in the file. The index into the
            array (specified using a constant) determines the type of comment.</para>
        <para>To read a specific comment field stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />.</para>
        <para>This method will throw an exception if the file format does not support comments fields. To determine whether a file
            format supports comment fields, use <see cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />. You can also automatically load all the comment fields
            stored in a file during a load operation by setting the <see cref="P:Leadtools.Codecs.CodecsLoadOptions.Comments">CodecsLoadOptions.Comments</see>
            property to true. The comment fields data will be stored in the resulting image
            <see cref="P:Leadtools.RasterImage.Comments">RasterImage.Comments</see> collection.</para>
        <para>To load all the comments stored in a disk file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComments(System.String,System.Int32)" />.</para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.Comments" />
      <seealso cref="P:Leadtools.RasterImage.Comments">RasterImage.Comments</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.TIFFFileComments"> TIFF File Comments</seealso>
      <seealso cref="T:L.Topics.ImplementingGeoKeys"> Implementing GeoKeys (GeoTIFF tags)</seealso>
      <seealso cref="T:Leadtools.RasterCommentMetadataType" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTags(System.String,System.Int32)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteCommentAsync(Leadtools.ILeadStream,System.Int32,Leadtools.RasterCommentMetadata)">
      <summary>
            Writes a comment to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> that contains the file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the comment.</param>
      <param name="comment">A <see cref="T:Leadtools.RasterCommentMetadata" /> object containing the comment data.</param>
      <remarks>
            An asynchronous write operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            <para>This function only applies to TIF, uncompressed EXIF, or FPX files.</para><para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para><p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the comment. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> and 
            <see cref="T:L.Topics.FileComments">Types of File Comments</see> topics for more information.</p></remarks>
      <seealso cref="T:L.Topics.ImplementingExtendedFlashPixSupport">Implementing Extended FlashPix Support</seealso>
      <seealso cref="T:L.Topics.ImplementingExifFeatures">Implementing Exif Features</seealso>
      <seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso>
      <seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteCommentsAsync(Leadtools.ILeadStream,System.Int32,Leadtools.Junk.IVectorView{Leadtools.RasterCommentMetadata})">
      <summary>
            Writes one or more comments to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the input file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the comment.</param>
      <param name="comments">A collection of <see cref="T:Leadtools.RasterCommentMetadata" /> objects containing the comments data.</param>
            An asynchronous write operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            <remarks><para>This function only applies to TIF, uncompressed EXIF, or FPX files.</para><para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para><p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the comment. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p></remarks><seealso cref="T:L.Topics.ImplementingExifFeatures">Implementing Exif Features</seealso><seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso><seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso><example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />.</example><winrt /></member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteCommentsAsync(Leadtools.ILeadStream,System.Int32,Leadtools.RasterCommentMetadata[])">
      <summary>
            Writes one or more comments to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the input file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the comment.</param>
      <param name="comments">An array of <see cref="T:Leadtools.RasterCommentMetadata" /> objects containing the comments data.</param>
            An asynchronous write operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            <remarks><para>This function only applies to TIF, uncompressed EXIF, or FPX files.</para><para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para><p>Some restrictions apply to this function if you use an IFD to indicate to which page to write the comment. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p></remarks><seealso cref="T:L.Topics.ImplementingExifFeatures">Implementing Exif Features</seealso><seealso cref="T:L.Topics.ImplementingTiffCommentsandTags">Implementing TIFF Comments and Tags</seealso><seealso cref="T:L.Topics.WorkingWithMarkers">Working with Markers</seealso><example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />.</example><winrt /></member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteMarkerAsync(Leadtools.ILeadStream,System.Int32,Leadtools.RasterMarkerMetadata)">
      <summary>
            Writes a marker to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the output file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the marker.</param>
      <param name="marker">A <see cref="T:Leadtools.RasterMarkerMetadata" /> object that contains the marker data.</param>
            An asynchronous write operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            <remarks><para>For Exif files, this metadata collection will contain all the Exif and GPS comments, stored in APP1. It will also
            contain the audio information stored in APP2.</para><para>When you add or remove tags, the tags array at the end of the file is re-written. When 
            you modify existing tags, the new tag value is added to the file and the IFD is 
            modified as necessary. In all of these cases, there is no image recompression.</para></remarks><example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarker(System.String,System.Int32,Leadtools.RasterMarkerMetadata)" />.</example><winrt /></member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteMarkersAsync(Leadtools.ILeadStream,System.Int32,Leadtools.Junk.IVectorView{Leadtools.RasterMarkerMetadata})">
      <summary>
            Writes one or more markers to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the output file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the marker.</param>
      <param name="markers">A collection of <see cref="T:Leadtools.RasterMarkerMetadata" /> objects that contains the marker data.</param>
            An asynchronous write operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            <remarks><para>For Exif files, this metadata collection will contain all the Exif and GPS comments, stored in APP1. It will also
            contain the audio information stored in APP2.</para></remarks><example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarker(System.String,System.Int32,Leadtools.RasterMarkerMetadata)" />.</example><winrt /></member>
    <member name="M:Leadtools.Codecs.RasterCodecs.WriteMarkersAsync(Leadtools.ILeadStream,System.Int32,Leadtools.RasterMarkerMetadata[])">
      <summary>
            Writes one or more markers to an existing stream.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the output file data.</param>
      <param name="pageNumber">1-based index of the page at which to write the marker.</param>
      <param name="markers">An array of <see cref="T:Leadtools.RasterMarkerMetadata" /> objects that contains the marker data.</param>
            An asynchronous write operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            <remarks><para>For Exif files, this metadata collection will contain all the Exif and GPS comments, stored in APP1. It will also
            contain the audio information stored in APP2.</para></remarks><example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.WriteMarker(System.String,System.Int32,Leadtools.RasterMarkerMetadata)" />.</example><winrt /></member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)">
      <summary>
            Initializes the buffered compression engine.
            </summary>
      <param name="width">The image being compressed width in pixels.</param>
      <param name="height">The image being compressed height in pixels.</param>
      <param name="bitsPerPixel">The image being compressed bits/pixel value.</param>
      <param name="order">The image being compressed byte order.</param>
      <param name="viewPerspective">The image being compressed view perspective value.</param>
      <param name="inputDataLength">Size in bytes of the input image data.</param>
      <param name="outputDataLength">Size of output data in bytes.</param>
      <param name="compression">
        <para>Type of compression to use. Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Cmp</see>
            </term>
            <description>LEAD CMP compression format</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg444</see>
            </term>
            <description>JPEG File Interchange Format using YUV 4:4:4 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg422</see>
            </term>
            <description>JPEG File Interchange Format using YUV 4:2:2 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg411</see>
            </term>
            <description>JPEG File Interchange Format using YUV 4:1:1 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg444</see>
            </term>
            <description>JPEG JTIF using YUV 4:4:4 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg422</see>
            </term>
            <description>JPEG JTIF using YUV 4:2:2 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg411</see>
            </term>
            <description>JPEG JTIF using YUV 4:1:1 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead0</see>
            </term>
            <description>LEAD 1 bit, lossless compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead1</see>
            </term>
            <description>LEAD 1 bit, excellent compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcitt</see>
            </term>
            <description>TIFF CCITT</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax1Dim</see>
            </term>
            <description>CCITT Group 3 one dimensional</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax2Dim</see>
            </term>
            <description>CCITT Group 3 two dimensional</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG4Fax</see>
            </term>
            <description>CCITT Group 4 two dimensional</description>
          </item>
        </list>
      </param>
      <param name="callback">The callback method responsible for writing or handling the compressed data.</param>
      <remarks>
        <para>This method initializes the buffered compression engine. The compression is then carried out using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Compress(System.Byte[],System.Int32)" /> method. It is ended by the <see cref="M:Leadtools.Codecs.RasterCodecs.StopCompress" /> method.</para>
        <para>If <paramref name="order" /> is set to to <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> and
            <paramref name="viewPerspective" /> is <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft</see> then the
            data that you put into the input buffer must be <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> and loaded from top
            left.</para>
        <para>The compression process starts after the first call to <see cref="M:Leadtools.Codecs.RasterCodecs.Compress(System.Byte[],System.Int32)" />. The <paramref name="callback" />
            is called when the output buffer is filled with compressed data or after completing the compression process.
            <paramref name="callback" /> is responsible for emptying the output buffer - storing it, sending it, or doing other
            processing.</para>
        <para>The following is a flow chart that shows the relationship of these methods:</para>
        <para>
          <img src="CompressBuffer.gif" />
        </para>
        <para>Call <see cref="M:Leadtools.Codecs.RasterCodecs.StopCompress" /> to end the compression process started by a call to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.</para>
        <para>The quality factor of the compressed data is obtained as follows:
            <list type="table"><listheader><term>Format</term><description>Quality factor used</description></listheader><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Cmp</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see> and
            <see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.CmpQualityFactorPredefined">CodecsJpegSaveOptions.CmpQualityFactorPredefined</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg444</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg422</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg411</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg444</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg422</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg411</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead0</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead1</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcitt</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax1Dim</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax2Dim</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG4Fax</see></term><description>Not used</description></item></list></para>
        <para>This method does not support signed data images.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>
            This example demonstrates low-level image compression using <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />, <see cref="M:Leadtools.Codecs.RasterCodecs.Compress(System.Byte[],System.Int32)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.StopCompress" />.
            The callback method for writing the output is included at the end of the example
            <!--RasterCodecs.Compress--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,Leadtools.Junk.IBuffer,System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)">
      <summary>
            Initializes the unmanaged memory buffered compression engine.
            </summary>
      <param name="width">The image being compressed width in pixels.</param>
      <param name="height">The image being compressed height in pixels.</param>
      <param name="bitsPerPixel">The image being compressed bits/pixel value.</param>
      <param name="order">The image being compressed byte order.</param>
      <param name="viewPerspective">The image being compressed view perspective value.</param>
      <param name="inputDataLength">Size in bytes of the input image data.</param>
      <param name="outputData">Pointer to unmanaged memory buffer will be filled with the compressed data.</param>
      <param name="outputDataLength">Size of <paramref name="outputData" /> in bytes.</param>
      <param name="outputDataIndex">Index into <paramref name="outputData" /> where the compressed data should be inserted.</param>
      <param name="compression">
        <para>Type of compression to use. Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Cmp</see>
            </term>
            <description>LEAD CMP compression format</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg444</see>
            </term>
            <description>JPEG File Interchange Format using YUV 4:4:4 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg422</see>
            </term>
            <description>JPEG File Interchange Format using YUV 4:2:2 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg411</see>
            </term>
            <description>JPEG File Interchange Format using YUV 4:1:1 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg444</see>
            </term>
            <description>JPEG JTIF using YUV 4:4:4 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg422</see>
            </term>
            <description>JPEG JTIF using YUV 4:2:2 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg411</see>
            </term>
            <description>JPEG JTIF using YUV 4:1:1 color spacing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead0</see>
            </term>
            <description>LEAD 1 bit, lossless compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead1</see>
            </term>
            <description>LEAD 1 bit, excellent compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcitt</see>
            </term>
            <description>TIFF CCITT</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax1Dim</see>
            </term>
            <description>CCITT Group 3 one dimensional</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax2Dim</see>
            </term>
            <description>CCITT Group 3 two dimensional</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG4Fax</see>
            </term>
            <description>CCITT Group 4 two dimensional</description>
          </item>
        </list>
      </param>
      <param name="callback">The callback method responsible for writing or handling the compressed data.</param>
      <remarks>
        <para>This method initializes the buffered compression engine. The compression is then carried out using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Compress(System.Byte[],System.Int32)" /> method. It is ended by the <see cref="M:Leadtools.Codecs.RasterCodecs.StopCompress" /> method.</para>
        <para>If <paramref name="order" /> is set to to <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> and
            <paramref name="viewPerspective" /> is <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft</see> then the
            data that you put into the input buffer must be <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see> and loaded from top
            left.</para>
        <para>The compression process starts after the first call to <see cref="M:Leadtools.Codecs.RasterCodecs.Compress(System.Byte[],System.Int32)" />. The <paramref name="callback" />
            is called when the output buffer is filled with compressed data or after completing the compression process.
            <paramref name="callback" /> is responsible for emptying the output buffer - storing it, sending it, or doing other
            processing.</para>
        <para>The following is a flow chart that shows the relationship of these methods:</para>
        <para>
          <img src="CompressBuffer.gif" />
        </para>
        <para>Call <see cref="M:Leadtools.Codecs.RasterCodecs.StopCompress" /> to end the compression process started by a call to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.</para>
        <para>The quality factor of the compressed data is obtained as follows:
            <list type="table"><listheader><term>Format</term><description>Quality factor used</description></listheader><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Cmp</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see> and
            <see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.CmpQualityFactorPredefined">CodecsJpegSaveOptions.CmpQualityFactorPredefined</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg444</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg422</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Jpeg411</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg444</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg422</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TifJpeg411</see></term><description><see cref="P:Leadtools.Codecs.CodecsJpegSaveOptions.QualityFactor">CodecsJpegSaveOptions.QualityFactor</see></description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead0</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.Lead1</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcitt</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax1Dim</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG3Fax2Dim</see></term><description>Not used</description></item><item><term><see cref="T:Leadtools.Codecs.CodecsCompression">CodecsCompression.TiffCcittG4Fax</see></term><description>Not used</description></item></list></para>
        <para>This method does not support signed data images.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Compress(Leadtools.Junk.IBuffer,System.Int32)">
      <summary>
            Does buffer-to-buffer JPEG or LEAD CMP compression using an unmanaged memory buffer.
            </summary>
      <param name="data">Pointer to unmanaged memory that holds the data to be compressed.</param>
      <param name="dataIndex">Index into <paramref name="data" /> where the data starts.</param>
      <remarks>
            You must call <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" /> before using this method, and you must call <see cref="M:Leadtools.Codecs.RasterCodecs.StopCompress" /> to end
            the compression process. For a description of how these methods work together, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.
            </remarks>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.Decompress(System.Object,Leadtools.Junk.IBuffer,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.Codecs.CodecsDecompressDataFlags)">
      <summary>
            Called for each unmanaged memory buffer, strip or tile of decompressed data.
            </summary>
      <param name="decompressContext">The decompressing context object obtained through <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)" />.</param>
      <param name="data">A pointer to an unmanaged memory buffer that contains the raw compressed data.</param>
      <param name="dataOffset">Offset of the strip referenced by <paramref name="data" />, This is usually zero.</param>
      <param name="dataLength">Number of bytes in <paramref name="data" />.</param>
      <param name="width">Width of the uncompressed strip or tile, in bytes</param>
      <param name="height">Height of the uncompressed strip or tile, in bytes. If the image consists of a single compressed
            strip, as with TWAIN, this is the height of the image.</param>
      <param name="row">Row offset of the tile or strip.</param>
      <param name="column">Column offset of the tile or strip.</param>
      <param name="flags">
        <para>Flags that indicate which part of a strip or tile is being processed. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.Start</see>
            </term>
            <description>Processing the beginning of a tile or strip</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.End</see>
            </term>
            <description>Processing the end of a tile or strip</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.Complete</see>
            </term>
            <description>Process a complete tile or strip. This is the same as
            <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.Start</see> |
            <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.End</see></description>
          </item>
        </list>
      </param>
      <remarks>
        <para>Note that you must call the <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)" /> method before using this method, and you must call the
            <see cref="M:Leadtools.Codecs.RasterCodecs.StopDecompress(System.Object)" /> method to end the decompression process.</para>
        <para>If <paramref name="data" /> does not point to a full tile or strip, set <paramref name="flags" /> to
            <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.Start</see> when the tile/strip begins and set it to
            <see cref="T:Leadtools.Codecs.CodecsDecompressDataFlags">CodecsDecompressDataFlags.End</see> when the tile/strip ends.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadCmykPlanesAsync(Leadtools.ILeadStream,System.Int32,System.Int32)">
      <summary>
            Loads CMYK TIFF streams as CMYK and avoids the colorspace conversion to RGB.
            </summary>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> containing the data of the image file to load. The image data must be
            CMYK, otherwise the method will fail and throw an exception.</param>
      <param name="bitsPerPixel">
            Resulting image pixel depth.  Possible values are:<br /><list type="table"><listheader><term>Value</term><description>Meaning</description></listheader><item><term>8</term><description>Each plane will be a grayscale 8 bits per pixel image.</description></item><item><term>16</term><description>Each plane will be a grayscale 16 bits per pixel image.</description></item></list></param>
      <param name="pageNumber">1-based index of the page from which the planes should be loaded.</param>
      <returns>
            When this method completes, it returns a <see cref="T:Leadtools.RasterImage" />.  The image will contain one page for each of the CMYK planes.</returns>
      <remarks>
        <para>If the data does not have to be loaded as CMYK, use <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" />.</para>
        <para>Support for 16-bit grayscale images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>This method will fail if the input file is not TIFF CMYK. Note that not all the pages should be CMYK - it is enough
            if only the page that you wish to load is CMYK.</para>
        <para>Only the following memory load options are supported by this method:
            <list type="bullet"><item><description><see cref="P:Leadtools.Codecs.CodecsLoadOptions.AllocateImage">RasterCodecs.Options.Load.AllocateImage</see></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsLoadOptions.StoreDataInImage">RasterCodecs.Options.Load.StoreDataInImage</see></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsLoadOptions.SuperCompressed">RasterCodecs.Options.Load.SuperCompressed</see></description></item></list></para>
        <para>This method uses the values of
            <see cref="P:Leadtools.Codecs.CodecsTiffLoadOptions.ImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Load.ImageFileDirectoryOffset</see>.</para>
        <para>If the image being loaded contains alpha channel information, it will be stored in the 5th page of the returned image.</para>
        <para>Use <see cref="M:Leadtools.Drawing.RasterImagePainter.PaintCmykPlanes(Leadtools.RasterImage,System.IntPtr,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.LeadRect,Leadtools.Drawing.RasterPaintProperties,System.Object)">RasterImagePainter.PaintCmykPlanes</see> to display the array and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SaveCmykPlanes(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">SaveCmykArray</see> to save an image as a CMYK TIFF file.</para>
        <para>If you want to convert the CMYK array to a regular BGR image and use the other methods or save to a file format other
            than TIFF CMYK, use <see cref="T:Leadtools.ImageProcessing.Color.ColorMergeCommand">ColorMergeCommand</see> and set the
            <see cref="P:Leadtools.ImageProcessing.Color.ColorMergeCommand.Type">ColorMergeCommand.Type</see> to
            <see cref="T:Leadtools.ImageProcessing.Color.ColorMergeCommandType">ColorMergeCommandType.Cmyk</see>.</para>
        <para>If you have an alpha image, use <see cref="M:Leadtools.RasterImage.SetAlphaImage(Leadtools.RasterImage)">RasterImage.SetAlphaImage</see> to set the
            alpha image.</para>
        <para>You can apply image processing on each individual image. This allows you to process each color plane separately.</para>
        <para>If you want to load a non-CMYK file as an array of color plane, use the normal <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods and
            then use <see cref="T:Leadtools.ImageProcessing.Color.ColorSeparateCommand">ColorSeparateCommand</see> and
            <see cref="M:Leadtools.RasterImage.CreateAlphaImage">RasterImage.CreateAlphaImage</see> method.</para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.HandlingCMYKFilesAsSeparateBitmaps">Handling CMYK Files as Separate Images</seealso>
      <example>Refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadCmykPlanes(System.String,System.Int32,System.Int32)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SaveCmykPlanesAsync(Leadtools.RasterImage,Leadtools.ILeadStream,Leadtools.RasterImageFormat,System.Int32,System.Int32,Leadtools.Codecs.CodecsSavePageMode)">
      <summary>
            Saves the pages of an image as a CMYK TIFF stream.
            </summary>
      <param name="image">The image that contains the CMKY planes to be saved.</param>
      <param name="stream">A <see cref="T:Leadtools.ILeadStream" /> that will contain the image data to save.</param>
      <param name="format">
        <para>Specifies the output file format. Valid values are:</para>
        <para>
          <list>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.TifCmyk</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.TifPackBitsCmyk</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.TifLzwCmyk</see>
              </description>
            </item>
          </list>
        </para>
      </param>
      <param name="bitsPerPlane">
        <para>Resulting bits per pixel for each plane.  Possible values:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Default bits per pixel. LEADTOOLS will pick the closest valid value.</description>
          </item>
          <item>
            <term>8</term>
            <description>Save 8 bits per component. The generated file will contain 32 bits (no alpha) or 40 bits
                  (if alpha). Note that <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> will report 8 bits less (24 or 32-bit).</description>
          </item>
          <item>
            <term>16</term>
            <description>Save 16 bits per component. The generated file will contain 64 bits (no alpha) or 80 bits
                  (if alpha). Note that <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> will report 16 bits less (48 or 64-bit).</description>
          </item>
        </list>
      </param>
      <param name="pageNumber">Specifies the reference page number when saving a multipage file.</param>
      <param name="pageMode">Determines how to handle the page when saving to multipage formats.</param>
      <returns>
            An asynchronous save operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            </returns>
      <remarks>
        <para>This method will save a CMYK file without performing a color conversion. Each page in the <paramref name="image" />
            will contain one of the C, M, Y, K, Alpha planes. The Alpha plane is optional. The <paramref name="image" /> should contain:
            </para>
        <para>
          <list>
            <item>
              <description>4 pages if you do not save alpha channel information or</description>
            </item>
            <item>
              <description>5 pages if you save alpha channel information</description>
            </item>
          </list>
        </para>
        <para>The pages are in this order: C, M, Y, K, Alpha (optional). All the pages must have the same width, height, bits per
            pixel and palette.</para>
        <para>If you want to save the pages of the <paramref name="image" /> as a file format not supported by this function, use 
            <see cref="T:Leadtools.ImageProcessing.Color.ColorMergeCommand">ColorMergeCommand</see> to create a BGR image and save the generated image using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)" /> method.</para>
        <para>CMYK TIFF files can be saved as planar (each image in its own plane) or chunky (the data from all the images will
            be interleaved during saving). Planar images will be saved faster, while chunky images are more compatible (some TIFF
            readers will not read planar files) and require less memory during the load process. The default is to save chunky files.</para>
        <para>You select the planar save mode by setting the
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.SavePlanar">RasterCodecs.Options.Tiff.Save.SavePlanar</see> property to true.</para>
        <para>This method uses the values of
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.ImageFileDirectoryOffset">RasterCodecs.Options.Tiff.Save.ImageFileDirectoryOffset</see>.</para>
        <para>
            This method can also be used to copy or extract one or more pages from a TIFF file and 
            copy them without recompression to another TIFF file. Whenever you save an image 
            containing a region as a TIFF file format, the region is also saved. Note, however, 
            that the ability to save a region inside a TIFF file must be unlocked. This requires 
            a <see cref="T:Leadtools.Topics.RasterProDocMed">Document Imaging</see> or <see cref="T:Leadtools.Topics.RasterProDocMed">Medical Imaging</see> toolkit.
            </para>
      </remarks>
      <seealso cref="T:Leadtools.Topics.HandlingCMYKFilesAsSeparateBitmaps">Handling CMYK Files as Separate Images</seealso>
      <example>Refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadCmykPlanes(System.String,System.Int32,System.Int32)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.ReadExtensionsAsync(Leadtools.ILeadStream,System.Int32)">
      <summary>
            Loads extensions from the specified Exif stream.
            </summary>
      <param name="stream">The input file data stream.</param>
      <param name="pageNumber">1-based index of the page within the file that contains the extension.</param>
      <returns>
            When this method completes, it returns an <see cref="T:Leadtools.Codecs.CodecsExtensionList" /> object that contains the extensions found in this file.</returns>
      <remarks>
        <para>Please note that not all Exif files have extensions.</para>
        <para>Currently, this method works only with Exif files. Exif files can contain extra data stored as "FlashPix extensions".
            This method can be used to access this extra data. Leadtools refers to this extra data as "extensions".</para>
        <para>You must dispose the <see cref="T:Leadtools.Codecs.CodecsExtensionList" /> returned from this method when you are done using it.</para>
      </remarks>
      <seealso cref="T:L.Topics.ExifFileExtensions">Exif File Extensions</seealso>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.GetRasterPdfInfoAsync(Leadtools.ILeadStream,System.Int32)">
      <summary>
            Gets information for a page in a raster PDF file contained in a stream created with the LEADTOOLS Raster PDF plug in.
            </summary>
      <param name="stream">The input PDF stream.</param>
      <param name="pageNumber">The 1-based page number.</param>
      <returns>
            When this method completes, it returns an instance of <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> containing information about the raster PDF page.</returns>
      <remarks>
        <para>The various <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see> methods are used to return information
            about a raster image file on disk or stream. Information such as the format, size, dimension, bits per pixel are returned as members
            of the <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see>.</para>
        <para>Raster Adobe PDF saved with the various <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)" /> methods (using any of the
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdfXyz</see> flavors), contain extra information that can be obtained using
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetRasterPdfInfo(System.String,System.Int32)">RasterCodecs.GetRasterPdfInfo</see>. This method returns an instance of
            <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> filled with this extra information. Refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> for more information.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayerAsync(Leadtools.ILeadStream,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">
      <summary>
            Loads the specified layer from the specified PSD file.
            </summary>
      <param name="stream">The input PSD stream.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">The desired color order.</param>
      <param name="layer">Index of the layer to load. This index is zero-based. Pass 0 to load the first layer,
            1 to load the second layer, etc.</param>
      <param name="layerInfo">a <see cref="T:Leadtools.Codecs.CodecsPsdLayerInfo" /> object to be updated with information about the
            loaded layer. Pass a null reference (Nothing in Visual Basic) for this parameter if layer information is not needed.</param>
      <returns>
            When this method completes, it returns the <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <remarks>
        <para>Use this method to load PSD files only.</para>
        <para>This method works similarly to a normal <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods, except that it loads only a layer from a
            PSD file. It loads the layer specified in <paramref name="layer" />.</para>
        <para>Before calling this method, you may need to get or set file information, such as the number of layers on
            the file. Refer to <see cref="T:Leadtools.Codecs.CodecsPsdImageInfo" />.</para>
        <para>The number of layers in a file is indicated by <see cref="P:Leadtools.Codecs.CodecsPsdImageInfo.Layers">CodecsPsdImageInfo.Layers</see>.
            If this number is 0, the file does not contain any layers and this method should not be called.</para>
      </remarks>
      <example>
            This example will create and save a PSD with layers before re-loading the first layer back
            <!--RasterCodecs.LoadPsdLayer--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadPsdChannelAsync(Leadtools.ILeadStream,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdChannelInfo)">
      <summary>
            Loads the specified channel from the specified PSD file.
            </summary>
      <param name="stream">The input PSD stream.</param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">The desired color order.</param>
      <param name="channelIndex">Index of the channel to load. This index is zero-based. Pass 0 to load the first channel,
            1 to load the second channel, etc.</param>
      <param name="channelInfo">a <see cref="T:Leadtools.Codecs.CodecsPsdChannelInfo" /> object to be updated with information about the
            loaded channel. Pass a null reference (Nothing in Visual Basic) for this parameter if channel information is not needed.</param>
      <returns>
            When this method completes, it returns the <see cref="T:Leadtools.RasterImage" /> object that this method loads.
            </returns>
      <remarks>
        <para>Use this method to load PSD files only.</para>
        <para>This method works similarly to the normal <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods, except 
            that it loads only a channel from a
            PSD file. It loads the channel specified in the <paramref name="channelIndex" />.</para>
        <para>Before calling this method, you may need to get or set file information, such as the number of channels on
            the file. Refer to <see cref="T:Leadtools.Codecs.CodecsPsdImageInfo" />.</para>
        <para>The number of channels in a file is indicated by <see cref="P:Leadtools.Codecs.CodecsPsdImageInfo.Channels">CodecsPsdImageInfo.Channels</see>.
            If this number is 0, the file does not contain any channels and this method should not be called.</para>
      </remarks>
      <example>
            This example loads all channels from a PSD file
            <!--RasterCodecs.LoadPsdChannel--></example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayersAsync(Leadtools.RasterImage,Leadtools.ILeadStream,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">
      <summary>
            Saves an image to a PSD file, along with the specified layers.
            </summary>
      <param name="image">The image to save.</param>
      <param name="stream">The output stream.</param>
      <param name="bitsPerPixel">Resulting file's pixel depth. For color images this can be 24 or 32. For grayscale images this
            can be 8.</param>
      <param name="layerImages">A <see cref="T:Leadtools.RasterImage" /> object that contains layers (in each page) to save in the output
            file. The layers should have the same bits per pixel as the file. Every page in the image will be saved as a
            layer. The first page in the image will be interpreted as the first layer. The pages in the image must have the
            same bits per pixel as specified in <paramref name="bitsPerPixel" />.</param>
      <param name="layerInfos">An optional array of <see cref="T:Leadtools.Codecs.CodecsPsdLayerInfo" /> objects. If this is a null reference
            (Nothing in Visual Basic), then each layer will start at (0, 0) and will have the same size as the image. If this is not
            a null reference (Nothing in Visual Basic), then the layer information for each layer in <paramref name="layerInfos" />
            will be stored here.The number of <see cref="T:Leadtools.Codecs.CodecsPsdLayerInfo" /> objects must be the same as the number of pages in
            <paramref name="layerImages" />.
            </param>
      <returns>
            An asynchronous save operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            </returns>
      <remarks>
            Use this method to save PSD files with layers.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)" />.</example>
      <winrt />
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.DeleteCommentAsync(System.IO.Stream,System.Int32,Leadtools.RasterCommentMetadataType)">
      <summary>
            Deletes a comment field from a file.
            </summary>
      <param name="stream">A stream containing the input file data.</param>
      <param name="pageNumber">1-based index of the page from which to read the comment.</param>
      <param name="type">The type of comment. Refer to 
            <see cref="T:L.Topics.FileComments">Types of File Comments</see>.</param>
      <returns>
            An asynchronous delete operation on a <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            </returns>
      <remarks>
        <para>Some file formats can contain comments, and some cannot, and each file format has its 
            own set of comment types.
            When you save a file, the comments in the <see cref="T:Leadtools.RasterImage" /> object can be saved in the 
            file. The index into the
            array (specified using a constant) determines the type of comment.</para>
        <para>You can use <see cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" /> to determine whether a certain file format supports tags.</para>
        <para>To read all the comments stored in a file, use <see cref="M:Leadtools.Codecs.RasterCodecs.ReadCommentsAsync(Leadtools.ILeadStream,System.Int32)" />.</para>
      </remarks>
      <example>
        <!--RasterCodecs.DeleteComment-->
      </example>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync_java(System.IO.Stream,System.Int32,System.Int32,System.Int32,Leadtools.RasterSizeFlags,Leadtools.Codecs.CodecsLoadByteOrder,System.Object)">
      <summary>
            Loads an image file asynchronously to the desired width, height, and bits per pixel, resizing the image as it loads.
            </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <param name="width">New width of the image in pixels.</param>
      <param name="height">New height of the image in pixels.</param>
      <param name="flags">
        <para>Flag that indicates the type of resizing to use. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.None</term>
            <description>Normal resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Resample</term>
            <description>Linear interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Bicubic</term>
            <description>Bicubic interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.FavorBlack</term>
            <description>Not supported</description>
          </item>
        </list>
      </param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <remarks>
        <para>This method resizes a file to the desired width, height, and bits per pixel as it loads. Note that the original file is
            not completely loaded into memory. This method is ideal for sampling large images (i.e. generating a thumbnail) without the
            memory overhead of loading the large file itself.</para>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to determine whether the
            image has finished loading. 
            Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
            event to get 
            notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
            object in your application.</para>
      </remarks>
      <noexample />
      <java>
        <pre>public Object loadAsync(ILeadStream stream, int width, int height, int bitsPerPixel, RasterSizeFlags flags, CodecsLoadByteOrder order, Object userState)</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.RasterCodecs.LoadAsync_java(System.IO.Stream,System.Int32,System.Int32,System.Int32,Leadtools.RasterSizeFlags,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">
      <summary>
            Loads the specified pages to the desired width, height, and bits per pixel, resizing the image as it loads.
            </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the image data to load.</param>
      <param name="width">New width of the image in pixels.</param>
      <param name="height">New height of the image in pixels.</param>
      <param name="flags">
        <para>Flag that indicates the type of resizing to use. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.None</term>
            <description>Normal resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Resample</term>
            <description>Linear interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.Bicubic</term>
            <description>Bicubic interpolation resizing</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterSizeFlags" />RasterSizeFlags.FavorBlack</term>
            <description>Not supported</description>
          </item>
        </list>
      </param>
      <param name="bitsPerPixel">
        <para>Resulting image pixel depth.  Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>0</term>
            <description>Keep the original file's pixel depth (Do not convert).</description>
          </item>
          <item>
            <term>1 to 8</term>
            <description>The specified bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>12</term>
            <description>12 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>16</term>
            <description>16 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>24</term>
            <description>24 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>32</term>
            <description>32 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>48</term>
            <description>48 bits per pixel in the resulting image.</description>
          </item>
          <item>
            <term>64</term>
            <description>64 bits per pixel in the resulting image.</description>
          </item>
        </list>
      </param>
      <param name="order">
        <para>Color order for 16-, 24-, 32-, 48-, and 64-bit images. If the resulting image is less than 16 bits per pixel, this
            will have no effect since palletized images have no order. The following are valid values.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Rgb</see>
            </term>
            <description>Red, green, and blue color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Bgr</see>
            </term>
            <description>Blue, green, and red color order in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Gray</see>
            </term>
            <description>12 or 16-bit grayscale image. 12 and 16-bit grayscale images are only supported in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.RgbOrGray</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGray</see>
            </term>
            <description>Load the image as blue, green, red OR as a 12 or 16-bit grayscale image. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.Romm</see>
            </term>
            <description>ROMM order. ROMM only supports 24 and 48-bit images</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadByteOrder">CodecsLoadByteOrder.BgrOrGrayOrRomm</see>
            </term>
            <description>Load the image as red, green, blue OR as a 12 or 16-bit grayscale image OR as ROMM. 12 and 16-bit grayscale
            images are supported in the <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions only.
            ROMM only supports 24 and 48-bit color images.</description>
          </item>
        </list>
      </param>
      <param name="firstPage">1-based index of the first page to load.</param>
      <param name="lastPage">The 1-based index of the last page to load.  Must be greater than or equal to <paramref name="firstPage" />.
            You can pass -1 to load from <paramref name="firstPage" /> to the last page in the file.</param>
      <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
      <returns>The <see cref="T:Leadtools.RasterImage" /> object that this method loads.</returns>
      <remarks>
        <para>This method resizes a file to the desired width, height, and bits per pixel as it loads. Note that the original file is
            not completely loaded into memory. This method is ideal for sampling large images (i.e. generating a thumbnail) without the
            memory overhead of loading the large file itself.</para>
        <para>The file can be in any supported image file format and bits per pixel, whether compressed or uncompressed.</para>
        <para>LEADTOOLS will attempt to load corrupted files so you can see at least a portion of the image.
            For these images, the load methods succeed, but <see cref="P:Leadtools.Codecs.RasterCodecs.LoadStatus" /> will return an error code.</para>
        <para>Use the <see cref="T:Leadtools.Codecs.CodecsLoadOptions" /> class to set up other load option parameters before calling this
            method.</para>
        <para>Support for 12 and 16-bit grayscale, and 48 and 64-bit color images is only available in the
            <see cref="T:Leadtools.Topics.DocumentMedicalEditionSupportAndLicensingRequirements">Document/Medical Imaging</see> editions.</para>
        <para>For supported formats, refer to
            <see cref="T:L.Topics.SummaryOfAllSupportedImageFileFormats">Summary of All Supported Image File Formats</see>.</para>
        <para>LEADTOOLS loads all PDF files as Raster PDF uncompressed
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdf</see>, regardless of the compression and color space used when
            saving the file.</para>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
            property to determine whether the
            image has finished loading. 
            Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
            event to get 
            notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation has completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
            object in your application.</para>
      </remarks>
      <noexample />
      <java>
        <pre>public Object loadAsync(ILeadStream stream, int width, int height, int bitsPerPixel, RasterSizeFlags flags, CodecsLoadByteOrder order, int firstPage, int lastPage, Object userState)</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.FastFileInfo">
      <summary>Enables or disables fast file info processing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>True to enable fast file info processing; false to disable it.</value>
      <remarks>
        <para>This property causes the LEADTOOLS File Information and Load methods to only check the file�s signature when trying to determine the file�s format.</para>
        <para>The default behavior when calling LEADTOOLS File Information and Load methods, is that if the file�s signature does not match one of the known file format 
            signatures, then LEADTOOLS will allow each of the available file format filters a chance to properly identify the file�s format.  
            This can both slow down an application and unnecessarily use up system resources if the application attempts to load files of an unsupported format (i.e. non-image files).</para>
        <para>When Fast File Info is enabled, the file will be rejected if the signature does not match one of the known file format signatures. As a result, the file format DLLs will not be loaded or called unnecessarily.</para>
        <para>You must enable this feature prior to calling any LEADTOOLS File Information or Load and Save methods.</para>
        <para>The default value is false.</para>
      </remarks>
      <noexample />
      <seealso cref="T:L.Topics.LoadingFileFilters">Loading File Codecs</seealso>
      <seealso cref="T:L.Topics.LoadingAndSavingImages">Loading and Saving Images</seealso>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL fastFileInfo;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getFastFileInfo()
public void setFastFileInfo(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.PreloadCodecsList">
      <summary>Gets the current preload codecs list. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The current preload codecs list.</value>
      <remarks>
        <para>Use this property before calling <see cref="M:Leadtools.Codecs.RasterCodecs.PreloadCodecs(System.Int32,System.Int32,System.String)" /> if you wish to get the current setting for the preload
            codecs list before changing it.</para>
        <para>The preload codecs list contains the list of fixed and cached codecs.</para>
        <para>The fixed codec count can be obtained from <see cref="P:Leadtools.Codecs.RasterCodecs.FixedPreloadCodecs" />.</para>
        <para>The cached codec count can be obtained from <see cref="P:Leadtools.Codecs.RasterCodecs.CachedPreloadCodecs" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.LoadingFileFilters">Loading File Codecs</seealso>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.PreloadCodecs(System.Int32,System.Int32,System.String)" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.PreloadCodecs(System.Int32,System.Int32,System.String)" />.</example>
      <java>
        <pre>public String getPreloadCodecsList()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.FixedPreloadCodecs">
      <summary>Gets the current setting for the fixed preload codecs count. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The current setting for the fixed preload codecs count.</value>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.PreloadCodecs(System.Int32,System.Int32,System.String)" />
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.PreloadCodecs(System.Int32,System.Int32,System.String)" />.</example>
      <java>
        <pre>public int getFixedPreloadCodecs()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.CachedPreloadCodecs">
      <summary>Gets the current setting for the cached preload codecs count. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The current setting for the cached preload codecs count.</value>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.PreloadCodecs(System.Int32,System.Int32,System.String)" />
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.PreloadCodecs(System.Int32,System.Int32,System.String)" />.</example>
      <java>
        <pre>public int getCachedPreloadCodecs()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.IgnoreCodecsList">
      <summary>Gets the current ignore codecs list. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The current ignore codecs list.</value>
      <remarks>
            Use this property before calling <see cref="M:Leadtools.Codecs.RasterCodecs.IgnoreCodecs(System.String)" /> if you wish to get the current setting for the ignore
            codecs list before changing it.
            </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.IgnoreCodecs(System.String)" />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.PreloadCodecs(System.Int32,System.Int32,System.String)" />.</example>
      <java>
        <pre>public String getIgnoreCodecsList()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.Options">
      <summary>Gets or sets the load and save options for this <see cref="T:Leadtools.Codecs.RasterCodecs" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The load and save options for this <see cref="T:Leadtools.Codecs.RasterCodecs" />.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class lets you set different options when loading and saving image files.</para>
        <para>These options are categorized into groups corresponding to the image format they are applied to.</para>
        <para>Some of the options are "global", for example, overriding the resolution of the file to load.</para>
        <para>You manipulate the options of a certain format through the embedded classes inside the <see cref="P:Leadtools.Codecs.RasterCodecs.Options" /> 
            property of this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.  For example, to disable MMX when loading JPEG options,
            you would do:</para>
        <para>
          <code>
            rasterCodecsObject.Options.Jpeg.Load.DisableMmx = true;
            </code>
        </para>
        <para>Alternatively, you can obtain an instance of the correct options, manipulate the values before setting it back
            as follows:</para>
        <para>
          <code>
            CodecsOptions options = rasterCodecsObject.Options;
            options.Jpeg.Load.DisableMmx = true;
            rasterCodecsObject.Options = options;
            </code>
        </para>
        <para>You can access the various options with the following properties:</para>
        <list type="table">
          <listheader>
            <term>Class</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsLoadOptions" />
            </term>
            <description>Global load options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Load">CodecsOptions.Load</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsSaveOptions" />
            </term>
            <description>Global save options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Save">CodecsOptions.Save</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsAbcOptions" />
            </term>
            <description>LEAD Advanced Bitonal Compression (ABC) options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Abc">CodecsOptions.Abc</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsEcwOptions" />
            </term>
            <description>ECW format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Ecw">CodecsOptions.Ecw</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsEpsOptions" />
            </term>
            <description>EPS format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Eps">CodecsOptions.Eps</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsFpxOptions" />
            </term>
            <description>FPX (FlashPix) format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Fpx">CodecsOptions.Fpx</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsGifOptions" />
            </term>
            <description>GIF format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Gif">CodecsOptions.Gif</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsJbigOptions" />
            </term>
            <description>JBIG format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Jbig">CodecsOptions.Jbig</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsJbig2Options" />
            </term>
            <description>JBIG2 format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Jbig2">CodecsOptions.Jbig2</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />
            </term>
            <description>JPEG and LEAD CMP Compressed format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Jpeg">CodecsOptions.Jpeg</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsJpeg2000Options" />
            </term>
            <description>JPEG 2000 and LEAD CMW Compressed format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Jpeg2000">CodecsOptions.Jpeg2000</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsPcdOptions" />
            </term>
            <description>PCD format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Pcd">CodecsOptions.Pcd</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />
            </term>
            <description>PDF format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Pdf">CodecsOptions.Pdf</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsPngOptions" />
            </term>
            <description>PNG format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Png">CodecsOptions.Png</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsPtokaOptions" />
            </term>
            <description>PTOKA format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Ptoka">CodecsOptions.Ptoka</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsRawOptions" />
            </term>
            <description>RAW format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Raw">CodecsOptions.Raw</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsRtfOptions" />
            </term>
            <description>RTF format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Rtf">CodecsOptions.Rtf</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />
            </term>
            <description>TIFF format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Tiff">CodecsOptions.Tiff</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />
            </term>
            <description>TEXT format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Txt">CodecsOptions.Txt</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsWmfOptions" />
            </term>
            <description>WMF format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Wmf">CodecsOptions.Wmf</see> property.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsXpsOptions" />
            </term>
            <description>XPS format options. Accessed through the <see cref="P:Leadtools.Codecs.CodecsOptions.Xps">CodecsOptions.Xps</see> property.</description>
          </item>
        </list>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.RasterCodecs" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong) LTCodecsOptions* options;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsOptions getOptions()
public void setOptions(CodecsOptions value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.ThrowExceptionsOnInvalidImages">
      <summary>Gets or sets a value indicating whether to throw an exception instead of returning a null reference (Nothing in Visual Basic)
            on certain methods of this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            A value indicating whether to throw an exception instead of returning a null reference (Nothing in Visual Basic)
            on certain methods of this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object.
            </value>
      <remarks>
        <para>Some of the methods of this <see cref="T:Leadtools.Codecs.RasterCodecs" /> class will return an object when called.  For example, the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods will return the <see cref="T:Leadtools.RasterImage" /> object created.  If the value of
            <see cref="P:Leadtools.Codecs.RasterCodecs.ThrowExceptionsOnInvalidImages" /> is set to true, then when the <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods
            encounters an error and cannot return a valid image, it will throw an appropriate exception.</para>
        <para>Set <see cref="P:Leadtools.Codecs.RasterCodecs.ThrowExceptionsOnInvalidImages" /> to false to cause the <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods to
            return a null reference (Nothing in Visual Basic) instead when it encounters an error and cannot return a valid image</para>
        <para>The following methods will either throw an exception or return a null reference (Nothing in Visual Basic)
            depending on the setting of the <see cref="P:Leadtools.Codecs.RasterCodecs.ThrowExceptionsOnInvalidImages" /> property.</para>
        <para>
          <list type="bullet">
            <item>
              <description>
                <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)" />
              </description>
            </item>
            <item>
              <description>
                <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" />
              </description>
            </item>
            <item>
              <description>
                <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" />
              </description>
            </item>
            <item>
              <description>
                <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" />
              </description>
            </item>
            <item>
              <description>
                <see cref="M:Leadtools.Codecs.RasterCodecs.ReadMarkers(System.String)" />
              </description>
            </item>
            <item>
              <description>
                <see cref="M:Leadtools.Codecs.RasterCodecs.ReadThumbnail(System.String,Leadtools.Codecs.CodecsThumbnailOptions,System.Int32)" />
              </description>
            </item>
            <item>
              <description>
                <see cref="M:Leadtools.Codecs.RasterCodecs.ReadStamp(System.String,System.Int32)" />
              </description>
            </item>
            <item>
              <description>
                <see cref="M:Leadtools.Codecs.RasterCodecs.ReadTag(System.String,System.Int32,System.Int32)" />
              </description>
            </item>
            <item>
              <description>
                <see cref="M:Leadtools.Codecs.RasterCodecs.ReadGeoKey(System.String,System.Int32,System.Int32)" />
              </description>
            </item>
            <item>
              <description>
                <see cref="M:Leadtools.Codecs.RasterCodecs.ReadComment(System.String,System.Int32,Leadtools.RasterCommentMetadataType)" />
              </description>
            </item>
            <item>
              <description>
                <see cref="M:Leadtools.Codecs.RasterCodecs.ReadExtensions(System.String,System.Int32)" />
              </description>
            </item>
          </list>
        </para>
      </remarks>
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.TagsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.CommentsSupported(Leadtools.RasterImageFormat)" />
      <seealso cref="M:Leadtools.Codecs.RasterCodecs.GeoKeysSupported(Leadtools.RasterImageFormat)" />
      <example>
        <!--RasterCodecs.ThrowExceptionsOnInvalidImages-->
      </example>
      <java>
        <pre>
public boolean getThrowExceptionsOnInvalidImages()
public void setThrowExceptionsOnInvalidImages(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.UriOperationBufferSize">
      <summary>Gets or sets the size of the buffer used in URI-based load or information operations. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A value specifying the size of the buffer (in bytes) used in streaming operations.
            The value should be greater or equal to 1. Default value is 4096.</value>
      <remarks>
        <para>The value of the <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationBufferSize" /> property is used to determine the size of the temporary buffer used
            when streaming image file data using any of the URI-based load or information operations.</para>
        <para>The following methods will use use the value of this property internally to allocate the temporary buffer:
            <list type="bullet"><item><see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.Uri,System.Boolean)">GetInformation(Uri, bool)</see></item><item><see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.Uri,System.Boolean,System.Int32)">GetInformation(Uri, bool, int)</see></item><item><see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri)">Load(Uri)</see></item><item><see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">Load(Uri, int, CodecsLoadByteOrder, int, int)</see></item><item><see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,System.Object)">LoadAsync(Uri uri, object userState)</see></item><item><see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync(Uri uri, int bitsPerPixel, CodecsLoadByteOrder order, int firstPage, int lastPage, object userState)</see></item><item><see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,Leadtools.LeadRect,System.Object)">LoadAsync(Uri uri, LeadRect tile, object userState)</see></item><item><see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync(Uri uri, LeadRect tile, int bitsPerPixel, CodecsLoadByteOrder order, int firstPage, int lastPage, object userState)</see></item></list></para>
        <para>The default size of the buffer is 4096 (4 KBytes). This means that the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object will try to load the
            image data in 4 KBytes chunks of data.</para>
        <para>Increasing the buffer size might enhance the performance while also increasing the amount of memory resources used.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri)" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int uriOperationBufferSize; </pre>
      </objectivec>
      <java>
        <pre>
public int getUriOperationBufferSize()
public void setUriOperationBufferSize(int value)            </pre>
      </java>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.RedirectOpen">
      <summary>Replaces the normal LEADTOOLS method for opening a file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>You can redirect all the toolkit I/O methods to your own I/O methods to load/save images from your own streams.</para>
        <para>To replace the normal method for opening a file, set your own subscribe to this event then call
            the <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" /> method.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" /></example>
      <java>
        <pre>
synchronized public void addRedirectOpenListener(CodecsRedirectOpenListener listener)
synchronized public void removeRedirectOpenListener(CodecsRedirectOpenListener listener)            </pre>
      </java>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.RedirectRead">
      <summary>Replaces the normal LEADTOOLS method for reading from a file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>You can redirect all the toolkit I/O methods to your own I/O methods to load/save images from your own streams.</para>
        <para>To replace the normal method for reading from a file, set your own subscribe to this event then call
            the <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" /> method.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" /></example>
      <java>
        <pre>
synchronized public void addRedirectReadListener(CodecsRedirectReadListener listener)
synchronized public void removeRedirectReadListener(CodecsRedirectReadListener listener)            </pre>
      </java>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.RedirectWrite">
      <summary>Replaces the normal LEADTOOLS method for writing to a file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>You can redirect all the toolkit I/O methods to your own I/O methods to load/save images from your own streams.</para>
        <para>To replace the normal method for writing to a file, set your own subscribe to this event then call
            the <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" /> method.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" /></example>
      <java>
        <pre>
synchronized public void addRedirectWriteListener(CodecsRedirectWriteListener listener)
synchronized public void removeRedirectWriteListener(CodecsRedirectWriteListener listener)            </pre>
      </java>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.RedirectSeek">
      <summary>Replaces the normal LEADTOOLS method for seeking into a file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>You can redirect all the toolkit I/O methods to your own I/O methods to load/save images from your own streams.</para>
        <para>To replace the normal method for seeking into file, set your own subscribe to this event then call
            the <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" /> method.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" /></example>
      <java>
        <pre>
synchronized public void addRedirectSeekListener(CodecsRedirectSeekListener listener)
synchronized public void removeRedirectSeekListener(CodecsRedirectSeekListener listener)            </pre>
      </java>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.RedirectClose">
      <summary>Replaces the normal LEADTOOLS method for closing a file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>You can redirect all the toolkit I/O methods to your own I/O methods to load/save images from your own streams.</para>
        <para>To replace the normal method for closing a file, set your own subscribe to this event then call
            the <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" /> method.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting" /></example>
      <java>
        <pre>
synchronized public void addRedirectCloseListener(CodecsRedirectCloseListener listener)
synchronized public void removeRedirectCloseListener(CodecsRedirectCloseListener listener)            </pre>
      </java>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.LoadInformation">
      <summary>Occurs during loading of a file for which LEADTOOLS cannot recognize the format. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation" /> event will occur when LEADTOOLS cannot recognize the image file format during a call to
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" />. This event can be used for loading raw FAX data (CCITT Group 3 or Group 4), raw
            run-length-encoded data (4-bit or 8-bit), raw Bitfield compressed data, raw PackBits compressed data or raw uncompressed
            data.</para>
        <para>To load a raw fax file, you must subscribe to this event first. When the toolkit fails to recognize the image
            file format, it will fire this event. If you know the size of the fax image, then set the values in the
            <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Width">CodecsLoadInformationEventArgs.Width</see> and
            <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Height">CodecsLoadInformationEventArgs.Height</see> properties of the 
            <see cref="T:Leadtools.Codecs.CodecsLoadInformationEventArgs" /> passed as the event data. To automatically detect the width and height of the fax
            file, set <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Width">CodecsLoadInformationEventArgs.Width</see> and
            <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Height">CodecsLoadInformationEventArgs.Height</see> to -1.</para>
        <para>To load raw uncompressed data, you must subscribe to this event first. When the toolkit fails to recognize the image
            file format, it will fire this event. Set the
            <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Format">CodecsLoadInformationEventArgs.Format</see> property to 
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.Raw</see>. Valid values must also be set for the following properties:</para>
        <para>
          <list type="bullet">
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Width">CodecsLoadInformationEventArgs.Width</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Height">CodecsLoadInformationEventArgs.Height</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.BitsPerPixel">CodecsLoadInformationEventArgs.BitsPerPixel</see>
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Offset">CodecsLoadInformationEventArgs.Offset</see> (byte location in file where raw data begins)</description>
            </item>
          </list>
        </para>
        <para>If each line of RAW data is padded so that the number of bytes is a multiple of 4 (as is the case with raw
            Windows BMP data), set
            <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Pad4">CodecsLoadInformationEventArgs.Pad4</see> to true. Include an orientation
            in the <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.ViewPerspective">CodecsLoadInformationEventArgs.ViewPerspective</see> to
            load with the proper orientation. For example, raw Windows BMP data is stored with a
            <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft</see> orientation. If the orientation is
            unknown, then set it to <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft</see>. If the raw
            data is 8 bits per pixel or less, then the image is palettized and a palette must be generated. If this is the case,
            pass in a valid palette with <c>1 &gt;gt; bits/pixel</c> number of entries to the
            <see cref="M:Leadtools.Codecs.CodecsLoadInformationEventArgs.SetPalette(Leadtools.RasterColor[])">CodecsLoadInformationEventArgs.SetPalette</see> method.</para>
        <para>Set the correct color order in the
            <see cref="P:Leadtools.Codecs.CodecsLoadInformationEventArgs.Order">CodecsLoadInformationEventArgs.Order</see> property.  For example, if the
            order of the data is BGR, then set this value to <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>.</para>
        <para>For more information, refer to <see cref="T:Leadtools.Codecs.CodecsLoadInformationEventArgs" />.</para>
      </remarks>
      <example>
            This example demonstrates saving and loading raw/headerless image files.
            <!--RasterCodecs.LoadInformation--></example>
      <java>
        <pre>
synchronized public void addLoadInformationListener(CodecsLoadInformationListener listener)
synchronized public void removeLoadInformationListener(CodecsLoadInformationListener listener)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.LoadPage">
      <summary>Occurs multiple times for each page loaded from an image file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
            This event will fire multiple times for each page loaded with any of the <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods. The user should check the <see cref="P:Leadtools.Codecs.CodecsPageEventArgs.State" /> property. You can use this event to get
            information about the image pages being loaded or to skip loading certain pages.
            </remarks>
      <example>
        <!--RasterCodecs.LoadPage-->
      </example>
      <java>
        <pre>
synchronized public void addLoadPageListener(CodecsLoadPageListener listener)
synchronized public void removeLoadPageListener(CodecsLoadPageListener listener)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.LoadImage">
      <summary>Occurs during the file load process to provide functionality for manually handling the output image data or monitoring a
            progress status. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
            This event will fire during loading images with the <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods.  You can use this event to get
            information about the image being loaded, manually handle the image scanline data or provide a progress status as well
            as to abort the load operation.
            </remarks>
      <example>
        <!--RasterCodecs.LoadImage-->
      </example>
      <java>
        <pre>
synchronized public void addLoadImageListener(CodecsLoadImageListener listener)
synchronized public void removeLoadImageListener(CodecsLoadImageListener listener)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.SavePage">
      <summary>Occurs once for each page saved to an image file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
            This event will fire once for each page save with any of the <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)" /> methods.  You can use this event to get
            information about the image pages being saved or to skip saving certain pages.
            </remarks>
      <example>
            This example will use the SavePage event to skip a certain page when saving a multipage file
            <!--RasterCodecs.SavePage--></example>
      <java>
        <pre>
synchronized public void addSavePageListener(CodecsSavePageListener listener)
synchronized public void removeSavePageListener(CodecsSavePageListener listener)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.SaveImage">
      <summary>Occurs during the file save process to provide functionality for manually handling the output image data or monitoring a
            progress status. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>
            This event will fire during saving images with the <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)" /> methods. If you use this event, you must copy the image 
            data to the provided event buffer.
            </para>
        <para>
            You can also use this event to get information about the image being saved, provide a progress status, and/or abort the save 
            operation. For information on how to use this event as a progress status monitor, refer to
            <see cref="P:Leadtools.Codecs.CodecsSaveOptions.RetrieveDataFromImage">CodecsSaveOptions.RetrieveDataFromImage</see> and <see cref="T:Leadtools.Codecs.CodecsSaveImageEventArgs" />.
            </para>
      </remarks>
      <example>
            This example will double the density of an image as it is being saved.
            <!--RasterCodecs.SaveImage--></example>
      <java>
        <pre>
synchronized public void addSaveImageListener(CodecsSaveImageListener listener)
synchronized public void removeSaveImageListener(CodecsSaveImageListener listener)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.IsFeedLoadDone">
      <summary>Determines if the feed-load process is done. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true if the feed-load process is done; false, otherwise.</value>
      <remarks>
            Checking the value of <see cref="P:Leadtools.Codecs.RasterCodecs.IsFeedLoadDone" /> is useful to exit out of the feed-load process when sufficient data has been collected
            to load all the pages requested.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartFeedLoad(System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)" />.
            </example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL isFeedLoadDone;</pre>
      </objectivec>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.TagFound">
      <summary>Occurs during the TIFF tag enumerated by the <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" /> method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>This event will fire for each tag found in the file as a result of calling <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</para>
        <para>Do not attempt to use <see cref="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)" /> to delete tags from inside this event. If you want to delete tags that
            you enumerate, use this event to add the tags to a list. Upon returning from <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />, you can delete all the
            tags from the list.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EnumTags(System.String,System.Int32)" />.</example>
      <java>
        <pre>
synchronized public void addTagFoundListener(CodecsTagFoundListener listener)
synchronized public void removeTagFoundListener(CodecsTagFoundListener listener)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.GeoKeyFound">
      <summary>Occurs once for each GeoKey enumerated by the <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" /> method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>This event will fire for each GeoKey found in the file as a result of calling <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />.</para>
        <para>Do not attempt to use <see cref="M:Leadtools.Codecs.RasterCodecs.DeleteTag(System.String,System.Int32,System.Int32)" /> to delete tags from inside this event. If you want to delete tags that
            you enumerate, use this event to add the tags to a list. Upon returning from <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />, you can delete all
            the tags from the list.</para>
      </remarks>
      <example>Refer to <see cref="M:Leadtools.Codecs.RasterCodecs.EnumGeoKeys(System.String,System.Int32)" />.</example>
      <java>
        <pre>
synchronized public void addGeoKeyFoundListener(CodecsGeoKeyFoundListener listener)
synchronized public void removeGeoKeyFoundListener(CodecsGeoKeyFoundListener listener)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.LoadStatus">
      <summary>Gets a value that allows the detection of whether the image was loaded with errors. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>A <see cref="T:Leadtools.RasterExceptionCode" /> which indicates the result of the most recent load operation.</para>
        <para>The most common return values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterExceptionCode">RasterExceptionCode.Success</see>
            </term>
            <description>The image loaded by the last load call does not have any errors.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterExceptionCode">RasterExceptionCode.CompressedDataFailure</see>
            </term>
            <description>There were errors decoding the last image. The bottom part of the image might be corrupted.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterExceptionCode">RasterExceptionCode.BadResyncMarker</see>
            </term>
            <description>Some of the resync markers were incorrect or missing while decoding the last
                  image. Resync markers are used by JPEG files to recover from decoding errors. Portions of
                  the image are corrupted. They are indicated by a checkerboard pattern.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterExceptionCode">RasterExceptionCode.FileRead</see>
            </term>
            <description>The file was truncated. The bottom part of the image is missing.</description>
          </item>
        </list>
      </value>
      <remarks>
        <para>An error return code is a warning that portions of the image that was last loaded might be corrupted.</para>
        <para>This property should be called after a load method has been successfully called. This value is reset after each page
            is loaded, so if you are loading multiple pages, this error code is valid only for the last page.</para>
        <para>If the last load method threw an exception, then this method should not be used, as its return value is undefined.</para>
        <para>Note that this property is valid for the current thread. So it should be used in the same thread as the load method.</para>
        <para>This is valid for all the methods that will load an image, including <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" />, <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.FeedLoad(System.Byte[],System.Int32,System.Int32)" />.</para>
      </remarks>
      <example>
            This example will load an image and checks whether the image has corrupted areas
            <!--RasterCodecs.LoadStatus--></example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) LTError loadStatus;</pre>
      </objectivec>
      <java>
        <pre>public RasterExceptionCode getLoadStatus()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.LoadThenResize">
      <summary>Gets or sets a value that determine whether this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object should load the image entirely before resizing. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> to load the image entirely before resizing, <strong>false</strong>, otherwise. The default value is <strong>false</strong>.</value>
      <remarks>
        <para>
          <strong>Note:</strong> The restriction on using portions of LEADTOOLS inside ASP.NET applications has been removed starting with LEADTOOLS 16.5.</para>
        <para>
            The <see cref="T:Leadtools.Codecs.RasterCodecs" /> object has the following methods that allows you to resize an image while it is being loaded:
            <list type="bullet"><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String,System.Int32,System.Int32,System.Int32,Leadtools.RasterSizeFlags,Leadtools.Codecs.CodecsLoadByteOrder)">Load(string fileName, int width, int height, int bitsPerPixel, RasterSizeFlags flags, CodecsLoadByteOrder order)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String,System.Int32,System.Int32,System.Int32,Leadtools.RasterSizeFlags,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">Load(string fileName, int width, int height, int bitsPerPixel, RasterSizeFlags flags, CodecsLoadByteOrder order, int firstPage, int lastPage)</see></description></item></list></para>
        <para>This method works by resizing the image while it is being loaded using an internal thread. To disable this behavior, you can set the value of the
            <see cref="P:Leadtools.Codecs.RasterCodecs.LoadThenResize" /> property to <strong>true</strong> to completely load an image before resizing it.</para>
      </remarks>
      <noexample />
      <java>
        <pre>
public boolean getLoadThenResize()
public void setLoadThenResize(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials">
      <summary>Gets or sets authentication information used with URI-based operations <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            An <see cref="T:System.Net.ICredentials" /> that contains the authentication credentials used with URI-based operations. The default is a null reference (<strong>Nothing</strong> in Visual Basic).
            </value>
      <remarks>
        <para>The <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> is used to authenticate the required access to a remote resource.</para>
        <para>To override the default credentials to use when accessing a remote resource, you must change the value of the <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> property
            prior to calling any of these methods:
            <list type="bullet"><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.Uri,System.Boolean)">GetInformation(Uri uri, bool totalPages)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.Uri,System.Boolean,System.Int32)">GetInformation(Uri uri, bool totalPages, int pageNumber)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.Uri,System.Boolean,System.Int32,System.Object)">GetInformation(Uri uri, bool totalPages, int pageNumber, object userState)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri)">Load(Uri uri)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">Load(Uri uri, int bitsPerPixel, CodecsLoadByteOrder order, int firstPage, int lastPage)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,System.Object)">LoadAsync(Uri uri, object userState)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync(Uri uri, int bitsPerPixel, CodecsLoadByteOrder order, int firstPage, int lastPage, object userState)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,Leadtools.LeadRect,System.Object)">LoadAsync(Uri uri, LeadRect tile, object userState)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync(Uri uri, LeadRect tile, int bitsPerPixel, CodecsLoadByteOrder order, int firstPage, int lastPage, object userState)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32)">Save(RasterImage image, Uri uri, RasterImageFormat format, int bitsPerPixel)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">Save(RasterImage image, Uri uri, RasterImageFormat format, int bitsPerPixel, int firstPage, int lastPage)</see></description></item></list></para>
        <para>To change the proxy information to use when accessing a remote resource, use the <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" /> property.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">Save(RasterImage image, Uri uri, RasterImageFormat format, int bitsPerPixel, int firstPage, int lastPage)</see>.
            </example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy">
      <summary>Gets or sets proxy information used with URI-based operations <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            The <see cref="T:System.Net.IWebProxy" /> object to use to proxy URI-based operation. The default is a null reference (<strong>Nothing</strong> in Visual Basic).
            </value>
      <remarks>
        <para>The <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" /> property identifies the <see cref="T:System.Net.WebProxy" /> object to use to process requests to Internet resources.</para>
        <para>To override the default proxy to use when accessing a remote resource, you must change the value of the <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationProxy" /> property
            prior to calling any of these methods:
            <list type="bullet"><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.Uri,System.Boolean)">GetInformation(Uri uri, bool totalPages)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.Uri,System.Boolean,System.Int32)">GetInformation(Uri uri, bool totalPages, int pageNumber)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.Uri,System.Boolean,System.Int32,System.Object)">GetInformation(Uri uri, bool totalPages, int pageNumber, object userState)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri)">Load(Uri uri)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32)">Load(Uri uri, int bitsPerPixel, CodecsLoadByteOrder order, int firstPage, int lastPage)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,System.Object)">LoadAsync(Uri uri, object userState)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync(Uri uri, int bitsPerPixel, CodecsLoadByteOrder order, int firstPage, int lastPage, object userState)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,Leadtools.LeadRect,System.Object)">LoadAsync(Uri uri, LeadRect tile, object userState)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync(Uri uri, LeadRect tile, int bitsPerPixel, CodecsLoadByteOrder order, int firstPage, int lastPage, object userState)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32)">Save(RasterImage image, Uri uri, RasterImageFormat format, int bitsPerPixel)</see></description></item><item><description><see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">Save(RasterImage image, Uri uri, RasterImageFormat format, int bitsPerPixel, int firstPage, int lastPage)</see></description></item></list></para>
        <para>To change the authentication information to use when accessing a remote resource, use the <see cref="P:Leadtools.Codecs.RasterCodecs.UriOperationCredentials" /> property.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.Uri,Leadtools.RasterImageFormat,System.Int32,System.Int32,System.Int32)">Save(RasterImage image, Uri uri, RasterImageFormat format, int bitsPerPixel, int firstPage, int lastPage)</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.AsyncWebClient">
      <summary>Gets the <see cref="T:System.Net.WebClient" /> object used for asynchronous operations. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:System.Net.WebClient" /> object that will be used for asynchronous operations.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> object supports getting information and loading image files asynchronously through the use of the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods. These methods will use an internal <see cref="T:System.Net.WebClient" /> object to perform
            their operations and this object will be created automatically on the first call to these methods and can be accessed through the
            <see cref="P:Leadtools.Codecs.RasterCodecs.AsyncWebClient" /> property.</para>
        <para>If it is desired to create the <see cref="T:System.Net.WebClient" /> object manually (for example, to subscribe to any of its event or set the
            credentials prior to invoking any read operations), you can call <see cref="M:Leadtools.Codecs.RasterCodecs.UseAsync" /> to create the object, change its behavior and then call
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" />.</para>
        <para>
          <strong>Note:</strong>
          <see cref="M:Leadtools.Codecs.RasterCodecs.UseAsync" />, <see cref="P:Leadtools.Codecs.RasterCodecs.AsyncWebClient" />, <see cref="P:Leadtools.Codecs.RasterCodecs.IsAsyncBusy" />, and <see cref="M:Leadtools.Codecs.RasterCodecs.CancelAsync" /> are only applicable
            when the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> was with the versions that take a <see cref="T:System.Uri" /> parameter. The versions
            that take a <see cref="T:System.String" /> or a <see cref="T:System.IO.Stream" /> does not use a <see cref="T:System.Net.WebClient" /> object internally. If you want to check the progress
            or cancel the operation then use the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage" /> event as normal.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.UseAsync" />.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.IsAsyncBusy">
      <summary>Gets a value that determines whether this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object is currently busy with an asynchronous operation on a URL. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <strong>true</strong> if this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object is currently busy with an asynchronous operation on a URL, otherwise; <strong>false</strong>.</value>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> object supports getting information and loading image files asynchronously through the use of the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> and <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods.</para>
        <para>You can call one asynchronous operation per <see cref="T:Leadtools.Codecs.RasterCodecs" /> object at a time. To determine whether the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object is
            busy with a previous asynchronous operation, use <see cref="P:Leadtools.Codecs.RasterCodecs.IsAsyncBusy" /> property. This is the equivalent of the <see cref="P:System.Net.WebClient.IsBusy">WebClient.IsBusy</see> property of <see cref="P:Leadtools.Codecs.RasterCodecs.AsyncWebClient" />.</para>
        <para>You can also use the <see cref="M:Leadtools.Codecs.RasterCodecs.CancelAsync" /> method to cancel any current asynchronous operation in this <see cref="T:Leadtools.Codecs.RasterCodecs" /> object. This
            is the equivalent of calling <see cref="M:System.Net.WebClient.CancelAsync">WebClient.CancelAsync</see> on <see cref="P:Leadtools.Codecs.RasterCodecs.AsyncWebClient" />.</para>
        <para>
          <strong>Note:</strong>
          <see cref="M:Leadtools.Codecs.RasterCodecs.UseAsync" />, <see cref="P:Leadtools.Codecs.RasterCodecs.AsyncWebClient" />, <see cref="P:Leadtools.Codecs.RasterCodecs.IsAsyncBusy" />, and <see cref="M:Leadtools.Codecs.RasterCodecs.CancelAsync" /> are only applicable
            when the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> was with the versions that take a <see cref="T:System.Uri" /> parameter. The versions
            that take a <see cref="T:System.String" /> or a <see cref="T:System.IO.Stream" /> does not use a <see cref="T:System.Net.WebClient" /> object internally. If you want to check the progress
            or cancel the operation then use the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage" /> event as normal.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.CancelAsync" />.</example>
      <java>
        <pre>public boolean isAsyncBusy(Object operation)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">
      <summary>Indicates that an asynchronous get information operation has been completed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports getting information on image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">GetInformationAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> that is in a loading status
            (<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes getting the information about the file, the various properties of the
            <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> will be populated with the image file information and the <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>It is recommended that you do not poll for the <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see> property to determine whether the
            image information has been collected. Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">GetInformationAsyncCompleted</see>
            event to get notification on when the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> operation is completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">GetInformationAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">GetInformationAsync</see> so you do not have to keep the original
            object in your application.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">GetInformationAsyncCompleted</see> event uses a data argument object of
            type <see cref="T:Leadtools.Codecs.CodecsGetInformationAsyncCompletedEventArgs" />. This class contains the following properties:</para>
        <list type="table">
          <listheader>
            <term>Property</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri">CodecsGetInformationAsyncCompletedEventArgs.Uri</see>, <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream">CodecsGetInformationAsyncCompletedEventArgs.Stream</see> and
                 <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName">CodecsGetInformationAsyncCompletedEventArgs.FileName</see></term>
            <description>
              <para>Contains the URI, stream or file name passed to the method that initialized this asynchronous operation.</para>
              <para>Only one of these properties can be a valid value (not a null reference) at any time The property that contains a valid reference depends on what
            version of <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">GetInformationAsync</see> method has been called.</para>
              <para>For example, if
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.Uri,System.Boolean,System.Int32,System.Object)">GetInformationAsync(Uri uri, bool totalPages, int pageNumberobject, object userState)</see> is being called,
            the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> will contain the same URI passed to the method while
            <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> will both be null. If
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">GetInformationAsync(string fileName, bool totalPages, int pageNumberobject, object userState)</see> is being called,
            the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> will contain the same file name string value passed to the method
            while <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> will both be null and so on.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsGetInformationAsyncCompletedEventArgs.Info">CodecsGetInformationAsyncCompletedEventArgs.Info</see>
            </term>
            <description>
              <para>Contains the <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> class instance that contains the information about the image file. This instance is the same
            object returned from the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">GetInformationAsync</see> method. While the asynchronous operation
            is running, the value of the <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">CodecsImageInfo.IsLoading</see> will be <strong>true</strong> indicating that
            the object is being populated with the information and should not be used. When the asynchronous operation completes, the
            <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">GetInformationAsyncCompleted</see> event will fire and
            <see cref="P:Leadtools.Codecs.CodecsGetInformationAsyncCompletedEventArgs.Info">Info</see> will contain the final and ready to use object. If an error occurs,
            this property will be set to null and the object is disposed internally by the toolkit.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error">CodecsGetInformationAsyncCompletedEventArgs.Error</see>
            </term>
            <description>
              <para>Contains any errors that might have occurred during the asynchronous operation. You must check this value when the
            <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">GetInformationAsyncCompleted</see> event fires and make sure it does not
            contain a valid <see cref="T:System.Exception" /> object.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled">CodecsGetInformationAsyncCompletedEventArgs.Cancelled</see>
            </term>
            <description>
              <para>Contains a value indicating whether an asynchronous operation has been canceled. For example, by calling <see cref="M:Leadtools.Codecs.RasterCodecs.CancelAsync">CancelAsync</see> when using <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> with a URL.</para>
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <!--RasterCodecs.GetInformationAsyncCompleted-->
      </example>
      <java>
        <pre>
synchronized public void addGetInformationAsyncCompletedListener(CodecsGetInformationAsyncCompletedListener listener)
synchronized public void removeGetInformationAsyncCompletedListener(CodecsGetInformationAsyncCompletedListener listener)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">
      <summary>Indicates that an asynchronous load operation has been completed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> methods. When calling any of these methods, the caller thread
            will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> that is in a loading status
            (<see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> set to <strong>true</strong>). You should not use the other properties of this
            object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
            <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see>
            property will be set to <strong>false</strong>.</para>
        <para>It is recommended that you do not poll for the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> property to determine whether the
            image is finished loaded, instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see>
            event to get notification on when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation is completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event data will also contain the same
            object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> so you do not have to keep the original
            object in your application.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event uses a data argument object of
            type <see cref="T:Leadtools.Codecs.CodecsLoadAsyncCompletedEventArgs" />. This class contains the following properties:</para>
        <list type="table">
          <listheader>
            <term>Property</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri">CodecsLoadAsyncCompletedEventArgs.Uri</see>, <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream">CodecsLoadAsyncCompletedEventArgs.Stream</see> and
                 <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName">CodecsLoadAsyncCompletedEventArgs.FileName</see></term>
            <description>
              <para>Contains the URI, stream or file name passed to the method that initialized this asynchronous operation.</para>
              <para>Only one of these properties can be a valid value (not a null reference) at any time The property that contains a valid reference depends on what
            version of <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> method has been called.</para>
              <para>For example, if
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,System.Object)">LoadAsync(Uri uri, object userState)</see> is being called, the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> will contain the same URI passed to the method
            while <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> will both be null. If 
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,System.Object)">LoadAsync(String fileName, object userState)</see> is being called,
            the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> will contain the same file name string value passed to the method
            while <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> will both be null and so on.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsLoadAsyncCompletedEventArgs.Image">CodecsLoadAsyncCompletedEventArgs.Image</see>
            </term>
            <description>
              <para>Contains the <see cref="T:Leadtools.RasterImage" /> class instance that contains the image data being loaded. This instance is the same
            object returned from the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">LoadAsync</see> method. While the asynchronous operation
            is running, the value of the <see cref="P:Leadtools.RasterImage.IsLoading">RasterImage.IsLoading</see> will be <strong>true</strong> indicating that
            the object is being populated with the image information and should not be used. When the asynchronous operation completes, the
            <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event will fire and
            <see cref="P:Leadtools.Codecs.CodecsLoadAsyncCompletedEventArgs.Image">Image</see> will contain the final and ready to use object. If an error occurs,
            this property will be set to null and the object is disposed internally by the toolkit.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error">CodecsLoadAsyncCompletedEventArgs.Error</see>
            </term>
            <description>
              <para>Contains any errors that might have occurred during the asynchronous operation. You must check this value when the
            <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">LoadAsyncCompleted</see> event fires and make sure it does not
            contain a valid <see cref="T:System.Exception" /> object.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled">CodecsLoadAsyncCompletedEventArgs.Cancelled</see>
            </term>
            <description>
              <para>Contains a value indicating whether an asynchronous operation has been canceled. For example, by calling <see cref="M:Leadtools.Codecs.RasterCodecs.CancelAsync">CancelAsync</see> when using <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> with a URL.</para>
            </description>
          </item>
        </list>
      </remarks>
      <example>
        <!--RasterCodecs.LoadAsyncCompleted-->
      </example>
      <java>
        <pre>
synchronized public void addLoadAsyncCompletedListener(CodecsLoadAsyncCompletedListener listener)
synchronized public void removeLoadAsyncCompletedListener(CodecsLoadAsyncCompletedListener listener)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.RasterCodecs.EventsDispatchMode">
      <summary>
            Gets or sets a value that specifies the mode used to dispatch LEADTOOLS events.
            </summary>
      <value>
            A <see cref="T:Leadtools.LeadEventsDispatchMode" /> value that specifies the mode used to dispatch LEADTOOLS events. The default value is 
            <see cref="T:Leadtools.LeadEventsDispatchMode">Leadtools.LeadEventsDispatchMode.Direct</see>.
            </value>
      <remarks>
        <para>
            The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class has asynchronous methods that fire events.
            This property is used to control how the events are dispatched.
            In JavaScript, the events must be fired using <see cref="T:Leadtools.LeadEventsDispatchMode">Leadtools.LeadEventsDispatchMode.UseCoreDispatcher</see>.
            </para>
      </remarks>
      <noexample />
      <winrt />
    </member>
    <member name="T:Leadtools.Codecs.CodecsVectorViewMode">
      <summary>Indicates the view mode for rasterizing a vector image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <noexample />
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorViewMode.UseBest">
      <summary>
            Fit the drawing into the specified <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewWidth">CodecsVectorLoadOptions.ViewWidth</see> and
            <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewHeight">CodecsVectorLoadOptions.ViewHeight</see>.
            Final image size is less than or equal to the viewport size.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorViewMode.UseWidthAndHeight">
      <summary>
            Use the specified <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewWidth">CodecsVectorLoadOptions.ViewWidth</see>.
            Calculate new height, preserving the aspect ratio. Final image size has the same width as the current
            <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewWidth">CodecsVectorLoadOptions.ViewWidth</see>, with the height
            less than or equal to the current <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewHeight">CodecsVectorLoadOptions.ViewHeight</see>.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorViewMode.UseWidth">
      <summary>
            Use the current <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewHeight">CodecsVectorLoadOptions.ViewHeight</see>.
            Calculate the new width, preserving the aspect ratio. Final image size has the same height as the current
            <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewHeight">CodecsVectorLoadOptions.ViewHeight</see>, with the width
            less than or equal to the current <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewWidth">CodecsVectorLoadOptions.ViewWidth</see>.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVectorViewMode.UseHeight">
      <summary>
            Use both the <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewWidth">CodecsVectorLoadOptions.ViewWidth</see>
            and the <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewHeight">CodecsVectorLoadOptions.ViewHeight</see>
            (stretch image if necessary). Final image size has the same width and height as the current viewport size.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsVectorLoadOptions">
      <summary>Contains options for loading a vector file as a raster image (rasterization). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>
            LEADTOOLS provides support for loading a vector image as a raster image. Vector formats such as DXF, DWG and SVG
            can be converted to a raster image through a process called rasterization.
            </para>
        <para>
            Rasterization is the process of converting a vector image to a raster image. To determine whether a certain file on disk (or in a .NET stream)
            contains a vector image file rather than a regular raster image, call the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see> or
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> method and
            check the <see cref="P:Leadtools.Codecs.CodecsVectorImageInfo.IsVectorFile">CodecsVectorImageInfo.IsVectorFile</see> property. Here is a code
            snippet:
            </para>
        <para>
          <pre>
            <code>
            CodecsImageInfo imageInfo = rasterCodecsInstance.GetInformation(fileName, true);
            if(imageInfo.Vector.IsVectorFile)
            {
               // A vector image file (DXF, DWG, SVG, etc)
               Console.WriteLine("Vector file");
               // Your code specific to working with a vector image goes here
            }
            </code>
          </pre>
        </para>
        <para>
            To rasterize a vector image file, set the properties of the <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" /> to the desired values, and then call the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)">RasterCodecs.Load</see> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> methods.
            </para>
        <para>
            A vector image file format usually does not have a physical size. The user can specify a viewport (physical size up to which the drawing can be rendered)
            <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewWidth" /> and <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewHeight" />. How the drawing is to be rendered inside this viewport depends on the current viewport mode set
            with <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewMode" />. Default viewport size is 640x480 pixels.
            </para>
      </remarks>
      <example>
        <!--CodecsVectorLoadOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewWidth">
      <summary>Gets or sets the desired width of the viewport for rasterizing vector image files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            The width of the viewport in pixels.
            </value>
      <remarks>
        <para>
            A vector image file format usually does not have a physical size. The user can specify a viewport (physical size up to which the drawing can be rendered)
            <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewWidth" /> and <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewHeight" />. How the drawing is to be rendered inside this viewport depends on the current viewport mode set
            with <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewMode" />. Default viewport size is 640x480 pixels.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewHeight">
      <summary>Gets or sets the desired height of the viewport for rasterizing vector image files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            The height of the viewport in pixels.
            </value>
      <remarks>
        <para>
            A vector image file format usually does not have a physical size. The user can specify a viewport (physical size up to which the drawing can be rendered)
            <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewWidth" /> and <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewHeight" />. How the drawing is to be rendered inside this viewport depends on the current viewport mode set
            with <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewMode" />. Default viewport size is 640x480 pixels.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewMode">
      <summary>Gets or sets the <see cref="T:Leadtools.Codecs.CodecsVectorViewMode" /> that controls the actual size of the viewport when rasterizing vector image files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            A <see cref="T:Leadtools.Codecs.CodecsVectorViewMode" /> that controls the actual size of the viewport when rasterizing vector image files.
            </value>
      <remarks>
        <para>
            A vector image file format usually does not have a physical size. The user can specify a viewport (physical size up to which the drawing can be rendered)
            <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewWidth" /> and <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewHeight" />. How the drawing is to be rendered inside this viewport depends on the current viewport mode set
            with <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewMode" />. Default viewport size is 640x480 pixels.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorLoadOptions.BitsPerPixel">
      <summary>Gets or sets the target bits per pixel for the resulting raster image when rasterizing vector image files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            The target bits per pixel for the resulting raster image when rasterizing vector image files.
            </value>
      <remarks>
        <para>
            A vector image file format usually does not have a physical size. The user can specify a viewport (physical size up to which the drawing can be rendered)
            <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewWidth" /> and <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewHeight" />. How the drawing is to be rendered inside this viewport depends on the current viewport mode set
            with <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ViewMode" />. Default viewport size is 640x480 pixels.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorLoadOptions.ForceBackgroundColor">
      <summary>Enables or disables the use of the BackgroundColor when rasterizing vector image files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            true to fill the resulting raster image with <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.BackgroundColor" />; false to use the color specified in the vector image file.
            </value>
      <remarks>
        <para>
            Set this property to true to override the background color specified in the file when rasterizing vector image files.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorLoadOptions.BackgroundColor">
      <summary>Gets or sets the background color to be used when rasterizing vector image files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            The background color to be used when rasterizing vector image files.
            </value>
      <remarks>
        <para>
            If the vector image file being rasterized does not specify a background color, the value of this property will be used to fill the resulting raster image during rasterization.
            </para>
        <para>
            You can override the value specified in the vector image file by setting <see cref="P:Leadtools.Codecs.CodecsVectorLoadOptions.ForceBackgroundColor" /> to true.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsVectorOptions">
      <summary>Provides support for loading or saving a vector image file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>
            LEADTOOLS provides support for loading a vector image as a raster image. Vector formats such as DXF, DWG and SVG
            can be converted to a raster image through a process called rasterization.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVectorOptions.Load">
      <summary>Gets the object used to set the options for loading a vector image file as a raster image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>An instance of <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" /> object that contains the options
            to use for loading a vector image file as a raster image.</value>
      <remarks>
        <para>
            LEADTOOLS provides support for loading a vector image as a raster image. Vector formats such as DXF, DWG and SVG
            can be converted to a raster image through a process called rasterization.
            </para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVectorLoadOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsLoadImageFlags">
      <summary>Describes whether this is the first or last call of the event, and whether the buffer contains first or last row of image
            data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>typedef unsigned int LTCodecsLoadImageFlags;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsLoadImageFlags</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsLoadImageFlags.None">
      <summary>
            Default.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsLoadImageFlags.FirstPass">
      <summary>
            This is the first pass through a progressive JPEG or CMP file.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsLoadImageFlags.LastPass">
      <summary>
            This is the last pass through a progressive JPEG or CMP file.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsLoadImageFlags.FirstRow">
      <summary>
            The first row of the buffer is the first row of the image.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsLoadImageFlags.LastRow">
      <summary>
            The last row of the buffer is the last row of the image.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsLoadImageFlags.Compressed">
      <summary>
            The data in the buffer is 1-bit compressed data, which you can handle as explained in <see cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</see>.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsLoadImageEventArgs">
      <summary>Provides information for the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>To understand the various page and percentages, consider the following example.</para>
        <para>File Ocr.tif is a multi-page TIF file containing 4 pages. We want to load pages 2 through 4 (a total of 3 pages). We make the following call:</para>
        <para>
          <code>
             private RasterImage Test(RasterCodecs rasterCodecsObject)
             {
                // Subscribe to the LoadImage event
                rasterCodecsObject.LoadImage += new EventHandler&lt;CodecsLoadImageEventArgs&gt;(rasterCodecsObject_LoadImage);
                // Load pages 2 through 4 (total of 3 pages)
                RasterImage image = rasterCodecsObject.Load(@"C:\Users\Public\Documents\LEADTOOLS Images\Ocr.tif", 0, CodecsLoadByteOrder.BgrOrGray, 2, 4);
                // Unsubscribe to the LoadImage event
                rasterCodecsObject.LoadImage -= new EventHandler&lt;CodecsLoadImageEventArgs&gt;(rasterCodecsObject_LoadImage);
                return image;
             }
            
             private void rasterCodecsObject_LoadImage(object sender, CodecsLoadImageEventArgs e)
             {
             }
             </code>
        </para>
             Inside the event handler, we will have the following values:
             <list type="table"><listheader><term>Member</term><description>Values</description></listheader><item><term><see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.FirstPage" /></term><description>Will always be 2 since we specified 2 as the first page to load.</description></item><item><term><see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Page" /></term><description>Will go from 2 through 4 since we are loading pages 2, 3 and 4.</description></item><item><term><see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.LastPage" /></term><description>Will always be 4 since we specified 4 as the last page to load.</description></item><item><term><see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.ImagePage" /></term><description>Will go from 1 through 3 since we are loading new pages 1, 2 and 3.</description></item><item><term><see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.PagePercent" /></term><description>Will go from 0 to 100 three times since we are loading three pages. This value will reset back to zero whenever <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Page" /> and <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.ImagePage" /> changes.</description></item><item><term><see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.TotalPercent" /></term><description>Will go from 0 to 100 during the whole loading operation. When this value is 100, all the pages are loaded and the method returns.</description></item></list></remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@interface LTCodecsLoadImageEventArgs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsLoadImageEvent extends LeadEvent</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Image">
      <summary>Gets the <see cref="T:Leadtools.RasterImage" /> object into which the image data is being loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The <see cref="T:Leadtools.RasterImage" /> object into which the image data is being loaded.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, strong) LTRasterImage* image;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImage()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.FirstPage">
      <summary>Gets the index of the first page being loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The 1-based index of the first page being loaded.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int firstPage;</pre>
      </objectivec>
      <java>
        <pre>public int getFirstPage()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Page">
      <summary>Gets the index of the page currently being loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The 1-based index of the page currently being loaded.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int page;</pre>
      </objectivec>
      <java>
        <pre>public int getPage()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.LastPage">
      <summary>Gets the index of the last page being loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The 1-based index of the last page being loaded.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int lastPage;</pre>
      </objectivec>
      <java>
        <pre>public int getLastPage()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.ImagePage">
      <summary>Gets the index of the <see cref="P:Leadtools.RasterImage.Page">RasterImage.Page</see> into which the image data is being loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The 1-based index of the <see cref="P:Leadtools.RasterImage.Page">RasterImage.Page</see> into which the image
            data is being loaded.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int imagePage;</pre>
      </objectivec>
      <java>
        <pre>public int getImagePage()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.PagePercent">
      <summary>Gets the load completion percentage of the current page. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A number between 0 and 100 that indicates the completion percentage of the load operation of the current page.</value>
      <remarks>
        <para>Using the <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.PagePercent" /> and <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.TotalPercent" /> properties, you can use the <see cref="T:Leadtools.Codecs.CodecsLoadImageEventArgs" /> to show
            a progress bar of the current load operation.</para>
        <para>When loading a multi-page file, <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.PagePercent" /> will go from 0 to 100 for each page loaded while <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.TotalPercent" /> will go
            from 0 to 100 only once during the whole page operation. Usually, you will use <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.TotalPercent" /> to show an overall load progress if the multi-page
            image is considered to be one document. If however, individual progress is required for each page, then you can track the <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.PagePercent" /> property
            as well.</para>
        <para>When loading a single page file or one page from a multi-page file, both <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.PagePercent" /> and <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.TotalPercent" /> will go from
            0 to 100 simultaneously.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int pagePercent;</pre>
      </objectivec>
      <java>
        <pre>public int getPagePercent()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.TotalPercent">
      <summary>Gets the overall completion percentage for the load operation. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A number between 0 and 100 that indicates the overall completion percentage of the load operation.</value>
      <remarks>
        <para>Using the <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.PagePercent" /> and <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.TotalPercent" /> properties, you can use the <see cref="T:Leadtools.Codecs.CodecsLoadImageEventArgs" /> to show
            a progress bar of the current load operation.</para>
        <para>When loading a multi-page file, <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.PagePercent" /> will go from 0 to 100 for each page loaded while <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.TotalPercent" /> will go
            from 0 to 100 only once during the whole page operation. Usually, you will use <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.TotalPercent" /> to show an overall load progress if the multi-page
            image is considered to be one document. If however, individual progress is required for each page, then you can track the <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.PagePercent" /> property
            as well.</para>
        <para>When loading a single page file or one page from a multi-page file, both <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.PagePercent" /> and <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.TotalPercent" /> will go from
            0 to 100 simultaneously.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int totalPercent;</pre>
      </objectivec>
      <java>
        <pre>public int getTotalPercent()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.FileName">
      <summary>Gets the name of the file currently being loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:System.String" /> containing the name of the file currently being loaded.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Stream">
      <summary>Gets the <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Stream" /> associated with the file load process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Stream" /> associated with the file load process.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, strong) LTLeadStream* stream;</pre>
      </objectivec>
      <java>
        <pre>public ILeadStream getStream()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.OffsetValid">
      <summary>Determines whether the <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Offset" /> property is valid. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true if the value of the <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Offset" /> property is valid, false if it is being ignored.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Offset">
      <summary>Gets the offset in bytes from the beginning of the file at which the image data begins. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The offset in bytes to the start of the image data.</value>
      <remarks>
        <para>This is only valid if <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.OffsetValid" /> is true.</para>
        <para>This is the same value passed to the <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> methods that takes a
            <strong>offset</strong> parameter</para>.
            </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.OffsetCount">
      <summary>Gets the number of bytes that make up the actual image data being loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The number of bytes that make up the actual image data being loaded.</value>
      <remarks>
        <para>This is only valid if <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.OffsetValid" /> is true.</para>
        <para>This is the same value passed to the <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> methods that takes a
            <strong>offset</strong> parameter</para>.
            </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.TileValid">
      <summary>Determines whether the <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Tile" /> property is valid. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the value in the <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Tile" /> property is valid, false if it is being ignored.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL tileValid;</pre>
      </objectivec>
      <java>
        <pre>public boolean getTileValid()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Tile">
      <summary>Gets the rectangular area of the image being loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The rectangular area of the image being loaded.</value>
      <remarks>
        <para>This is only valid if <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.OffsetValid" /> is true.</para>
        <para>This is the same value passed to the <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)" /> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> methods that takes a
            <strong>tile</strong> parameter</para>.
            </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) LeadRect tile;</pre>
      </objectivec>
      <java>
        <pre>public LeadRect getTile()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Cancel">
      <summary>Gets or sets a value which allows the user to abort the load process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to abort the load process, false to continue normally.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL cancel;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getCancel()
public void setCancel(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Info">
      <summary>Gets a <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object that contains information about the image file being loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object that contains information about the image file being loaded.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, strong) LTCodecsImageInfo* info;</pre>
      </objectivec>
      <java>
        <pre>public CodecsImageInfo getInfo()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Flags">
      <summary>Gets a value which describes whether this is the first or last call of the event, and whether the buffer contains
            first or last row of image data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsLoadImageFlags" /> enumeration combination flags that describe whether this is the first or
            last call of the event, and whether the buffer contains first or last row of image data.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) LTCodecsLoadImageFlags flags;</pre>
      </objectivec>
      <java>
        <pre>public CodecsLoadImageFlags getFlags()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Row">
      <summary>Gets the current image row number of the first line in <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Buffer" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The current image row number of the first line in <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Buffer" />.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int row;</pre>
      </objectivec>
      <java>
        <pre>public int getRow()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Lines">
      <summary>Gets the number of lines in <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Buffer" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The number of lines in <see cref="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Buffer" />.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int lines;</pre>
      </objectivec>
      <java>
        <pre>public int getLines()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Buffer">
      <summary>Gets the memory buffer containing one or more lines of output image data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.RasterNativeBuffer" /> object containing one or more lines of output image data. The buffer has
            has already processed (read or decompressed).</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <objectivec>
        <pre>
@property (nonatomic, readonly, assign) unsigned char* buffer;
@property (nonatomic, readonly, assign) size_t bufferLength;            </pre>
      </objectivec>
      <java>
        <pre>public RasterNativeBuffer getBuffer()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadImageEventArgs.Stream_WinRT">
      <summary>
            Gets the <see cref="T:Leadtools.ILeadStream" /> associated with the file load process.
            </summary>
      <value>The <see cref="T:Leadtools.ILeadStream" /> associated with the file load process.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadImage">RasterCodecs.LoadImage</see>.</example>
      <winrt />
    </member>
    <member name="T:Leadtools.Codecs.CodecsStartDecompressDataType">
      <summary>Indicates the data format. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>typedef enum LTCodecsStartDecompressDataType LTCodecsStartDecompressDataType;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsStartDecompressDataType</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsStartDecompressDataType.Strips">
      <summary>
            Data is in strips.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsStartDecompressDataType.Tiles">
      <summary>
            Data is in tiles.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsStartDecompressOptions">
      <summary>Provides information and parameters for the <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see> method. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:Leadtools.Topics.CompressingAndDecompressingBuffers">Compressing and Decompressing Buffers</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@interface LTCodecsStartDecompressOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public final class CodecsStartDecompressOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsStartDecompressOptions.GetPalette">
      <summary>Gets the palette used for uncompressed data that is 8 bits per pixel or less. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>An array of <see cref="T:Leadtools.RasterColor" /> structures that represents the palette used for uncompressed data that is 8 bits
            per pixel or less.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>-(NSArray*)getPalette;</pre>
      </objectivec>
      <java>
        <pre>public RasterColor[] getPalette()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsStartDecompressOptions.SetPalette(Leadtools.RasterColor[])">
      <summary>Sets the palette used for uncompressed data that is 8 bits per pixel or less. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="palette">An array of <see cref="T:Leadtools.RasterColor" /> structures that represents the palette used for uncompressed data that is 8 bits
            per pixel or less</param>
      <remarks>
        <para>The toolkit will use the first 2 &gt;&gt; <see cref="P:Leadtools.Codecs.CodecsStartDecompressOptions.BitsPerPixel" /> entries from the palette.</para>
        <para>The <see cref="P:Leadtools.Codecs.CodecsStartDecompressOptions.UsePalette" /> property must be set to true in order for the decompress operation to use the
            palette.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>-(void)setPalette:(NSArray*)value;</pre>
      </objectivec>
      <java>
        <pre>public void setPalette(RasterColor palette[])</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsStartDecompressOptions.GetColorMask">
      <summary>Gets an array of integer values that represent RGB color masks. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>An array of 3 integers as follows: ColorMask[0] is the red mask; ColorMask[1] is the green mask;
            ColorMask[2] is the blue mask.</returns>
      <remarks>
        <para>The color mask is valid only if <see cref="P:Leadtools.Codecs.CodecsStartDecompressOptions.Format" /> is set to <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawBitfields</see>.</para>
        <para>As an example, with 16-bit data arranged as RRR RRGG GGGB BBBB, the masks would be:</para>
        <para>
          <pre>
            <code>
            ColorMask[0] = 0x7C00
            ColorMask[1] = 0x0E30
            ColorMask[2] = 0x001F
            </code>
          </pre>
        </para>
        <para>For 32-bit data, the only valid data is RRRR RRRR GGGG GGGG BBBB BBBB. The masks would be:</para>
        <para>
          <pre>
            <code>
            ColorMask[0] = 0xFF0000
            ColorMask[1] = 0x00FF00
            ColorMask[2] = 0x0000FF
            </code>
          </pre>
        </para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>-(void)getColorMask:(unsigned int[3])value;</pre>
      </objectivec>
      <java>
        <pre>public int[] getColorMask()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsStartDecompressOptions.SetColorMask(System.Int32[])">
      <summary>Sets the array of integer values that represent RGB color masks. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="colorMask">An array of 3 integers as follows: ColorMask[0] is the red mask; ColorMask[1] is the green mask;
            ColorMask[2] is the blue mask.</param>
      <remarks>
        <para>The color mask is valid only if <see cref="P:Leadtools.Codecs.CodecsStartDecompressOptions.Format" /> is set to <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawBitfields</see>.</para>
        <para>As an example, with 16-bit data arranged as RRR RRGG GGGB BBBB, the masks would be:</para>
        <para>
          <pre>
            <code>
            ColorMask[0] = 0x7C00
            ColorMask[1] = 0x0E30
            ColorMask[2] = 0x001F
            </code>
          </pre>
        </para>
        <para>For 32-bit data, the only valid data is RRRR RRRR GGGG GGGG BBBB BBBB. The masks would be:</para>
        <para>
          <pre>
            <code>
            ColorMask[0] = 0xFF0000
            ColorMask[1] = 0x00FF00
            ColorMask[2] = 0x0000FF
            </code>
          </pre>
        </para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>-(void)setColorMask:(const unsigned int[3])value;</pre>
      </objectivec>
      <java>
        <pre>public void setColorMask(int colorMask[])</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsStartDecompressOptions.#cctor">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.Empty">
      <summary>Initializes a new instance of <see cref="T:Leadtools.Codecs.CodecsStartDecompressOptions" /> with empty parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            A new instance of <see cref="T:Leadtools.Codecs.CodecsStartDecompressOptions" /> with empty parameters.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <java>
        <pre>public CodecsStartDecompressOptions getEmpty()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.DataType">
      <summary>Gets or sets a value indicating whether strips or tiles are being decompressed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A value indicating whether strips or tiles are being decompressed.</value>
      <remarks>
            Strips have a width equal to the image width, but tiles can have a width that is less than the image width.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsStartDecompressDataType dataType;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsStartDecompressDataType getDataType()
public void setDataType(CodecsStartDecompressDataType value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.Format">
      <summary>Gets or sets a value indicating the format of the image to decompress. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>A <see cref="T:Leadtools.RasterImageFormat" /> value indicating the format of the image to decompress.</para>
        <para>Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.Jpeg</see>
            </term>
            <description>JPEG file</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawRle4</see>
            </term>
            <description>RAW file with RLE compression, 4 bits per pixel</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawRle8</see>
            </term>
            <description>RAW file with RLE compression, 8 bits per pixel</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawBitfields</see>
            </term>
            <description>RAW file with bitfield compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawPackBits</see>
            </term>
            <description>RAW file with packed bits compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawCcitt</see>
            </term>
            <description>RAW file with CCITT compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.FaxG31Dim</see>
            </term>
            <description>Fax file with G3 one-dimensional compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.FaxG32Dim</see>
            </term>
            <description>Fax file with G3 two-dimensional compression</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.FaxG4</see>
            </term>
            <description>Fax file with G4 compression</description>
          </item>
        </list>
      </value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterImageFormat format;</pre>
      </objectivec>
      <java>
        <pre>
public RasterImageFormat getFormat()
public void setFormat(RasterImageFormat value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.Width">
      <summary>Gets or sets a value indicating the width in pixels of the compressed data image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The width in pixels of the compressed data image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int width;</pre>
      </objectivec>
      <java>
        <pre>
public int getWidth()
public void setWidth(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.Height">
      <summary>Gets or sets a value indicating the height in pixels of the compressed data image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The height in pixels of the compressed data image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int height;</pre>
      </objectivec>
      <java>
        <pre>
public int getHeight()
public void setHeight(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.BitsPerPixel">
      <summary>Gets or sets a value indicating the bits per pixel of the compressed data <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The bits per pixel of the compressed data.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int bitsPerPixel;</pre>
      </objectivec>
      <java>
        <pre>
public int getBitsPerPixel()
public void setBitsPerPixel(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.ViewPerspective">
      <summary>Gets or sets a value indicating the view perspective of the compressed data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>A <see cref="T:Leadtools.RasterViewPerspective" /> that indicates the view perspective of the compressed data.</para>
        <para>Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft</see>
            </term>
            <description>Top-left of image is first in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft90</see>
            </term>
            <description>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft</see> rotated clockwise by 90 degrees</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft180</see>
            </term>
            <description>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft</see> rotated clockwise by 180 degrees</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft270</see>
            </term>
            <description>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft</see> rotated clockwise by 270 degrees</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft</see>
            </term>
            <description>Bottom-left of image is first in memory</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft90</see>
            </term>
            <description>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft</see> rotated clockwise by 90 degrees</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft180</see>
            </term>
            <description>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft</see> rotated clockwise by 180 degrees</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft270</see>
            </term>
            <description>
              <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.BottomLeft</see> rotated clockwise by 270 degrees</description>
          </item>
        </list>
      </value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterViewPerspective viewPerspective;</pre>
      </objectivec>
      <java>
        <pre>
public RasterViewPerspective getViewPerspective()
public void setViewPerspective(RasterViewPerspective value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.RawOrder">
      <summary>Gets or sets a value indicating the color order of 24-bit raw data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>A <see cref="T:Leadtools.RasterByteOrder" /> that indicates the color order of 24-bit raw data.</para>
        <para>This is ignored if the image is palettized. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>
            </term>
            <description>Data is RGB</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>
            </term>
            <description>Data is BGR</description>
          </item>
        </list>
      </value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterByteOrder rawOrder;</pre>
      </objectivec>
      <java>
        <pre>
public RasterByteOrder getRawOrder()
public void setRawOrder(RasterByteOrder value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.LoadOrder">
      <summary>Gets or sets a value indicating the color order after a 24-bit image is loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>A <see cref="T:Leadtools.RasterByteOrder" /> that indicates the color order after a 24-bit image is loaded.</para>
        <para>This is ignored if the image is palettized. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Rgb</see>
            </term>
            <description>Data is RGB</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterByteOrder">RasterByteOrder.Bgr</see>
            </term>
            <description>Data is BGR</description>
          </item>
        </list>
      </value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsLoadByteOrder loadOrder;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsLoadByteOrder getLoadOrder()
public void setLoadOrder(CodecsLoadByteOrder value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.XResolution">
      <summary>Gets or sets a value indicating the horizontal resolution, in dots per inch of the image data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The horizontal resolution, in dots per inch of the image data.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int xResolution;</pre>
      </objectivec>
      <java>
        <pre>
public int getXResolution()
public void setXResolution(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.YResolution">
      <summary>Gets or sets a value indicating the vertical, in dots per inch of the image data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The vertical resolution, in dots per inch of the image data.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int yResolution;</pre>
      </objectivec>
      <java>
        <pre>
public int getYResolution()
public void setYResolution(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.LeastSignificantBitFirst">
      <summary>Gets or sets a value specifying whether to save the image data with least significant bit first or last. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save to save the image data with least significant bit first (LSB) or last (MSB).</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL leastSignificantBitFirst;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getLeastSignificantBitFirst()
public void setLeastSignificantBitFirst(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.Pad4">
      <summary>Gets or sets a value indicating whether to save the data padded to 4-byte boundary. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save the data padded to 4-byte boundary; false, otherwise.</value>
      <remarks>
            This property is used when saving raw data only.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL pad4;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getPad4()
public void setPad4(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.UsePalette">
      <summary>Gets or sets a value indicating whether to use the palette when saving images to formats that
            require a palette. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use the palette set in <see cref="M:Leadtools.Codecs.CodecsStartDecompressOptions.SetPalette(Leadtools.RasterColor[])" />, false to use the <see cref="T:Leadtools.RasterImage" />'s own palette.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL usePalette;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUsePalette()
public void setUsePalette(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.TiffPhotometricInterpretation">
      <summary>Gets or sets the desiired photometric interpretation value for the save process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The desiired photometric interpretation value for the save process.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsTiffPhotometricInterpretation tiffPhotometricInterpretation;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsTiffPhotometricInterpretation getTiffPhotometricInterpretation()
public void setTiffPhotometricInterpretation(CodecsTiffPhotometricInterpretation value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsStartDecompressOptions.PlanarConfiguration">
      <summary>Gets or sets a value indicating the desired planar configuration for the save process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The desired planar configuration for the save process.</value>
      <remarks>
            This value is used only if <see cref="P:Leadtools.Codecs.CodecsStartDecompressOptions.Format" /> is <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RawPackBits</see>.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartDecompress(Leadtools.Codecs.CodecsStartDecompressOptions)">RasterCodecs.StartDecompress</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsPlanarConfiguration planarConfiguration;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsPlanarConfiguration getPlanarConfiguration()
public void setPlanarConfiguration(CodecsPlanarConfiguration value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsDecompressDataFlags">
      <summary>Indicates the state of the decompression engine. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>typedef unsigned int LTCodecsDecompressDataFlags;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsDecompressDataFlags</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsDecompressDataFlags.None">
      <summary>
            Undefined.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsDecompressDataFlags.Start">
      <summary>
            Started.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsDecompressDataFlags.End">
      <summary>
            Stopped.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsDecompressDataFlags.Complete">
      <summary>
            Completed.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRtfLoadOptions">
      <summary>Provides options specifically for loading RTF files as raster images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>Rich Text Format (RTF) files have no physical width or height in pixels. You can use
            the <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" /> to control
            how the final document is rendered as a raster image. For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRtfOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRtfLoadOptions.BackColor">
      <summary>Gets or sets the background color used when rendering RTF documents. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The background color used when rendering RTF documents. Default value is "white".</value>
      <remarks>
        <para>Background is the color used to fill the resulting image before rendering the RTF contents on top of it.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRtfOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRtfOptions">
      <summary>Provides extra options for loading RTF files as raster images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>
        <!--CodecsRtfOptions-->
      </example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsRtfOptions.LoadMetafile(System.String,System.Int32)">
      <summary>Loads the specified RTF file as a Windows Enhanced Metafile. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="fileName">The source RTF file.</param>
      <param name="pageNumber">The 1-based page number to load.</param>
      <returns>The Windows Enhanced Metafile this method creates.</returns>
      <remarks>
        <para>This method uses the following members of the current <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" /> set in
            <see cref="P:Leadtools.Codecs.CodecsOptions.RasterizeDocument">RasterCodecs.Options.RasterizeDocument.Load</see> to determine the page size, resolution and margins:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.XResolution">CodecsRasterizeDocumentLoadOptions.XResolution</see>
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.YResolution">CodecsRasterizeDocumentLoadOptions.YResolution</see>
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">CodecsRasterizeDocumentLoadOptions.PageWidth</see>
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">CodecsRasterizeDocumentLoadOptions.PageHeight</see>
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.LeftMargin">CodecsRasterizeDocumentLoadOptions.LeftMargin</see>
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.TopMargin">CodecsRasterizeDocumentLoadOptions.TopMargin</see>
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.RightMargin">CodecsRasterizeDocumentLoadOptions.RightMargin</see>
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.BottomMargin">CodecsRasterizeDocumentLoadOptions.BottomMargin</see>
            </description>
          </item>
        </list>
        <para>Also, it uses the following members of the current <see cref="T:Leadtools.Codecs.CodecsRtfLoadOptions" /> set in <see cref="P:Leadtools.Codecs.CodecsOptions.Rtf">RasterCodecs.Options.Rtf.Load</see>
            to determine the back color to use:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:Leadtools.Codecs.CodecsRtfLoadOptions.BackColor">CodecsRtfLoadOptions.BackColor</see>
            </description>
          </item>
        </list>
        <para>So you must set these options according to your application needs before calling this method. The number of pages inside the RTF file will depend on
            the Rasterize Document options.</para>
        <para>You must destroy the Windows Enhanced Metafile (EMF) handle this method creates manually using the <strong>DeleteEnhMetaFile</strong> Windows API.</para>
      </remarks>
      <example>
        <!--CodecsRtfOptions.LoadMetafile-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRtfOptions.Load">
      <summary>Gets the options for loading RTF files as raster images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The RTF load options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRtfOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsFpxLoadOptions">
      <summary>Gets the options for loading FPX images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The FPX load options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsFpxOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsFpxLoadOptions.Resolution">
      <summary>Gets or sets the resolution to load. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The resolution to load.</value>
      <remarks>
        <para>Specify 0 for both dimensions to load the default resolution, which is the highest resolution layer, 
            which corresponds to the image with its FULL DIMENSIONS.</para>
        <para>Ex: If the file contains the image at the following dimensions: 800X600, 400X300 and 200X150, then 
            in the default case the codec will load the image at 800X600.</para>
        <para>Specify either the desired width or desired height to load, and use 0 to get the default for the other 
            dimension. The load procedure will determine the closest resolution layer, which best fits the user's 
            request.</para>
        <para>Ex: If the file contains the image at the following dimensions: 800X600, 400X300 and 200X150 and the 
            user requests an image with width equal to 780 for example, then LEADTOOLS will automatically know that 
            the proper width is 800 and load the image at the (800X600) resolution.</para>
        <para>Specify one of the exact sets of dimensions in the file.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsFpxOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsFpxOptions">
      <summary>Provides extra options for loading and saving FPX images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>
        <!--CodecsFpxOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsFpxOptions.Load">
      <summary>Gets the options for loading FPX images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            The options for loading FPX images.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsFpxOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRawSaveOptions">
      <summary>Provides options specifically for saving RAW Data images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRawOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsRawSaveOptions : NSObject</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRawSaveOptions.ReverseBits">
      <summary>Enables or disables reversing the bits. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to reverse the bit order when writing CCITT Group 3 and 4 files and RAW uncompressed data, so that the least
            significant bit (LSB) is first.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRawOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL reverseBits;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRawSaveOptions.Pad4">
      <summary>Enables or disables padding the data to a multiple of 4. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save each line padded to a multiple of 4 bytes.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRawOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL pad4;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRawOptions">
      <summary>Provides extra options for loading and saving RAW Data images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>
        <!--CodecsRawOptions-->
      </example>
      <objectivec>
        <pre>@interface LTCodecsRawOptions : NSObject</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRawOptions.Save">
      <summary>Gets the options for saving RAW Data images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The RAW Data save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRawOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsRawSaveOptions* save;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.ILeadStream">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.ILeadStream.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.IBuffer">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IBuffer.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.IStorageFile">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IStorageFile.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.IRandomAccessStream">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IRandomAccessStream.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.IInputStream">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IInputStream.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.IOutputStream">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IOutputStream.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.InMemoryRandomAccessStream">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.InMemoryRandomAccessStream.Foo">
      <exclude />
    </member>
    <member name="T:Leadtools.Junk.WriteOnlyArray`1">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.WriteOnlyArray`1.Foo">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.Junk.IVector`1">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IVector`1.Foo">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.Junk.IVectorView`1">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.IVectorView`1.Foo">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.Junk.IAsyncOperation`1">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.Junk.IAsyncOperation`1.Completed">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.Junk.AsyncOperationCompletedHandler`1">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.Junk.AsyncActionCompletedHandler">
      <exclude />
      <winrt />
    </member>
    <member name="M:Leadtools.Junk.AsyncActionCompletedHandler.Foo">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.Junk.IAsyncAction">
      <exclude />
      <winrt />
    </member>
    <member name="P:Leadtools.Junk.IAsyncAction.Completed">
      <exclude />
      <winrt />
    </member>
    <member name="T:Leadtools.Junk.NSFileHandle">
      <exclude />
      <objectivec>
        <pre>
        </pre>
      </objectivec>
    </member>
    <member name="T:Leadtools.Codecs.CodecsAnzView">
      <summary>Indicates the view to use when loading ANZ (Analyze) images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
            For more information and an example, refer to <see cref="T:Leadtools.Codecs.CodecsAnzOptions" />.
            </remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.Codecs.CodecsAnzView.Transverse">
      <summary>
            View is from underneath
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsAnzView.Sagittal">
      <summary>
            View is from right side
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsAnzView.Coronal">
      <summary>
            View is from front
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsAnzLoadOptions">
      <summary>Provides options for loading ANZ (Analyze) images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>For more information, refer to 
            <see cref="T:L.Topics.FileFormatsANZ">File Formats - ANZ Format</see>.</para>
      </remarks>
      <example>
        <!--CodecsAnzLoadOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsAnzLoadOptions.View">
      <summary>Gets or sets the view to use when loading ANZ (Analyze) images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The view to use when loading ANZ (Analyze) images.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsAnzLoadOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsAnzOptions">
      <summary>Provides extra options for loading and saving ANZ (Analyze) images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsAnzLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsAnzOptions.Load">
      <summary>Gets the options for loading ANZ (Analyze) images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The options to use when loading ANZ (Analyze) images.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsAnzLoadOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsOverlayData">
      <summary>Contains information about the overlay image found in the file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>An <see cref="T:Leadtools.Codecs.CodecsOverlayData" /> object is populated and passed as data to the <see cref="T:Leadtools.Codecs.CodecsOverlayCallback" />
            parameter passed to the <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">RasterCodecs.StartOverlay</see> method. Some members of this
            class are for input some are for output as follows:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsOverlayData.FileName" />
            </term>
            <description>(Input) The name of the file containing the overlay image</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsOverlayData.PageNumber" />
            </term>
            <description>(Input) Page number of the requested overlay image</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsOverlayData.Info" />
            </term>
            <description>(Input) Determines whether overlay image info or actual image is needed</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsOverlayData.InfoWidth" />
            </term>
            <description>(Output) Overlay image width in pixels (Ignore if <see cref="P:Leadtools.Codecs.CodecsOverlayData.Info" /> is false)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsOverlayData.InfoHeight" />
            </term>
            <description>(Output) Overlay image height in pixels (Ignore if <see cref="P:Leadtools.Codecs.CodecsOverlayData.Info" /> is false)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsOverlayData.InfoXResolution" />
            </term>
            <description>(Output) Overlay image horizontal resolution in pixels per inch (Ignore if <see cref="P:Leadtools.Codecs.CodecsOverlayData.Info" /> is false)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsOverlayData.InfoYResolution" />
            </term>
            <description>(Output) Overlay image vertical resolution in pixels per inch (Ignore if <see cref="P:Leadtools.Codecs.CodecsOverlayData.Info" /> is false)</description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsOverlayData.Image" />
            </term>
            <description>(Output) The <see cref="T:Leadtools.RasterImage" /> object containing the loaded overlay image (Only <see cref="P:Leadtools.Codecs.CodecsOverlayData.Info" /> is false)</description>
          </item>
        </list>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">RasterCodecs.StartOverlay</see></example>
      <objectivec>
        <pre>@interface LTCodecsOverlayData : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsOverlayData extends LeadEvent</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsOverlayData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.Codecs.CodecsOverlayData" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">RasterCodecs.StartOverlay</see></example>
      <objectivec>
        <pre>-(id)init</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOverlayData.FileName">
      <summary>Gets the name of the file containing the overlay image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The name of the file containing the overlay image.</value>
      <remarks>
            This property is input only.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">RasterCodecs.StartOverlay</see></example>
      <objectivec>
        <pre>@property (nonatomic, readonly, strong) NSString* fileName;</pre>
      </objectivec>
      <java>
        <pre>public String getFileName()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOverlayData.PageNumber">
      <summary>Gets the page number of the requested overlay image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The 1-based index of the page number of the requested overlay image.</value>
      <remarks>
            This property is input only.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">RasterCodecs.StartOverlay</see></example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int pageNumber;</pre>
      </objectivec>
      <java>
        <pre>public int getPageNumber()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOverlayData.Info">
      <summary>Gets a value that determines whether overlay image info or actual image is needed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>true</term>
            <description>
                 Only the information about the overlay image is needed. You must now in fill in the 
                 <see cref="P:Leadtools.Codecs.CodecsOverlayData.InfoWidth" />, <see cref="P:Leadtools.Codecs.CodecsOverlayData.InfoHeight" />, <see cref="P:Leadtools.Codecs.CodecsOverlayData.InfoXResolution" /> and <see cref="P:Leadtools.Codecs.CodecsOverlayData.InfoYResolution" />
                 properties of this <see cref="T:Leadtools.Codecs.CodecsOverlayData" /> object.
                 </description>
          </item>
          <item>
            <term>false</term>
            <description>
                 The actual overlay image is needed. You must now load the overlay image into the <see cref="P:Leadtools.Codecs.CodecsOverlayData.Image" /> property of this
                 <see cref="T:Leadtools.Codecs.CodecsOverlayData" /> object.
                 </description>
          </item>
        </list>
      </value>
      <remarks>
            This property is input only.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">RasterCodecs.StartOverlay</see></example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) BOOL info;</pre>
      </objectivec>
      <java>
        <pre>public boolean getInfo()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOverlayData.InfoWidth">
      <summary>Gets or sets the overlay image width in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The overlay image width in pixels. If the <see cref="P:Leadtools.Codecs.CodecsOverlayData.Info" /> property of this <see cref="T:Leadtools.Codecs.CodecsOverlayData" />
            object is true, you need to set this property to the overlay image width, otherwise, ignore.</value>
      <remarks>
            This property is output.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">RasterCodecs.StartOverlay</see></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int infoWidth;</pre>
      </objectivec>
      <java>
        <pre>
public int getInfoWidth()
public void setInfoWidth(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOverlayData.InfoHeight">
      <summary>Gets or sets the overlay image height in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The overlay image height in pixels. If the <see cref="P:Leadtools.Codecs.CodecsOverlayData.Info" /> property of this <see cref="T:Leadtools.Codecs.CodecsOverlayData" />
            object is true, you need to set this property to the overlay image height, otherwise, ignore.</value>
      <remarks>
            This property is output.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">RasterCodecs.StartOverlay</see></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int infoHeight;</pre>
      </objectivec>
      <java>
        <pre>
public int getInfoHeight()
public void setInfoHeight(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOverlayData.InfoXResolution">
      <summary>Gets or sets the overlay image horizontal resolution in pixels per inch. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The overlay image horizontal resolution in pixels per inch. If the <see cref="P:Leadtools.Codecs.CodecsOverlayData.Info" /> property of this
            <see cref="T:Leadtools.Codecs.CodecsOverlayData" /> object is true, you need to set this property to the overlay image horizontal resolution,
            otherwise ignore.</value>
      <remarks>
            This property is output.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">RasterCodecs.StartOverlay</see></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int infoXResolution;</pre>
      </objectivec>
      <java>
        <pre>
public int getInfoXResolution()
public void setInfoXResolution(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOverlayData.InfoYResolution">
      <summary>Gets or sets the overlay image vertical resolution in pixels per inch. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The overlay image vertical resolution in pixels per inch. If the <see cref="P:Leadtools.Codecs.CodecsOverlayData.Info" /> property of this
            <see cref="T:Leadtools.Codecs.CodecsOverlayData" /> object is true, you need to set this property to the overlay image vertical resolution,
            otherwise ignore.</value>
      <remarks>
            This property is output.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">RasterCodecs.StartOverlay</see></example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int infoYResolution;</pre>
      </objectivec>
      <java>
        <pre>
public int getInfoYResolution()
public void setInfoYResolution(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsOverlayData.Image">
      <summary>Gets or sets the <see cref="T:Leadtools.RasterImage" /> object containing the loaded overlay image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            The <see cref="T:Leadtools.RasterImage" /> object containing the loaded overlay image. If the <see cref="P:Leadtools.Codecs.CodecsOverlayData.Info" /> property of this
            <see cref="T:Leadtools.Codecs.CodecsOverlayData" /> objet is false, you need to load the overlay image into this property. Otherwise ignore.
            You do not need to call <see cref="M:Leadtools.RasterImage.Dispose" /> on this image. LEADTOOLS will dispose it for you once its done
            overlaying it on the image.
            </value>
      <remarks>
            This property is output.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">RasterCodecs.StartOverlay</see></example>
      <objectivec>
        <pre>@property (nonatomic, strong) LTRasterImage* image;</pre>
      </objectivec>
      <java>
        <pre>
public RasterImage getImage()
public void setImage(RasterImage value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsOverlayCallback">
      <summary>Provides a callback method that gets called when loading a file containing an overlay. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="data">
            A <see cref="T:Leadtools.Codecs.CodecsOverlayData" /> object that contains information about the callback. Some members of this object are for
            input, some are for output. For more information, refer to <see cref="T:Leadtools.Codecs.CodecsOverlayData" />.
            </param>
      <remarks>
            The <see cref="T:Leadtools.Codecs.CodecsOverlayCallback" /> delegate is passed to
            <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">RasterCodecs.StartOverlay</see> to get the overlay image and other information from the
            user when loading a file containing an overlay.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartOverlay(Leadtools.Codecs.CodecsOverlayCallback,Leadtools.Codecs.CodecsOverlayCallbackMode)">RasterCodecs.StartOverlay</see></example>
      <objectivec>
        <pre>typedef void (^LTCodecsOverlayCallback)(LTCodecsOverlayData* data);</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs">
      <summary>Provides data for the <see cref="E:Leadtools.Codecs.RasterCodecs.GeoKeyFound">RasterCodecs.GeoKeyFound</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GeoKeyFound">RasterCodecs.GeoKeyFound</see>.</example>
      <objectivec>
        <pre>@interface LTCodecsEnumGeoKeysEventArgs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsEnumGeoKeysEvent extends LeadEvent</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.ToRasterTagMetadata">
      <summary>Constructs a <see cref="T:Leadtools.RasterTagMetadata" /> from this GeoKey data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>A <see cref="T:Leadtools.RasterTagMetadata" /> object that contains the data stored in this GeoKey.</returns>
      <remarks>
        <para>The number of bytes in <see cref="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.Buffer" /> can be obtained by <see cref="P:Leadtools.RasterNativeBuffer.Length">RasterNativeBuffer.Length</see>, while the number of items can
            be obtained by <see cref="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.Count" />.</para>
        <para>You can also construct a new <see cref="T:Leadtools.RasterTagMetadata" /> object from the data stored in this <see cref="T:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs" /> using
            the <see cref="M:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.ToRasterTagMetadata" /> method.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GeoKeyFound">RasterCodecs.GeoKeyFound</see>.</example>
      <objectivec>
        <pre>-(LTRasterTagMetadata*)toRasterTagMetadata;</pre>
      </objectivec>
      <java>
        <pre>public RasterTagMetadata toRasterTagMetadata()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.Id">
      <summary>Gets the GeoKey ID identifying the GeoTIFF key. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The GeoKey ID identifying the GeoTIFF key.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GeoKeyFound">RasterCodecs.GeoKeyFound</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) int tagId;</pre>
      </objectivec>
      <java>
        <pre>public int getId()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.MetadataType">
      <summary>Gets the type of GeoKey. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>The type of the GeoKey This indicates whether the data pointed to by <see cref="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.Buffer" /> is SHORT, DOUBLE or ASCII.
            Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.Int16</see>
            </term>
            <description>Two bytes, unsigned.</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.Double</see>
            </term>
            <description>Eight bytes used as a double-precision floating-point number</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.Ascii</see>
            </term>
            <description>Byte in the range of 0 to 255. Null-terminated</description>
          </item>
        </list>
        <para>You can also construct a new <see cref="T:Leadtools.RasterTagMetadata" /> object from the data stored in this <see cref="T:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs" /> using
            the <see cref="M:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.ToRasterTagMetadata" /> method.</para>
      </value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GeoKeyFound">RasterCodecs.GeoKeyFound</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) LTRasterTagMetadataDataType metadataType;</pre>
      </objectivec>
      <java>
        <pre>public RasterTagMetadataDataType getMetadataType()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.Count">
      <summary>Gets the number of items in <see cref="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.Buffer" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>The number of items in the <see cref="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.Buffer" /> buffer. Note that this doesn't describe the number of bytes. For example,
            <see cref="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.Count" /> is 10 and <see cref="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.MetadataType" /> is
            <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.Double</see>, you will need 10 x 8 = 80 bytes to read the
            tag data.</para>
        <para>You can also construct a new <see cref="T:Leadtools.RasterTagMetadata" /> object from the data stored in this <see cref="T:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs" /> using
            the <see cref="M:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.ToRasterTagMetadata" /> method.</para>
      </value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GeoKeyFound">RasterCodecs.GeoKeyFound</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int count;</pre>
      </objectivec>
      <java>
        <pre>public int getCount()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.Buffer">
      <summary>Gets a pointer to the unmanaged memory containing the GeoKey data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A pointer to the unmanaged memory containing the GeoKey data.</value>
      <remarks>
        <para>The number of bytes in <see cref="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.Buffer" /> can be obtained by <see cref="P:Leadtools.RasterNativeBuffer.Length">RasterNativeBuffer.Length</see>, while the number of items can
            be obtained by <see cref="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.Count" />.</para>
        <para>You can also construct a new <see cref="T:Leadtools.RasterTagMetadata" /> object from the data stored in this <see cref="T:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs" /> using
            the <see cref="M:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.ToRasterTagMetadata" /> method.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GeoKeyFound">RasterCodecs.GeoKeyFound</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) const unsigned char* data;</pre>
      </objectivec>
      <java>
        <pre>public RasterNativeBuffer getBuffer()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEnumGeoKeysEventArgs.Cancel">
      <summary>Gets or sets a value which allows the user to abort the enumeration process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to abort the enumeration process, false to continue normally.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GeoKeyFound">RasterCodecs.GeoKeyFound</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL cancel;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getCancel()
public void setCancel(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPcdLoadOptions">
      <summary>Provides options specifically for loading PCD images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPcdOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPcdLoadOptions.Resolution">
      <summary>Gets or sets the resolution to load when loading PCD files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The resolution to load.</value>
      <remarks>
            Specifies the resolution of the image to load. You can specify 0 to get the default.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPcdOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPcdOptions">
      <summary>Provides extra options for loading and saving PCD images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>
        <!--CodecsPcdOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPcdOptions.Load">
      <summary>Gets the options for loading PCD images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The PCD load options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPcdOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsGifLoadOptions">
      <summary>Provides options specifically for loading GIF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsGifLoadOptions : NSObject</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifLoadOptions.AnimationLoop">
      <summary>Gets or sets the animation loop value. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The animation loop value.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int animationLoop;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsGifSaveOptions">
      <summary>Provides options specifically for saving GIF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsGifSaveOptions : NSObject</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsGifSaveOptions.GetAnimationPalette">
      <summary>Gets the animation palette to use when saving GIF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>An array of <see cref="T:Leadtools.RasterColor" /> object that represents the current animation palette to use when saving
            GIF files.</value>
      <remarks>
        <para>The palette stored in <see cref="M:Leadtools.Codecs.CodecsGifSaveOptions.GetAnimationPalette" /> is only used when the value of <see cref="P:Leadtools.Codecs.CodecsGifSaveOptions.UseAnimationPalette" /> is
            set to true.</para>
        <para>Use <see cref="M:Leadtools.Codecs.CodecsGifSaveOptions.SetAnimationPalette(Leadtools.RasterColor[])" /> to change the animation palette to use when saving GIF files.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>- (NSArray*)getAnimationPalette;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsGifSaveOptions.SetAnimationPalette(Leadtools.RasterColor[])">
      <summary>Sets the animation palette used when saving GIF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="palette">An array of <see cref="T:Leadtools.RasterColor" /> object that represents the current animation palette to
            use when saving GIF files.</param>
      <remarks>
        <para>The palette set with <see cref="M:Leadtools.Codecs.CodecsGifSaveOptions.SetAnimationPalette(Leadtools.RasterColor[])" /> is only used when the value of
            <see cref="P:Leadtools.Codecs.CodecsGifSaveOptions.UseAnimationPalette" /> is set to true.</para>
        <para>Use <see cref="M:Leadtools.Codecs.CodecsGifSaveOptions.GetAnimationPalette" /> to get the animation palette to use when saving GIF files.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>- (void)setAnimationPalette:(NSArray*)palette;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifSaveOptions.UseAnimationPalette">
      <summary>Gets or sets a value indicating if the image uses an animation palette. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image should use an animation palette; false, otherwise.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useAnimationPalette;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifSaveOptions.Interlaced">
      <summary>Gets or sets a value indicating whether to save interlaced GIF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save the image interlaced; false, otherwise.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL interlaced;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifSaveOptions.UseAnimationLoop">
      <summary>Gets or sets a value indicating whether to use the animation loop when saving GIF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use <see cref="P:Leadtools.Codecs.CodecsGifSaveOptions.AnimationLoop" /> when saving GIF files; false, otherwise.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useAnimationLoop;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifSaveOptions.AnimationLoop">
      <summary>Gets or sets the animation loop value to use when saving GIF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The animation loop value to use when saving GIF files.</value>
      <remarks>
        <see cref="P:Leadtools.Codecs.CodecsGifSaveOptions.AnimationLoop" /> is only used when the value of <see cref="P:Leadtools.Codecs.CodecsGifSaveOptions.UseAnimationLoop" /> is set to true.
            </remarks>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int animationLoop;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifSaveOptions.AnimationWidth">
      <summary>Gets or sets the animation width used when saving GIF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The animation width used when saving GIF files.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int animationWidth;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifSaveOptions.AnimationHeight">
      <summary>Gets or sets the animation height used when saving GIF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The animation height used when saving GIF files.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int animationHeight;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifSaveOptions.UseAnimationBackground">
      <summary>Gets or sets a value indicating whether to use the animation background when saving GIF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use the <see cref="P:Leadtools.Codecs.CodecsGifSaveOptions.AnimationBackground" /> value when saving GIF files; false, otherwise.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useAnimationBackground;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifSaveOptions.AnimationBackground">
      <summary>Gets or sets the animation background color used when saving GIF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The animation background color used when saving GIF files.</value>
      <remarks>
        <see cref="P:Leadtools.Codecs.CodecsGifSaveOptions.AnimationBackground" /> is only used when the value of <see cref="P:Leadtools.Codecs.CodecsGifSaveOptions.UseAnimationBackground" /> is set to true.
            </remarks>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, copy) LTRasterColor* animationBackground;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsGifOptions">
      <summary>Provides extra options for loading and saving GIF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>
        <!--CodecsGifOptions-->
      </example>
      <objectivec>
        <pre>@interface LTCodecsGifOptions : NSObject</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifOptions.Load">
      <summary>Gets the options for loading GIF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The GIF load options.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsGifLoadOptions* load;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifOptions.Save">
      <summary>Gets the options for saving GIF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The GIF save options.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsGifOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsGifSaveOptions* save;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsAbcQualityFactor">
      <summary>Indicates the pre-defined quality factor for saving images using LEAD Advanced Bitonal Compression (ABC). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
            For more information and an example, refer to <see cref="T:Leadtools.Codecs.CodecsAbcOptions" /> and <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.
            </remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.Codecs.CodecsAbcQualityFactor.Lossless">
      <summary>
            Lossless compression. This option compresses a 1-bit file and maintains image data unchanged. Highest quality.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsAbcQualityFactor.LosslessFast">
      <summary>
            Faster lossless compression than <strong>Lossless</strong>. This option compresses a 1-bit file and maintains 
            image data unchanged.  Highest quality.  Does not produce compression ratios as high as 
            <b>Lossless</b>.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsAbcQualityFactor.LossyFast">
      <summary>
            Lossy compression.  This is the fastest ABC lossy compression option.  Does not produce compression 
            ratios as high as the other lossy options.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsAbcQualityFactor.VirtualLossless">
      <summary>
            Lossy compression. This option removes image noisy pixels and
            compresses it at a smaller file size than <strong>Lossless</strong>.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsAbcQualityFactor.RemoveBorder">
      <summary>
            Lossy compression. This option removes image border if it exists
            and compresses it at a smaller file size than <strong>VirtualLossless</strong>.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsAbcQualityFactor.Enhance">
      <summary>
            Lossy compression. This option cleans up the image, removes its border if it exists and
            compresses it at a smaller file size than <strong>RemoveBorder</strong>.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsAbcQualityFactor.Modified1">
      <summary>
            Lossy compression. This option cleans up the image, removes its
            border if it exists and compresses it at a smaller file size than <strong>Enhance</strong>.
            However, it may distort some text or straight lines.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsAbcQualityFactor.Modified1Fast">
      <summary>
            Same as <strong>Modified1</strong> without the border remove or image clean processes.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsAbcQualityFactor.Modified2">
      <summary>
            Lossy compression. This option cleans up the image, removes its border
            if it exists and compresses it at a smaller file size than <strong>Modified1</strong>.
            However, it may distort some text or straight lines. Maximum compression.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsAbcQualityFactor.Modified2Fast">
      <summary>
            Lossy compression. This option compresses the image at a smaller file size than <strong>Modified1</strong>.
            However, it may distort some text or straight lines. Maximum compression.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsAbcQualityFactor.Modified3">
      <summary>
            Lossy compression. Provides faster encode and decode speed than <strong>Modified1</strong> or <strong>Modified2</strong>.
            if one exists and compresses it at a smaller file size than <strong>Modified1</strong> or <strong>Modified2</strong>.
            Provides the maximum compression.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsAbcQualityFactor.Modified3Fast">
      <summary>
            Same as <strong>Modified3</strong> without the border remove or image clean processes.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsAbcLoadOptions">
      <summary>Provides options specifically for loading ABC images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>
        <!--CodecsAbcLoadOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsAbcLoadOptions.FastLoad">
      <summary>Enables or disables fast loading algorithm for loading ABC images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to enable fast loading algorithm; otherwise, false.</value>
      <remarks>
            Enabling <see cref="P:Leadtools.Codecs.CodecsAbcLoadOptions.FastLoad" /> will result in faster image loads but less image details.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsAbcLoadOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsAbcSaveOptions">
      <summary>Provides options specifically for saving ABC images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
            For information about compression quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsAbcOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsAbcSaveOptions.QualityFactor">
      <summary>Gets or sets the quality factor for saving ABC files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            An <see cref="T:Leadtools.Codecs.CodecsAbcQualityFactor" /> enumeration value that specifies the quality factor used when saving ABC files.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsAbcOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsAbcOptions">
      <summary>Provides extra options for loading and saving images using LEAD Advanced Bitonal Compression (ABC). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>
        <!--CodecsAbcOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsAbcOptions.Load">
      <summary>Gets the options for loading images using LEAD Advanced Bitonal Compression (ABC). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The LEAD Advanced Bitonal Compression load options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsAbcOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsAbcOptions.Save">
      <summary>Gets the options for saving images using LEAD Advanced Bitonal Compression (ABC). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The LEAD Advanced Bitonal Compression save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsAbcOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRedirectOpenEventArgs">
      <summary>Information for the <see cref="E:Leadtools.Codecs.RasterCodecs.RedirectOpen">RasterCodecs.RedirectOpen</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>public class CodecsRedirectOpenEvent extends LeadEvent</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.CodecsRedirectOpenEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.Codecs.CodecsRedirectOpenEventArgs" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRedirectOpenEventArgs.FileName">
      <summary>Gets the name of the file to be opened. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.String" /> containing the name of the file to be opened.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>public String getFileName()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRedirectOpenEventArgs.Mode">
      <summary>Gets the requested mode that determines how to open or create the file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The requested open mode that determines how to open or create the file.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>public String getMode()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRedirectOpenEventArgs.Access">
      <summary>Gets the requested mode that determines how the file can be accessed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The requested mode that determines how the file can be accessed.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRedirectOpenEventArgs.Share">
      <summary>Gets the requested mode that determines how the file will be shared by processes. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The requested mode that determines how the file will be shared by processes.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRedirectOpenEventArgs.Success">
      <summary>Gets or sets a value indicating that the open operation was successful. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to indicate that the open operation was successful; false, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRedirectReadEventArgs">
      <summary>Information for the <see cref="E:Leadtools.Codecs.RasterCodecs.RedirectRead">RasterCodecs.RedirectRead</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>public class CodecsRedirectReadEvent extends LeadEvent</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.CodecsRedirectReadEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.Codecs.CodecsRedirectReadEventArgs" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRedirectReadEventArgs.Buffer">
      <summary>Gets a pointer to the unmanaged memory buffer into which this read operation should copy the data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A pointer to the unmanaged memory buffer into which this read request should copy data.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>public byte[] getBuffer()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRedirectReadEventArgs.Count">
      <summary>Gets the number of bytes that this read operation request. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The number of bytes that this read operation request and should copied to <see cref="P:Leadtools.Codecs.CodecsRedirectReadEventArgs.Buffer" />.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>public int getCount()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRedirectReadEventArgs.Read">
      <summary>Gets or sets the actual number of bytes that this read operation has copied to <see cref="P:Leadtools.Codecs.CodecsRedirectReadEventArgs.Buffer" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The actual number of bytes that this read operation has copied to <see cref="P:Leadtools.Codecs.CodecsRedirectReadEventArgs.Buffer" />.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>
public int getRead()
public void setRead(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRedirectWriteEventArgs">
      <summary>Information for the <see cref="E:Leadtools.Codecs.RasterCodecs.RedirectWrite">RasterCodecs.RedirectWrite</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>public class CodecsRedirectWriteEvent extends LeadEvent</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.CodecsRedirectWriteEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.Codecs.CodecsRedirectWriteEventArgs" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRedirectWriteEventArgs.Buffer">
      <summary>Gets a pointer to the unmanaged memory buffer from which this write operation should copy the data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A pointer to the unmanaged memory buffer from which this write operation should copy the data.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>public byte[] getBuffer()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRedirectWriteEventArgs.Count">
      <summary>Gets the number of bytes that this write operation request. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The number of bytes that this write operation request and should copied from <see cref="P:Leadtools.Codecs.CodecsRedirectWriteEventArgs.Buffer" />.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>public int getCount()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRedirectWriteEventArgs.Written">
      <summary>Gets or sets the actual number of bytes that this write operation has copied to <see cref="P:Leadtools.Codecs.CodecsRedirectWriteEventArgs.Buffer" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The actual number of bytes that this read write operation has copied to <see cref="P:Leadtools.Codecs.CodecsRedirectWriteEventArgs.Buffer" />.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>
public int getWritten()
public void setWritten(int value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRedirectSeekEventArgs">
      <summary>Information for the <see cref="E:Leadtools.Codecs.RasterCodecs.RedirectSeek">RasterCodecs.RedirectSeek</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>public class CodecsRedirectSeekEvent extends LeadEvent</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.CodecsRedirectSeekEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.Codecs.CodecsRedirectSeekEventArgs" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Offset">
      <summary>Gets or sets the byte offset relative to <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Origin" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The byte offset relative to <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Origin" /> this seek operation should move. After the seek operation is done.
            This property should updated with the new offset value.</value>
      <remarks>
            If <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Offset" /> is negative, the new position is required to precede the position specified by <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Origin" />
            by the number of bytes specified by <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Offset" />. If <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Offset" /> is zero (0), the new position is required
            to be the position specified by <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Origin" />. If <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Offset" /> is positive, the new position is required to
            follow the position specified by <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Origin" /> by the number of bytes specified by <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Offset" />.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>
public long getOffset()
public void setOffset(long value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Origin">
      <summary>Gets a value indicating the reference point used to obtain the new position. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.IO.SeekOrigin" /> value indicating the reference point used to obtain the new position.</value>
      <remarks>
            If <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Offset" /> is negative, the new position is required to precede the position specified by <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Origin" />
            by the number of bytes specified by <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Offset" />. If <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Offset" /> is zero (0), the new position is required
            to be the position specified by <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Origin" />. If <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Offset" /> is positive, the new position is required to
            follow the position specified by <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Origin" /> by the number of bytes specified by <see cref="P:Leadtools.Codecs.CodecsRedirectSeekEventArgs.Offset" />.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
      <java>
        <pre>public LeadSeekOrigin getOrigin()</pre>
      </java>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRedirectCloseEventArgs">
      <summary>Information for the <see cref="E:Leadtools.Codecs.RasterCodecs.RedirectClose">RasterCodecs.RedirectClose</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsRedirectCloseEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.Codecs.CodecsRedirectCloseEventArgs" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartRedirecting">RasterCodecs.StartRedirecting</see></example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJpegImageInfo">
      <summary>Provides information specific to JPEG and LEAD CMP images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@interface LTCodecsJpegImageInfo : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsJpegImageInfo</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegImageInfo.IsProgressive">
      <summary>Determines whether or not the image is progressive. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image is progressive; false, otherwise.</value>
      <seealso cref="T:L.Topics.ControllingProgressiveLoadsAndSaves">Controlling Progressive Loads and Saves</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL isProgressive;</pre>
      </objectivec>
      <java>
        <pre>public boolean isProgressive()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegImageInfo.IsLossless">
      <summary>Determines whether or not the image uses lossless JPEG compression. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image uses lossless JPEG compression; false, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL isLossless;</pre>
      </objectivec>
      <java>
        <pre>public boolean isLossless()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJpegImageInfo.HasStamp">
      <summary>Determines whether or not the image file has a stamp stored. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if a stamp image is stored in the image file; false, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL hasStamp;</pre>
      </objectivec>
      <java>
        <pre>public boolean hasStamp()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsTxtLoadOptions">
      <summary>Provides options specifically for loading TEXT files as raster images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>Text files have no physical width or height in pixels. You can use
            the <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentOptions" /> to control
            how the final document is rendered as a raster image. For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTxtLoadOptions.Enabled">
      <summary>Enables or disables the LEADTOOLS Txt codec. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> to enable the LEADTOOLS Txt codecs (Leadtools.Codecs.Txt.dll), <strong>false</strong> to disable it. Default is <strong>false</strong>.</value>
      <remarks>
        <para>When this property is set to false, LEADTOOLS will not attempt to load TEXT files and rasterize them and the Leadtools.Codecs.Txt codecs
            will not be used.</para>
        <para>Enabling the TEXT code will generally hinder performance when the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object is attempting to load a file on disk
            with a wrong or missing a file header.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTxtLoadOptions.FontColor">
      <summary>Gets or sets the text font color. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The text font color.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTxtLoadOptions.Highlight">
      <summary>Gets or sets the text highlight color. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The text highlight color.</value>
      <remarks>
        <para>Highlight is the color used as background for the text paragraphs found in the file. If you do not want to show the highlight
            color, set its value to the same as <see cref="P:Leadtools.Codecs.CodecsTxtLoadOptions.FontColor" /> or <see cref="P:Leadtools.Codecs.CodecsTxtLoadOptions.BackColor" />.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTxtLoadOptions.BackColor">
      <summary>Gets or sets the text background color. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The text background color.</value>
      <remarks>
        <para>Background is the color used to fill the resulting image before rendering the text on top of it.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTxtLoadOptions.FontSize">
      <summary>Gets or sets the text font size in points. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The text font size in points.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTxtLoadOptions.FaceName">
      <summary>Gets or sets the text font face name. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The text font face name.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTxtLoadOptions.Bold">
      <summary>Indicates whether or not the text font should be bold. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to use bold font for the text, false to use normal font.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTxtLoadOptions.Italic">
      <summary>Indicates whether or not the text font should be italic. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to use italic font for the text, false to use normal font.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTxtLoadOptions.Underline">
      <summary>Indicates whether or not the text font should be underlined. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to use underlined font for the text, false to use normal font.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTxtLoadOptions.Strikethrough">
      <summary>Indicates whether or not the text font should use strikethrough style. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to use strikethrough font for the text, false to use normal font.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTxtLoadOptions.UseSystemLocale">
      <summary>Indicates whether to use the current Windows locale (code page) when rendering text files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> to use the current Windows locale (code page) when rendering text files, otherwise; <strong>false</strong>.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsTxtOptions">
      <summary>Provides extra options for loading TEXT files as raster images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>
        <!--CodecsTxtOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTxtOptions.Load">
      <summary>Gets the options for loading TEXT files as raster images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The TEXT load options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTxtOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJbigLoadOptions">
      <summary>Provides options specifically for loading JBIG images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing JBIG Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbigOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsJbigLoadOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsJbigLoadOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbigLoadOptions.Resolution">
      <summary>Gets or sets the resolution to load. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The resolution to load.</value>
      <remarks>
        <para>Specify 0 for both dimensions to load the default resolution, which is the highest resolution layer,
            which corresponds to the image with its FULL DIMENSIONS.</para>
        <para>Ex: If the file contains the image at the following dimensions: 800X600, 400X 300 and 200X150, then
            in the default case the codec will load the image at 800X600.</para>
        <para>Specify either the desired width or desired height to load, and use 0 to get the default for the other
            dimension. The load procedure will determine the closest resolution layer, which best fits the user's
            request.</para>
        <para>Ex: If the file contains the image at the following dimensions: 800X600, 400X 300 and 200X150 and the
            user requests an image with width equal to 780 for example, then LEADTOOLS will automatically know that
            the proper width is 800 and load the image at the (800X600) resolution.</para>
        <para>Specify one of the exact sets of dimensions in the file.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing JBIG Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbigOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LeadSize resolution;</pre>
      </objectivec>
      <java>
        <pre>
public LeadSize getResolution()
public void setResolution(LeadSize value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsJbigOptions">
      <summary>Provides extra options for loading and saving JBIG images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing JBIG Features</seealso>
      <noremarks />
      <example>
        <!--CodecsJbigOptions-->
      </example>
      <objectivec>
        <pre>@interface LTCodecsJbigOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsJbigOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsJbigOptions.Load">
      <summary>Gets the options for loading JBIG images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The JBIG load options.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing JBIG Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJbigOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsJbigLoadOptions* load;</pre>
      </objectivec>
      <java>
        <pre>public CodecsJbigLoadOptions getLoad()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsEnumTagsEventArgs">
      <summary>Provides data for the <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound">RasterCodecs.TagFound</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound">RasterCodecs.TagFound</see>.</example>
      <objectivec>
        <pre>@interface LTCodecsEnumTagsEventArgs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsEnumTagsEvent extends LeadEvent</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEnumTagsEventArgs.Id">
      <summary>Gets the tag id. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Tag to identify the data in the TIFF file. This may be any tag specified in
            <see cref="M:Leadtools.Codecs.RasterCodecs.WriteTag(System.String,System.Int32,Leadtools.RasterTagMetadata)">RasterCodecs.WriteTag</see>, or any other tag added by the TIFF filter when saving
            the file. For example, all of the TIFF comments would generate a particular TIFF tag.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound">RasterCodecs.TagFound</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) int tagId;</pre>
      </objectivec>
      <java>
        <pre>public int getId()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEnumTagsEventArgs.MetadataType">
      <summary>Gets the tagged data type. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
        <para>The tagged data type. Valid values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.Byte</see>
            </term>
            <description>Byte</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.Ascii</see>
            </term>
            <description>Byte in the range of 0 to 255</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.SByte</see>
            </term>
            <description>Byte used as signed number in the range of -128 to +127</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.Undefined</see>
            </term>
            <description>Byte, with application-defined usage</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.UInt16</see>
            </term>
            <description>Two bytes, unsigned</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.Int16</see>
            </term>
            <description>Two bytes, signed</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.UInt32</see>
            </term>
            <description>Four bytes, unsigned</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.Int32</see>
            </term>
            <description>Four bytes, signed</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.Single</see>
            </term>
            <description>Four bytes used as a floating point number</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.Double</see>
            </term>
            <description>Eight bytes used as a double-precision floating point number</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.URational</see>
            </term>
            <description>Eight bytes, used as a pair of unsigned long integers, where the first number is the numerator and the
                 second is the denominator of a fraction</description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.Rational</see>
            </term>
            <description>Eight bytes, used as a pair of signed long integers, where the first number is the numerator and the
                 second is the denominator of a fraction</description>
          </item>
        </list>
      </value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound">RasterCodecs.TagFound</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) LTRasterTagMetadataDataType metadataType;</pre>
      </objectivec>
      <java>
        <pre>public RasterTagMetadataDataType getMetadataType()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEnumTagsEventArgs.Count">
      <summary>Gets the number of elements. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The number of elements of type <see cref="P:Leadtools.Codecs.CodecsEnumTagsEventArgs.MetadataType" />. Note that this is not the same as the number of bytes. For
            example, if <see cref="P:Leadtools.Codecs.CodecsEnumTagsEventArgs.Count" />is 10 and <see cref="P:Leadtools.Codecs.CodecsEnumTagsEventArgs.MetadataType" /> is <see cref="T:Leadtools.RasterTagMetadataDataType">RasterTagMetadataDataType.Int32</see>, you
            will need 10 x 4 = 40 bytes to read the tag data</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound">RasterCodecs.TagFound</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int count;</pre>
      </objectivec>
      <java>
        <pre>public int getCount()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEnumTagsEventArgs.Cancel">
      <summary>Gets or sets a value which allows the user to abort the enumeration process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to abort the enumeration process, false to continue normally.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.TagFound">RasterCodecs.TagFound</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL cancel;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getCancel()
public void setCancel(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPngLoadOptions">
      <summary>Provides options specifically for loading PNG images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.PNGFilesAndTransparency">PNG Files and Transparency</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPngOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsPngLoadOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsPngLoadOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsPngLoadOptions.GetTrnsChunk">
      <summary>Gets the alpha transform chunk of the PNG file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <returns>An array of bytes that represents the alpha transform chunk of the PNG file.</returns>
      <seealso cref="T:L.Topics.PNGFilesAndTransparency">PNG Files and Transparency</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPngOptions" />.</example>
      <objectivec>
        <pre>-(NSData*)getTrnsChunk;</pre>
      </objectivec>
      <java>
        <pre>public byte[] getTrnsChunk()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsPngLoadOptions.SetTrnsChunk(System.Byte[])">
      <summary>Sets the alpha transform chunk of the PNG file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="chunk">An array of bytes that represents the alpha transform chunk of the PNG file.</param>
      <seealso cref="T:L.Topics.PNGFilesAndTransparency">PNG Files and Transparency</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPngOptions" />.</example>
      <objectivec>
        <pre>-(void)setTrnsChunk:(NSData*)data;</pre>
      </objectivec>
      <java>
        <pre>public void setTrnsChunk(byte[] chunk)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPngSaveOptions">
      <summary>Provides options specifically for saving PNG images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.PNGFilesAndTransparency">PNG Files and Transparency</seealso>
      <remarks>
            For information about compression quality factors, refer to <see cref="T:Leadtools.Topics.CompressionQualityFactors">Compression Quality Factors</see>.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPngOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsPngSaveOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsPngSaveOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPngSaveOptions.QualityFactor">
      <summary>Gets and sets the Quality Factor for saving PNG files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>Any value between 0 and 9. 0 = (default compression), 1 (fastest compression) ... 9 (highest compression ratio).</value>
      <seealso cref="T:L.Topics.PNGFilesAndTransparency">PNG Files and Transparency</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPngOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) int qualityFactor;</pre>
      </objectivec>
      <java>
        <pre>
public int getQualityFactor()
public void setQualityFactor(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPngOptions">
      <summary>Provides extra options for loading and saving PNG images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.PNGFilesAndTransparency">PNG Files and Transparency</seealso>
      <noremarks />
      <example>
        <!--CodecsPngOptions-->
      </example>
      <objectivec>
        <pre>@interface LTCodecsPngOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsPngOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPngOptions.Load">
      <summary>Gets the options for loading PNG images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The PNG load options.</value>
      <seealso cref="T:L.Topics.PNGFilesAndTransparency">PNG Files and Transparency</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPngOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsPngLoadOptions* load;</pre>
      </objectivec>
      <java>
        <pre>public CodecsPngLoadOptions getLoad()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPngOptions.Save">
      <summary>Gets the options for saving PNG images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The PNG save options.</value>
      <seealso cref="T:L.Topics.PNGFilesAndTransparency">PNG Files and Transparency</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPngOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsPngSaveOptions* save;</pre>
      </objectivec>
      <java>
        <pre>public CodecsPngSaveOptions getSave()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsEpsLoadOptions">
      <summary>Provides options specifically for loading EPS images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsEpsOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEpsLoadOptions.ForceThumbnail">
      <summary>Enables or disables the loading of thumbnails from EPS files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true to force the loading of thumbnails (if present) in EPS files, false to load the actual EPS data.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsEpsOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsEpsOptions">
      <summary>Provides extra options for loading and saving EPS images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>
        <!--CodecsEpsOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEpsOptions.Load">
      <summary>Gets the options for loading EPS images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The EPS load options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsEpsOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsEcwSaveOptions">
      <summary>Provides options specifically for saving ECW images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsEcwOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEcwSaveOptions.QualityFactor">
      <summary>Gets or sets the quality factor for saving ECW files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
            An integer value between 1 and 100 that specifies the quality factor used when saving ECW files where
            1 is maximum quality and 100 is maximum compression.  Default value is 1.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsEcwOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsEcwLoadOptions">
      <summary>Provides options specifically for loading ECW images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsEcwOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEcwLoadOptions.Resolution">
      <summary>Gets or sets the resolution to load. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The resolution to load.</value>
      <remarks>
        <para>Specify 0 for both dimensions to load the default resolution, which is the highest resolution layer, 
            which corresponds to the image with its FULL DIMENSIONS.</para>
        <para>Scenario 1: If the file contains the image at the following dimensions: 800X600, 400X300 and 200X150, then 
            in the default case the codec will load the image at 800X600.</para>
        <para>Specify either the desired width or desired height to load, and use 0 to get the default for the other 
            dimension. The load procedure will determine the closest resolution layer, which best fits the user's 
            request.</para>
        <para>Scenario 2: If the file contains the image at the following dimensions: 800X600, 400X300 and 200X150 and the 
            user requests an image with width equal to 780 for example, then LEADTOOLS will automatically know that 
            the proper width is 800 and load the image at the (800X600) resolution.</para>
        <para>Specify one of the exact sets of dimensions in the file.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsEcwOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsEcwOptions">
      <summary>Provides extra options for loading and saving ECW images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>
        <!--CodecsEcwOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEcwOptions.Save">
      <summary>Gets the options for saving ECW images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The ECW save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsEcwOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsEcwOptions.Load">
      <summary>Gets the options for loading ECW images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The ECW load options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsEcwOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRasterPdfVersion">
      <summary>Indicates the PDF file version. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>Used as value for <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.Version">CodecsRasterPdfInfo.Version</see> to determine the version of the raster
            PDF file and <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version">CodecsPdfSaveOptions.Version</see> to specifcy the version of the raster PDF file
            to save.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> and <see cref="T:Leadtools.Codecs.CodecsPdfSaveOptions" />.</example>
      <java>
        <pre>public enum CodecsRasterPdfVersion</pre>
      </java>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterPdfVersion.V12">
      <summary>
        <para>Adobe Acrobat PDF version 1.2</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterPdfVersion.V14">
      <summary>
        <para>Adobe Acrobat PDF version 1.4</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterPdfVersion.PdfA">
      <summary>
        <para>Adobe Acrobat PDF/A. PDF/A is a subset of the PDF standard that contains only those features that are suited for long-term archival.
            Primarily this means that the document will be completely self-contained: it includes all content, font and color information</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterPdfVersion.V15">
      <summary>
        <para>Adobe Acrobat PDF version 1.5</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterPdfVersion.V16">
      <summary>
        <para>Adobe Acrobat PDF version 1.6</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterPdfVersion.V13">
      <summary>
        <para>Adobe Acrobat PDF version 1.3</para>
      </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsRasterPdfVersion.V17">
      <summary>
        <para>Adobe Acrobat PDF version 1.7</para>
      </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRasterPdfInfo">
      <summary>Contains information for a raster PDF file created with the LEADTOOLS Raster PDF plug in. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>The various <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see> methods are used to return information
            about a raster image file on disk or stream. Information such as the format, size, dimension, bits per pixel are returned as members
            of the <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see>.</para>
        <para>Raster Adobe PDF saved with the various <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)" /> methods (using any of the
            <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdfXyz</see> flavors), contain extra information that can be obtained using
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetRasterPdfInfo(System.String,System.Int32)">RasterCodecs.GetRasterPdfInfo</see>. This method return an instance of
            <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> filled with these extra information as follows:</para>
        <list type="table">
          <listheader>
            <term>Member</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.IsLeadPdf" />
            </term>
            <description>
              <para>
                <strong>true</strong> if the source file was created with the LEADTOOLS Raster PDF plug in, <strong>false</strong>; otherwise.
              If the value of this property is <strong>true</strong>, then other members of this structure are guaranteed to contain accurate information. If the
              value of this property is <strong>false</strong> and <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.Format" /> is one of the PDF flavors
              (<see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdfXyz</see>, then the source file is a PDF not created with LEADTOOLS, and the other members of
              this structure may not be guaranteed to contain accurate information (except for <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.Width" />, <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.Height" />,
              <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.XResolution" /> and <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.YResolution" />). If this property is <strong>true</strong>, then calling
              <see cref="M:Leadtools.Codecs.RasterCodecs.DeletePage(System.String,System.Int32)">RasterCodecs.DeletePage</see> is guaranteed to work on this file.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.BitsPerPixel" />
            </term>
            <description>
              <para>The bits per pixel value of the raster PDF page. This is the same value used as the <i>bitsPerPixel</i> parameter value to the
              <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method used to create this file. You can set the value of
              <see cref="P:Leadtools.Codecs.CodecsPdfLoadOptions.DisplayDepth">CodecsPdfLoadOptions.DisplayDepth</see> to this value to load a PDF page in the original
              bits per pixel value it was saved at.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.Format" />
            </term>
            <description>
              <para>The format (compression type) of the raster PDF page, one of <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdfXyz</see>. This
              is the same value used as the <i>format</i> parameter value to the <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method used to create this
              file.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.Width" />
            </term>
            <description>
              <para>The width of the page in pixels. This is the same width of the <see cref="T:Leadtools.RasterImage" /> object to the
              <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method used to create this file.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.Height" />
            </term>
            <description>
              <para>The height of the page in pixels. This is the same height of the <see cref="T:Leadtools.RasterImage" /> object to the
              <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method used to create this file.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.XResolution" />
            </term>
            <description>
              <para>The horizontal resolution of the page in dots per inch. This is the same horizontal resolution of the
              <see cref="T:Leadtools.RasterImage" /> object to the <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method used to create this file if
              <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.UseImageResolution">CodecsPdfSaveOptions.UseImageResolution</see> was set to <strong>true</strong>.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.YResolution" />
            </term>
            <description>
              <para>The vertical resolution of the page in dots per inch. This is the same vertical resolution of the
              <see cref="T:Leadtools.RasterImage" /> object to the <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method used to create this file. if
              <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.UseImageResolution">CodecsPdfSaveOptions.UseImageResolution</see> was set to <strong>true</strong>.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.Version" />
            </term>
            <description>
              <para>The version of the PDF file. This is the same value as <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version">CodecsPdfSaveOptions.Version</see> used
              when saving this file with the <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method.</para>
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <example>
        <para>This example will create a multi-page raster PDF file with each page having its own size, compression and bits/pixel, then
            use <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" /> to split this file into several pages with each page saved with the original compression, size,
            dimension obtained from the file directly.</para>
        <!--CodecsRasterPdfInfo-->
      </example>
      <objectivec>
        <pre>@interface LTCodecsRasterPdfInfo : NSObject</pre>
      </objectivec>
      <java>
        <pre>public final class CodecsRasterPdfInfo</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterPdfInfo.IsLeadPdf">
      <summary>Gets or sets a value indicating whether the PDF file was created with the LEADTOOLS Raster PDF plug in. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> if the PDF file was created with the LEADTOOLS Raster PDF plug in, <strong>false</strong>; otherwise.</value>
      <remarks>
        <para>If the value of this property is <strong>true</strong>, then other members of this structure are guaranteed to contain accurate information.
            If the value of this property is <strong>false</strong> and <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.Format" /> is one of the PDF flavors
            (<see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdfXyz</see>, then the source file is a PDF not created with LEADTOOLS, and the other members of
            this structure may not be guaranteed to contain accurate information. If this property is <strong>true</strong>, then calling
            <see cref="M:Leadtools.Codecs.RasterCodecs.DeletePage(System.String,System.Int32)">RasterCodecs.DeletePage</see> is guaranteed to work on this file.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL isLeadPdf;</pre>
      </objectivec>
      <java>
        <pre>
public boolean isLeadPdf()
public void setIsLeadPdf(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterPdfInfo.BitsPerPixel">
      <summary>Gets or sets a value indicating the bits per pixel value of the raster PDF page. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>An integer that indicates the bits per pixel value of the raster PDF page.</value>
      <remarks>
        <para>The bits per pixel value of the raster PDF page. This is the same value used as the <i>bitsPerPixel</i> parameter value to the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method used to create this file. You can set the value of
            <see cref="P:Leadtools.Codecs.CodecsPdfLoadOptions.DisplayDepth">CodecsPdfLoadOptions.DisplayDepth</see> to this value to load a PDF page in the original
            bits per pixel value it was saved at.</para>
        <para>This property is guaranteed to contain accurate information only if the value of <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.IsLeadPdf" /> is <strong>true</strong>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int bitsPerPixel;</pre>
      </objectivec>
      <java>
        <pre>
public int getBitsPerPixel()
public void setBitsPerPixel(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterPdfInfo.Format">
      <summary>Gets or sets the format (compression) type of the raster PDF page. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>One of <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.RasPdfXyz</see> that indicates the format (compression) type of the raster PDF page. If the
            source file is not a raster PDF, the value of this property will be <see cref="T:Leadtools.RasterImageFormat">RasterImageFormat.Unknown</see>.</value>
      <remarks>
        <para>This is the same value used as the <i>format</i> parameter value to the <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method used to
            create this file.</para>
        <para>This property is guaranteed to contain accurate information only if the value of <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.IsLeadPdf" /> is <strong>true</strong>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTRasterImageFormat format;</pre>
      </objectivec>
      <java>
        <pre>
public RasterImageFormat getFormat()
public void setFormat(RasterImageFormat value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterPdfInfo.Width">
      <summary>Gets or sets the width of the PDF page in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The width of the PDF page in pixels.</value>
      <remarks>
        <para>The width of the page in pixels. This is the same width of the <see cref="T:Leadtools.RasterImage" /> object to the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method used to create this file.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int width;</pre>
      </objectivec>
      <java>
        <pre>
public int getWidth()
public void setWidth(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterPdfInfo.Height">
      <summary>Gets or sets the height of the PDF page in pixels. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The height of the PDF page in pixels.</value>
      <remarks>
        <para>The height of the page in pixels. This is the same height of the <see cref="T:Leadtools.RasterImage" /> object to the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method used to create this file.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int height;</pre>
      </objectivec>
      <java>
        <pre>
public int getHeight()
public void setHeight(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterPdfInfo.XResolution">
      <summary>Gets or sets the horizontal resolution of the PDF page in dots per inch. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The horizontal resolution of the PDF page in dots per inch.</value>
      <remarks>
        <para>This is the same horizontal resolution of the <see cref="T:Leadtools.RasterImage" /> object to the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method used to create this file if
            <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.UseImageResolution">CodecsPdfSaveOptions.UseImageResolution</see> was set to
            <strong>true</strong>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int xResolution;</pre>
      </objectivec>
      <java>
        <pre>
public int getXResolution()
public void setXResolution(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterPdfInfo.YResolution">
      <summary>Gets or sets the vertical resolution of the PDF page in dots per inch. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The vertical resolution of the PDF page in dots per inch.</value>
      <remarks>
        <para>This is the same vertical resolution of the <see cref="T:Leadtools.RasterImage" /> object to the
            <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method used to create this file if
            <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.UseImageResolution">CodecsPdfSaveOptions.UseImageResolution</see> was set to
            <strong>true</strong>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int yResolution;</pre>
      </objectivec>
      <java>
        <pre>
public int getYResolution()
public void setYResolution(int value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterPdfInfo.Version">
      <summary>Gets or sets the version of PDF file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>One of the <see cref="T:Leadtools.Codecs.CodecsRasterPdfVersion" /> enumeration members that indicate the version of the PDF file.</value>
      <remarks>
        <para>This is the same value as <see cref="P:Leadtools.Codecs.CodecsPdfSaveOptions.Version">CodecsPdfSaveOptions.Version</see> used
            when saving this file with the <see cref="M:Leadtools.Codecs.RasterCodecs.Save(Leadtools.RasterImage,System.String,Leadtools.RasterImageFormat,System.Int32)">RasterCodecs.Save</see> method.</para>
        <para>This property is guaranteed to contain accurate information only if the value of <see cref="P:Leadtools.Codecs.CodecsRasterPdfInfo.IsLeadPdf" /> is <strong>true</strong>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterPdfInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsRasterPdfVersion version;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsRasterPdfVersion getVersion()
public void setVersion(CodecsRasterPdfVersion value)            </pre>
      </java>
    </member>
    <member name="T:Leadtools.Codecs.CodecsGifImageInfo">
      <summary>Provides information specific to GIF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@interface LTCodecsGifImageInfo : NSObject</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsGifImageInfo.GetAnimationPalette">
      <summary>Gets the animation palette. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The animation palette.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>- (NSArray*)getAnimationPalette;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifImageInfo.HasAnimationLoop">
      <summary>Determines whether or not the image has animation looping. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image has animation looping; false, otherwise.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL hasAnimationLoop;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifImageInfo.AnimationLoop">
      <summary>Determines whether or not the image has animation looping enabled. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>non-zero if the image has animation looping enabled, zero otherwise.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int animationLoop;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifImageInfo.AnimationWidth">
      <summary>Gets the animation width. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The animation width, in pixels.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int animationWidth;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifImageInfo.AnimationHeight">
      <summary>Gets the animation height. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The animation height, in pixels.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) unsigned int animationHeight;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifImageInfo.HasAnimationBackground">
      <summary>Determines whether or not the image has animation background. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image has animation background; false, otherwise.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) int hasAnimationBackground;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifImageInfo.AnimationBackground">
      <summary>Gets the animation background. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The animation background.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, copy, readonly) LTRasterColor* animationBackground;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifImageInfo.HasAnimationPalette">
      <summary>Determines whether or not the image has animation palette. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image has animation palette; false, otherwise.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL hasAnimationPalette;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGifImageInfo.IsInterlaced">
      <summary>Determines whether or not the image is interlaced. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image is interlaced; false, otherwise.</value>
      <seealso cref="T:L.Topics.ImplementingJbigFeatures">Implementing GIF Features</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL isInterlaced;</pre>
      </objectivec>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsVffView">
      <summary>Indicates the view to use when loading VFF (Sun TAAC Bitmap) images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
            For more information and an example, refer to <see cref="T:Leadtools.Codecs.CodecsVffOptions" />.
            </remarks>
      <noexample />
    </member>
    <member name="F:Leadtools.Codecs.CodecsVffView.UpToDown">
      <summary>
            Up to down along the X-Axis
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVffView.DownToUp">
      <summary>
            Down to up along the X-Axis
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVffView.LeftToRight">
      <summary>
            Left to right along the Y-Axis
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVffView.RightToLeft">
      <summary>
            Right to left along the Y-Axis
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVffView.FrontToRear">
      <summary>
            Front to rear along the Z-Axis
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsVffView.RearToFront">
      <summary>
            Rear to front along the Z-Axis
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsVffLoadOptions">
      <summary>Provides options for loading VFF (Sun TAAC Bitmap) images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>For more information, refer to 
            <see cref="T:L.Topics.FileFormatsVff">File Formats - VFF Format</see>.</para>
      </remarks>
      <example>
        <!--CodecsVffLoadOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVffLoadOptions.View">
      <summary>Gets or sets the view to use when loading VFF (Sun TAAC Bitmap) images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The view to use when loading VFF (Sun TAAC Bitmap) images.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVffLoadOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsVffOptions">
      <summary>Provides extra options for loading and saving VFF (Sun TAAC Bitmap) images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVffLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsVffOptions.Load">
      <summary>Gets the options for loading VFF (Sun TAAC Bitmap) images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The options to use when loading VFF (Sun TAAC Bitmap) images.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsVffLoadOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPsdChannelInfo">
      <summary>Provides information about a specified channel in the PSD file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
            For more information on PSD channels, refer to the FILE FORMATS SPECIFICATION from Adobe.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdChannel(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdChannelInfo)">RasterCodecs.LoadPsdChannel</see>.
            </example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsPsdChannelInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.Codecs.CodecsPsdChannelInfo" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdChannel(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdChannelInfo)">RasterCodecs.LoadPsdChannel</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdChannelInfo.ChannelType">
      <summary>The type of the channel in the PSD file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsPsdChannelType" /> object that specifies the type of the channel in the PSD file.</value>
      <remarks>
        <para>.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdChannel(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdChannelInfo)">RasterCodecs.LoadPsdChannel</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdChannelInfo.Name">
      <summary>Gets the name for the channel. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.String" /> which contains the name for the channel.</value>
      <remarks>
        <para>The channel name will be stored in the file.</para>
        <para>For more information, refer to the FILE FORMATS SPECIFICATION from Adobe.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdChannel(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdChannelInfo)">RasterCodecs.LoadPsdChannel</see>.
            </example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsColorSpaceType">
      <summary>Indicates the colorspace of the image data <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <java>
        <pre>public enum CodecsColorSpaceType</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsColorSpaceType.Bgr">
      <summary>
            BGR colorspace
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsColorSpaceType.Yuv">
      <summary>
            YUV colorspace
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsColorSpaceType.Cmyk">
      <summary>
            CMYK colorspace
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsColorSpaceType.CieLab">
      <summary>
            CIELab colorspace
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsAsyncCompletedEventArgs">
      <summary>Base class for the <see cref="T:Leadtools.Codecs.CodecsGetInformationAsyncCompletedEventArgs" /> and <see cref="T:Leadtools.Codecs.CodecsLoadAsyncCompletedEventArgs" /> classes. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports asynchronous operations for getting 
            information and loading 
            images through the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> and 
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see>
            methods. These methods will not block the calling thread and perform their work in the background. 
            When the operation is completed, the
            <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see> or
            <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see> events will fire 
            with the operation status and result.</para>
        <para>Both of these events use as data arguments the objects of classes derived from 
            <see cref="T:Leadtools.Codecs.CodecsAsyncCompletedEventArgs" />. For more information,
            refer to <see cref="T:Leadtools.Codecs.CodecsGetInformationAsyncCompletedEventArgs" /> and <see cref="T:Leadtools.Codecs.CodecsLoadAsyncCompletedEventArgs" />.</para>
        <para>The <see cref="T:Leadtools.Codecs.CodecsAsyncCompletedEventArgs" /> class derives 
            from the .NET 
            <see cref="T:System.ComponentModel.AsyncCompletedEventArgs">System.ComponentModel.AsyncCompletedEventArgs</see>
            class and uses these class properties to provide information about the status of the asynchronous operation.</para>
      </remarks>
      <example>For an example, refer to 
            <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see> and
            <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.#ctor(System.Uri,System.IO.Stream,System.String,System.Exception,System.Boolean,System.Object)">
      <summary>Creates new instance of the <see cref="T:Leadtools.Codecs.CodecsAsyncCompletedEventArgs" /> with the specified parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="uri">The <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> this asynchronous operation is using.</param>
      <param name="stream">The <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> this asynchronous operation is using.</param>
      <param name="fileName">The file name this asynchronous operation is using.</param>
      <param name="error">Any error that occurred during the asynchronous operation.</param>
      <param name="cancelled">A value indicating whether the asynchronous operation was canceled.</param>
      <param name="userState">The optional user-supplied state object passed to the
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see>
            or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> method that initialized the 
            construction of this object.</param>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see> and
            <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri">
      <summary>Gets the URI this asynchronous operation is using. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> this asynchronous operation is using.</value>
      <remarks>
        <para>Only one of the following can be a valid value (not a null reference) 
            at any time: <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" />, 
            <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> or 
            <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" />.
            The property that contains a valid reference depends on what version of 
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see>
            or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> method has been called.</para>
        <para>For example, if
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,System.Object)">RasterCodecs.LoadAsync(Uri uri, object userState)</see> 
            is being called, the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> will contain the same URI passed 
            to the method
            while <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> 
            will both be null. If 
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,System.Object)">RasterCodecs.LoadAsync(String fileName, object userState)</see> 
            is being called,
            the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> will contain the same file name string value passed 
            to the method
            while <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> 
            will both be null and so on.</para>
      </remarks>
      <example>For an example, refer to 
            <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see> and
            <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream">
      <summary>Gets the stream this asynchronous operation is using. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> this asynchronous operation is using.</value>
      <remarks>
        <para>Only one of the following can be a valid value (not a null reference) at any time: 
            <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" />, <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> 
            or <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" />.
            The property that contains a valid reference depends on which version of 
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see>
            or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> method has been called.</para>
        <para>For example, if
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,System.Object)">RasterCodecs.LoadAsync(Uri uri, object userState)</see> 
            is being called, the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> will contain the same URI passed to the method
            while <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> 
            will both be null. If
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,System.Object)">RasterCodecs.LoadAsync(String fileName, object userState)</see> 
            is being called,
            the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> will contain the same file name string value passed to the 
            method
            while <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> will 
            both be null and so on.</para>
      </remarks>
      <example>For an example, refer to 
            <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see> and
            <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName">
      <summary>Gets the file name this asynchronous operation is using. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The file name this asynchronous operation is using.</value>
      <remarks>
        <para>Only one of the following can be a valid value (not a null reference) at any time: <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" />, <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> or 
            <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" />.
            The property that contains a valid reference depends on what version of 
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see>
            or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> method has been called.</para>
        <para>For example, if
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,System.Object)">RasterCodecs.LoadAsync(Uri uri, object userState)</see> 
            is being called, the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> will contain the same URI passed 
            to the method
            while <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> 
            will both be null. If 
            <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,System.Object)">RasterCodecs.LoadAsync(String fileName, object userState)</see> 
            is being called,
            the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> will contain the same file name string value passed 
            to the method
            while <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> 
            will both be null and so on.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see> and
            <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see></example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsGetInformationAsyncCompletedEventArgs">
      <summary>Contains data for the 
             <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports getting information on image files asynchronously using the
             <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> methods. 
             When calling any of these methods, the caller thread
             will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> 
             that is in a loading status
             (<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> is set to <strong>true</strong>). 
             Do not use the other properties of this
             object while the object is loading.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes getting the information about the file, 
             the various properties of the
             <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> will be populated with the image file information and the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see>
             property will be set to <strong>false</strong>.</para>
        <para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> property to determine whether the
             image information has been collected. Instead, subscribe to the 
             <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see>
             event to get notification on when the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)" /> 
             operation is completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see> 
             event data will also contain the same
             object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> 
             so you do not have to keep the original
             object in your application.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see> 
             event uses a <see cref="T:Leadtools.Codecs.CodecsGetInformationAsyncCompletedEventArgs" /> data argument object. 
             This class contains the following properties:</para>
        <list type="table">
          <listheader>
            <term>Property</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri">Uri</see>, 
                  <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream">Stream</see> and
                  <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName">FileName</see></term>
            <description>
              <para>Contains the URI, stream or file name passed to the method that initialized this 
             asynchronous operation.</para>
              <para>Only one of these properties can be a valid value (not a null reference) at any time. 
             The property that contains a valid reference depends on which
             version of <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> 
             method has been called.</para>
              <para>For example, if
             <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.Uri,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync(Uri uri, bool totalPages, int pageNumberobject, object userState)</see> is being called,
             the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> will contain the same URI passed to the method while
             <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> will both be null. If
             <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync(string fileName, bool totalPages, int pageNumberobject, object userState)</see> is being called,
             the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> will contain the same file name string value 
             passed to the method
             while <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> 
             will both be null and so on.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsGetInformationAsyncCompletedEventArgs.Info">Info</see>
            </term>
            <description>
              <para>Contains the <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> class instance that contains the 
             information about the image file. This instance is the same
             object returned from the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> method. 
             While the asynchronous operation
             is running, the value of the<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> property 
             will be <strong>true</strong>, indicating that
             the object is being populated with the information and should not be used. When the asynchronous operation completes, the
             <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see> event will fire and
             <see cref="P:Leadtools.Codecs.CodecsGetInformationAsyncCompletedEventArgs.Info">Info</see> will contain the final 
             and ready to use object. If an error occurs,
             this property will be set to null and the object is disposed internally by the toolkit.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error">Error</see>
            </term>
            <description>
              <para>Contains any errors that might have occurred during the asynchronous operation. You must check this value when the
             <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see> event fires 
             and make sure it does not
             contain a valid <see cref="T:System.Exception" /> object.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled">Cancelled</see>
            </term>
            <description>
              <para>Contains a value indicating whether an asynchronous operation has been canceled. For example, 
             by calling <see cref="M:Leadtools.Codecs.RasterCodecs.CancelAsync">RasterCodecs.CancelAsync</see> when using 
             <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> with a URL</para>
            </description>
          </item>
        </list>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see>.</example>
      <java>
        <pre>public class CodecsGetInformationAsyncCompletedEvent extends CodecsAsyncCompletedEvent</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsGetInformationAsyncCompletedEventArgs.#ctor(Leadtools.Codecs.CodecsImageInfo,System.Uri,System.IO.Stream,System.String,System.Exception,System.Boolean,System.Object)">
      <summary>Creates a new instance of the <see cref="T:Leadtools.Codecs.CodecsGetInformationAsyncCompletedEventArgs" /> with the specified parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="info">The <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object instance being used.</param>
      <param name="uri">The <see cref="T:System.Uri" /> this asynchronous operation is using.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> this asynchronous operation is using.</param>
      <param name="fileName">The file name this asynchronous operation is using.</param>
      <param name="error">Any error that occurred during the asynchronous operation.</param>
      <param name="cancelled">A value indicating whether the asynchronous operation was canceled.</param>
      <param name="userState">The optional user-supplied state object passed to the 
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see>
            or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> method that initialized 
            the construction of this object.</param>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see>.</example>
      <java>
        <pre>public CodecsGetInformationAsyncCompletedEvent(Object source, CodecsImageInfo info, ILeadStream stream, RuntimeException error, boolean cancelled, Object userState)</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsGetInformationAsyncCompletedEventArgs.Info">
      <summary>Gets the <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> class instance that contains the information about the image file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsImageInfo" /> object that contains the information about the image file, or a null reference (Nothing in Visual Basic)
            if an error occurred.</value>
      <remarks>
        <para>This property contains the information about the image file. This instance is the same
            object returned from the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> method. While the asynchronous operation
            is running, the value of the<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> property will be <strong>true</strong> indicating that
            the object is being populated with the information and should not be used. When the asynchronous operation completes, the
            <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see> event will fire and
            <see cref="P:Leadtools.Codecs.CodecsGetInformationAsyncCompletedEventArgs.Info">Info</see> will contain the final and ready to use object.
            If an error occurs,
            this property will be set to null and the object is disposed internally by the toolkit.</para>
        <para>When an error occur, either the 
            <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error">Error</see> property is not a null reference or
            the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled">Cancelled</see> property is <strong>true</strong>.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.GetInformationAsyncCompleted">RasterCodecs.GetInformationAsyncCompleted</see>.</example>
      <java>
        <pre>public CodecsImageInfo getInfo()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsLoadAsyncCompletedEventArgs">
      <summary>Contains data for the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <remarks>
        <para>The <see cref="T:Leadtools.Codecs.RasterCodecs" /> class supports loading image files asynchronously using the
             <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> methods. 
             When calling any of these methods, the caller thread
             will not be blocked and the method will return instantly with an instance of <see cref="T:Leadtools.RasterImage" /> 
             that is in a loading status
             (the<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> property is set to <strong>true</strong>). Do not use the other properties of this
             object while the object is in loading status.</para>
        <para>When the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object finishes loading the image, the various properties of the
             <see cref="T:Leadtools.RasterImage" /> will be populated with the image information and data and the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see>
             property will be set to <strong>false</strong>.</para>
        <para>Do not poll the 
            <see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> 
             property to determine whether the
             image is finished loaded. Instead, subscribe to the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see>
             event to get notification when the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)" /> operation is completed and whether any errors occurred.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see> event data will also contain the same
             object returned from <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> so you do not have to keep the original
             object in your application.</para>
        <para>The <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see> event uses a data argument object of
             type <see cref="T:Leadtools.Codecs.CodecsLoadAsyncCompletedEventArgs" />. This class contains the following properties:</para>
        <list type="table">
          <listheader>
            <term>Property</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri">Uri</see>, <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream">Stream</see> and
                  <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName">FileName</see></term>
            <description>
              <para>Contains the URI, stream or file name passed to the method that initialized this asynchronous operation.</para>
              <para>Only one of these properties can be a valid value (not a null reference) at any time The property that contains a valid reference depends on what
             version of <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> method has been called.</para>
              <para>For example, if
             <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.Uri,System.Object)">RasterCodecs.LoadAsync(Uri uri, object userState)</see> is being called, the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> will contain the same URI passed to the method
             while <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> will both be null. If 
             <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,System.Object)">RasterCodecs.LoadAsync(String fileName, object userState)</see> is being called,
             the <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.FileName" /> will contain the same file name string value passed to the method
             while <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Uri" /> and <see cref="P:Leadtools.Codecs.CodecsAsyncCompletedEventArgs.Stream" /> will both be null and so on.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsLoadAsyncCompletedEventArgs.Image">Image</see>
            </term>
            <description>
              <para>Contains the <see cref="T:Leadtools.RasterImage" /> class instance that contains the image data being loaded. This instance is the same
             object returned from the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> method. While the asynchronous operation
             is running, the value of the<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> property will be <strong>true</strong> indicating that
             the object is being populated with the image information and should not be used. When the asynchronous operation completes, the
             <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see> event will fire and
             <see cref="P:Leadtools.Codecs.CodecsLoadAsyncCompletedEventArgs.Image">Image</see> will contain the final and ready to use object. If an error occurs,
             this property will be set to null and the object is disposed internally by the toolkit.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error">Error</see>
            </term>
            <description>
              <para>Contains any errors that might have occurred during the asynchronous operation. You must check this value when the
             <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see> event fires and make sure it does not
             contain a valid <see cref="T:System.Exception" /> object.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled">Cancelled</see>
            </term>
            <description>
              <para>Contains a value indicating whether an asynchronous operation has been canceled. For example, by calling <see cref="M:Leadtools.Codecs.RasterCodecs.CancelAsync">RasterCodecs.CancelAsync</see> when using <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> with a URL</para>
            </description>
          </item>
        </list>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see>.</example>
      <java>
        <pre>public class CodecsLoadAsyncCompletedEvent extends CodecsAsyncCompletedEvent</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="M:Leadtools.Codecs.CodecsLoadAsyncCompletedEventArgs.#ctor(Leadtools.RasterImage,System.Uri,System.IO.Stream,System.String,System.Exception,System.Boolean,System.Object)">
      <summary>Creates new instance of the <see cref="T:Leadtools.Codecs.CodecsLoadAsyncCompletedEventArgs" /> with the specified parameters. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <param name="image">The <see cref="T:Leadtools.RasterImage" /> object instance being used.</param>
      <param name="uri">The <see cref="T:System.Uri" /> this asynchronous operation is using.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> this asynchronous operation is using.</param>
      <param name="fileName">The file name this asynchronous operation is using.</param>
      <param name="error">Any error that occurred during the asynchronous operation.</param>
      <param name="cancelled">A value indicating whether the asynchronous operation was canceled.</param>
      <param name="userState">The optional user-supplied state object passed to the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see>
            or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> method that initialized the construction of this object.</param>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see>.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsLoadAsyncCompletedEventArgs.Image">
      <summary>Gets the <see cref="T:Leadtools.RasterImage" /> class instance that is being loaded. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.RasterImage" /> object that is being loaded, or a null reference (Nothing in Visual Basic)
            if an error occurred.</value>
      <remarks>
        <para>This instance is the same
            object returned from the <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> method. While the asynchronous operation
            is running, the value of the<see cref="P:Leadtools.Codecs.CodecsImageInfo.IsLoading">RasterImage.IsLoading</see> property will be <strong>true</strong> indicating that
            the object is being populated with the image data and should not be used. When the asynchronous operation completes, the
            <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see> event will fire and
            <see cref="P:Leadtools.Codecs.CodecsLoadAsyncCompletedEventArgs.Image">Image</see> will contain the final and ready to use object. If an error occurs,
            this property will be set to null and the object is disposed internally by the toolkit.</para>
        <para>When an error occur, either the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error">Error</see> property is not a null reference or
            the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled">Cancelled</see> property is <strong>true</strong>.</para>
      </remarks>
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadAsyncCompleted">RasterCodecs.LoadAsyncCompleted</see>.</example>
      <java>
        <pre>public RasterImage getImage()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsFaxImageInfo">
      <summary>Provides information specific to FAX images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@interface LTCodecsFaxImageInfo : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsFaxImageInfo</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsFaxImageInfo.IsCompressed">
      <summary>Determines whether or not the image is compressed. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true if the image is compressed; false, otherwise.</value>
      <seealso cref="T:FO.Topics.SpeedingUp1BitDocuments">Speeding Up 1-Bit Documents</seealso>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign, readonly) BOOL isCompressed;</pre>
      </objectivec>
      <java>
        <pre>public class CodecsFaxImageInfo</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPsdImageInfo">
      <summary>Provides information specific to PSD images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdImageInfo.Layers">
      <summary>Gets the number of layers in the PSD file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>An integer value that represents the number of layers in the PSD file.</value>
      <remarks>
        <para>If this value is 0, then the PSD file does not contain any layers.</para>
        <para>For more information on PSD layers, refer to the FILE FORMATS SPECIFICATION from Adobe.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdImageInfo.Channels">
      <summary>Gets the number of channels in the PSD file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>An integer value that represents the number of channels in the PSD file.</value>
      <remarks>
        <para>If this value is 0, then the PSD file does not contain any channel.</para>
        <para>For more information on PSD channels, refer to the FILE FORMATS SPECIFICATION from Adobe.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsImageInfo" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsCodecLoadMode">
      <summary>The handling mode for a file codec. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>LEADTOOLS maintains a list of codecs used for querying for the file information.</para>
        <para>Fixed codecs are never unloaded from the list. This makes the file detection of file formats very fast.</para>
        <para>Dynamic codecs are dynamically unloaded when the number of loaded codecs exceeds the number set through
            <see cref="M:Leadtools.Codecs.RasterCodecs.PreloadCodecs(System.Int32,System.Int32,System.String)">RasterCodecs.PreloadCodecs</see>.</para>
        <para>Ignored codecs will never be used. You cannot load, save or obtain information on file formats normally handled by a
            codec that is ignored.</para>
        <para>Once you save or load a file handled by a certain codec, that codec will be permanently loaded into memory. From that
            point on, setting the codecs load mode has no effect.</para>
      </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)">RasterCodecs.GetCodecInformation</see>.</example>
      <java>
        <pre>public enum CodecsCodecLoadMode</pre>
      </java>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCodecLoadMode.Dynamic">
      <summary>
            The codec is dynamically loaded and freed as necessary.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCodecLoadMode.Fixed">
      <summary>
            The codec is loaded into memory and will never be unloaded. (This makes the file handling very fast).
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCodecLoadMode.Ignored">
      <summary>
            The codec is ignored. You cannot load, save or get the file information for any files normally handled by this codec.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsCodecInformation">
      <summary>Provides information about a LEADTOOLS file codec. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)">RasterCodecs.GetCodecInformation</see>.</example>
      <java>
        <pre>public final class CodecsCodecInformation</pre>
      </java>
    </member>
    <member name="M:Leadtools.Codecs.CodecsCodecInformation.ToString">
      <summary>Returns the value of the <see cref="P:Leadtools.Codecs.CodecsCodecInformation.Name" /> property. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <returns>The value of the <see cref="P:Leadtools.Codecs.CodecsCodecInformation.Name" /> property.</returns>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)">RasterCodecs.GetCodecInformation</see>.</example>
      <java>
        <pre>public String toString()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsCodecInformation.Name">
      <summary>Gets the codec assembly file name. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A string containing the codec assembly file name.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)">RasterCodecs.GetCodecInformation</see>.</example>
      <java>
        <pre>public String getName()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsCodecInformation.ExtensionList">
      <summary>Gets or sets the list of extensions that the LEADTOOLS codec supports. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A string containing the list of extensions that the LEADTOOLS codec supports. Each extension is separated by the
            ";" character.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)">RasterCodecs.GetCodecInformation</see>.</example>
      <java>
        <pre>
public String getExtensionList()
public void setExtensionList(String value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsCodecInformation.IsPresent">
      <summary>Determines whether or not the LEADTOOLS codec is present on the system. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true if the codec is present on the system; false, otherwise.</value>
      <noremarks />
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)">RasterCodecs.GetCodecInformation</see>.</example>
      <java>
        <pre>public boolean isPresent()</pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsCodecInformation.LoadMode">
      <summary>Gets and sets the load mode for the LEADTOOLS codec. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The load mode for the LEADTOOLS codec.</value>
      <remarks>
            The <i>LoadMode</i> affects the behavior of <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)">RasterCodecs.Load</see>, <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see>,
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see> and <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see>. This can be one of three values:
            Ignored (do not use this codec), Fixed (this codec is always loaded), Dynamic (this codec is load when needed, and unloaded
            when finished).
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)">RasterCodecs.GetCodecInformation</see>.</example>
      <java>
        <pre>
public CodecsCodecLoadMode getLoadMode()
public void setLoadMode(CodecsCodecLoadMode value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsCodecInformation.CheckedByInformation">
      <summary>Identifies whether a particular file codec is 
            used when processing a call to <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see> or
            <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true if the filter codec is used; false, otherwise.</value>
      <remarks>
            A call to has three phases used in identifying a file format.  The first phase checks the first few bytes.  The second
            phase checks the file extension.  The third phase tries all available codec filters. When this value is 'false', the
            corresponding file codec is excluded from all phases.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)">RasterCodecs.GetCodecInformation</see>.</example>
      <java>
        <pre>
public boolean getCheckedByInformation()
public void setCheckedByInformation(boolean value)            </pre>
      </java>
    </member>
    <member name="P:Leadtools.Codecs.CodecsCodecInformation.IsSlowInformation">
      <summary>Identifies whether a particular file codec has been marked as taking a relatively long time to load a file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true if the codec takes a long time to load a file; false, otherwise.</value>
      <remarks>
            Value that indicates whether the codec takes a long time to load.  There are three phases used in identifying a file format.
            The first phase checks the first few bytes.  The second phase checks the file extension.  The third phase tries all
            available codec filters. When this value is 'true', it means that the file format can not be identified by looking at the
            first few bytes of the file.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.GetCodecInformation(System.String)">RasterCodecs.GetCodecInformation</see>.</example>
      <java>
        <pre>public boolean isSlowInformation()</pre>
      </java>
    </member>
    <member name="T:Leadtools.Codecs.CodecsTiffLoadOptions">
      <summary>Provides options specifically for loading TIFF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsTiffLoadOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsTiffLoadOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffLoadOptions.ImageFileDirectoryOffset">
      <summary>Gets or sets the offset within a TIFF file where a page starts. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The offset within a TIFF file where the page starts.</value>
      <remarks>
        <para>This serves as a reference page for loading pages from a large TIFF file.</para>
        <para>The value of the <see cref="P:Leadtools.Codecs.CodecsTiffLoadOptions.UseImageFileDirectoryOffset" /> must be set to true in order for the toolkit to use
            the <see cref="P:Leadtools.Codecs.CodecsTiffLoadOptions.ImageFileDirectoryOffset" /> value when loading TIFF images.</para>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write a comment, tag, metadata, or GeoKey. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) ssize_t imageFileDirectoryOffset;</pre>
      </objectivec>
      <java>
        <pre>
public long getImageFileDirectoryOffset()
public void setImageFileDirectoryOffset(long value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffLoadOptions.UseImageFileDirectoryOffset">
      <summary>Enables or disables using the IFD offset. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use the <see cref="P:Leadtools.Codecs.CodecsTiffLoadOptions.ImageFileDirectoryOffset" /> when loading TIFF images.</value>
      <remarks>
        <p>Some restrictions apply to this function if you use an IFD to indicate to which page to write a comment, tag, metadata, or GeoKey. 
            See the <see cref="T:L.Topics.LoadingAndSavingLargeTIFFFiles">Loading And Saving Large TIFF Files</see> topic for more information.</p>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useImageFileDirectoryOffset;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseImageFileDirectoryOffset()
public void setUseImageFileDirectoryOffset(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffLoadOptions.IgnoreViewPerspective">
      <summary>Indicates whether or not to ignore the view perspective stored in the file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to load the file as <see cref="T:Leadtools.RasterViewPerspective">RasterViewPerspective.TopLeft</see>.</value>
      <remarks>
            If you are loading a TIFF or Exif file that looks rotated or flipped, try setting this property before loading the file.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL ignoreViewPerspective;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getIgnoreViewPerspective()
public void setIgnoreViewPerspective(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffLoadOptions.IgnorePhotometricInterpretation">
      <summary>Enables or disables loading Flash-Pix files without the color transforms. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to ignore the color transforms.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL ignorePhotometricInterpretation;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getIgnorePhotometricInterpretation()
public void setIgnorePhotometricInterpretation(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffLoadOptions.UseFastConversion">
      <summary>Enables or disables use of the fast color conversions when loading CMYK or CIELab files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to enable fast color conversion, false to disable it.</value>
      <remarks>
            Setting this property to true will greatly speed up the loading of CMYK and CIELab files,
            but it will reduce the image quality.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useFastConversion;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseFastConversion()
public void setUseFastConversion(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffLoadOptions.IgnoreAdobeColorTransform">
      <summary>Ignore the Adobe marker containing color transformations. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to ignore the Adobe marker, false to use it.</value>
      <remarks>
            Set this property to True load corrupt files with wrong APPE marker which have incorrect colors.
            </remarks>
      <seealso cref="T:L.Topics.CompressionUsingLEADandJPEGFormats">Compression Using LEAD and JPEG Formats</seealso>
      <seealso cref="P:Leadtools.Codecs.CodecsLoadOptions.LoadCorrupted" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsJpegOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL ignoreAdobeColorTransform;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getIgnoreAdobeColorTransform()
public void setIgnoreAdobeColorTransform(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsTiffSaveOptions">
      <summary>Provides options specifically for saving TIFF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsTiffSaveOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsTiffSaveOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.NoSubFileType">
      <summary>Enables or disables writing a subfile type TIFF tag when writing any TIFF file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            true to prevent writing a subfile type TIFF tag when writing any TIFF file.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL noSubFileType;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getNoSubFileType()
public void setNoSubFileType(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.NoPageNumber">
      <summary>Enables or disables updating the PageNumber tag associated with the pages of a multipage TIFF file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            true to disable updating the PageNumber tag associated with the pages of a multipage TIFF file.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL noPageNumber;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getNoPageNumber()
public void setNoPageNumber(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.NoPalette">
      <summary>Enables or disables saving a TIFF file as grayscale, without a palette. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>
            true to save a TIFF file as grayscale, without a palette.
            </value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL noPalette;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getNoPalette()
public void setNoPalette(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.UseImageFileDirectoryOffset">
      <summary>Enables or disables using the IFD offset. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use the <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.ImageFileDirectoryOffset" /> value when saving TIFF images.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useImageFileDirectoryOffset;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseImageFileDirectoryOffset()
public void setUseImageFileDirectoryOffset(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.ImageFileDirectoryOffset">
      <summary>Gets or sets the offset within a TIFF file where a page starts. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The offset within a TIFF file where the page starts.</value>
      <remarks>
        <para>This serves as a reference page for saving pages from a large TIFF file.</para>
        <para>The value of the <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.UseImageFileDirectoryOffset" /> must be set to true in order for the toolkit to use
            the <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.ImageFileDirectoryOffset" /> value when saving TIFF images.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) ssize_t imageFileDirectoryOffset;</pre>
      </objectivec>
      <java>
        <pre>
public long getImageFileDirectoryOffset()
public void setImageFileDirectoryOffset(long value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.UsePhotometricInterpretation">
      <summary>Enables or disables using Photometric Interpretation when saving TIFF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use Photometric Interpretation when saving TIFF files.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL usePhotometricInterpretation;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUsePhotometricInterpretation()
public void setUsePhotometricInterpretation(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.PhotometricInterpretation">
      <summary>Gets or sets the Photometric Interpretation. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The Photometric Interpretation.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsTiffPhotometricInterpretation photometricInterpretation;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsTiffPhotometricInterpretation getPhotometricInterpretation()
public void setPhotometricInterpretation(CodecsTiffPhotometricInterpretation value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.UseTileSize">
      <summary>Enables and disables using the tile size when saving TIFF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileWidth" /> and <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileHeight" /> when saving TIFF images.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL useTileSize;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUseTileSize()
public void setUseTileSize(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileWidth">
      <summary>Gets or sets the width of the tile to use when saving TIFF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The width of the tile to use when saving TIFF files.</value>
      <remarks>
        <para>When saving TIFF files, the size of the tiles or strips saved in the file can be controlled. Some graphic packages
            cannot load TIFF files unless the files are saved with a certain tile or strip size. LEADTOOLS can load files of any strip
            and tile size, so modifying these settings is not necessary when saving files that will be loaded with LEADTOOLS.</para>
        <para>If the <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.UseTileSize" /> Property is not true, then <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileWidth" /> and <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileHeight" /> are
            ignored. In this case, the image will be saved like in the previous versions of LEADTOOLS.</para>
        <para>If <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileWidth" /> is less than or equal to the image width, the image will be saved as tiles. If
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileWidth" /> is greater than the image width, the image will be saved as strips.  If the image is saved as
            tiles, <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileHeight" /> controls the height of the tile. If the image is saved as strips, <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileHeight" />
            controls the height of the strip. The image can be saved as one strip by setting <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileHeight" /> to a value
            greater than the image height.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int tileWidth;</pre>
      </objectivec>
      <java>
        <pre>
public int getTileWidth()
public void setTileWidth(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileHeight">
      <summary>Gets or sets the height of the tile to use when saving TIFF files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The height of the tile to use when saving TIFF files.</value>
      <remarks>
        <para>When saving TIFF files, the size of the tiles or strips saved in the file can be controlled. Some graphic packages
            cannot load TIFF files unless the files are saved with a certain tile or strip size. LEADTOOLS can load files of any strip
            and tile size, so modifying these settings is not necessary when saving files that will be loaded with LEADTOOLS.</para>
        <para>If the <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.UseTileSize" /> Property is not true, then <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileWidth" /> and <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileHeight" /> are
            ignored. In this case, the image will be saved like in the previous versions of LEADTOOLS.</para>
        <para>If <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileWidth" /> is less than or equal to the image width, the image will be saved as tiles. If
            <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileWidth" /> is greater than the image width, the image will be saved as strips.  If the image is saved as
            tiles, <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileHeight" /> controls the height of the tile. If the image is saved as strips, <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileHeight" />
            controls the height of the strip. The image can be saved as one strip by setting <see cref="P:Leadtools.Codecs.CodecsTiffSaveOptions.TileHeight" /> to a value
            greater than the image height.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int tileHeight;</pre>
      </objectivec>
      <java>
        <pre>
public int getTileHeight()
public void setTileHeight(int value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.PreservePalette">
      <summary>Enables and disables preservation of the palette when saving TIFF CCITT files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to enable preservation of the palette when saving TIFF CCITT files.</value>
      <remarks>
            Note, this may decrease the compression ratio.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL preservePalette;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getPreservePalette()
public void setPreservePalette(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.UsePredictor">
      <summary>Gets a value indicating whether to use a predictor when saving LZW data. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to use a predictor when saving LZW data; otherwise, false.</value>
      <remarks>
            This is for TIF LZW or Raw LZW data that is 8 bpp or more.  This property is ignored if the LZW data is less than 8 bpp.
            </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL usePredictor;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getUsePredictor()
public void setUsePredictor(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.SavePlanar">
      <summary>Gets a value indicating whether to save CMYK TIFF data as planar. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to save CMYK TIFF data as planar; otherwise, false.</value>
      <remarks>
            This is for CMYK TIFF images.  This property is ignored for other formats/colorspaces.
            </remarks>
      <seealso cref="T:Leadtools.Topics.HandlingCMYKFilesAsSeparateBitmaps">Handling CMYK Files as Separate Images</seealso>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL savePlanar;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getSavePlanar()
public void setSavePlanar(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffSaveOptions.NoLzwAutoClear">
      <summary>Gets a value indicating whether to automatically insert CLEAR codes during LZW compression. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>true to disable insert of CLEAR codes; otherwise, false.</value>
      <remarks>
        <para>This option can be used when saving TIFF LZW files.  To save files compatible with some buggy LZW decoders that cannot
            handle early CLEAR codes. Some IBM decoders are known to have this problem.  They will not decode LEAD TIFF LZW files
            unless this property is set to true.</para>
        <para>This property is set to false by default, which allows LEADTOOLS to insert CLEAR LZW codes and reset the LZW 
            compression engine if the compression ratio is not adequate.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) BOOL noLzwAutoClear;</pre>
      </objectivec>
      <java>
        <pre>
public boolean getNoLzwAutoClear()
public void setNoLzwAutoClear(boolean value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsTiffOptions">
      <summary>Provides extra options for loading and saving TIFF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>
        <!--CodecsTiffOptions-->
      </example>
      <objectivec>
        <pre>@interface LTCodecsTiffOptions : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsTiffOptions</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffOptions.Load">
      <summary>Gets the options for loading TIFF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The TIFF load options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsTiffLoadOptions* load;</pre>
      </objectivec>
      <java>
        <pre>public CodecsTiffLoadOptions getLoad()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsTiffOptions.Save">
      <summary>Gets the options for saving TIFF images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The TIFF save options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsTiffOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsTiffSaveOptions* save;</pre>
      </objectivec>
      <java>
        <pre>public CodecsTiffSaveOptions getSave()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPtokaLoadOptions">
      <summary>Provides options specifically for loading PTOKA images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPtokaOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPtokaLoadOptions.Resolution">
      <summary>Gets or sets the resolution (DPI) to load. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The resolution (DPI) to load.</value>
      <remarks>
        <para>A value of 0 means use current screen resolution (usually 96).</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPtokaOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPtokaOptions">
      <summary>Provides extra options for loading and saving PTOKA images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>
        <!--CodecsPtokaOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPtokaOptions.Load">
      <summary>Gets the options for loading PTOKA images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>The PTOKA load options.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPtokaOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsXlsLoadOptions">
      <summary>Provides the options for loading Microsoft Excel 97-2003 (XLS) and Microsoft Excel 2007/2010 (XLSX) documents as a raster image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>XLS|Excel|XLSX</keywords>
      <remarks>
        <para>Microsoft Excel 97-2003 (XLS) and Microsoft Excel 2007/2010 (XLSX) files have no physical width or height in pixels. Use
            the <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentOptions" /> to control
            how the final document is rendered as a raster image. For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
        <para>For more information, refer to 
            <see cref="T:L.Topics.FileFormatsXLS">File Formats - XLS/XLSX Format</see>.</para>
        <para>Important note: The XLS and XLSX file formats support only the following rasterization size modes:
            <list type="bullet"><item><description><see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.None</see></description></item><item><description><see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.Fit</see></description></item></list></para>
        <para>All other size modes will be treated as <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.Fit.</see></para>
        <para>The XLS/XLSX file formats do not support loading a document using different horizontal or vertical resolutions. So if the value of
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.XResolution">CodecsRasterizeDocumentLoadOptions.XResolution</see> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.YResolution">CodecsRasterizeDocumentLoadOptions.YResolution</see> are different,
            the XLS/XLSX codecs will use the larger of the two values as the resolution to use when rasterizing.</para>
      </remarks>
      <example>
        <para>This example will load the given Excel 2003 file and render it as a raster image</para>
        <!--CodecsXlsOptions-->
      </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsXlsLoadOptions.MultiPageSheet">
      <summary>Gets or sets a value that indicates whether to draw multiple sheets per page. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> to draw multiple sheets per page if the final page size is greater than the sheet size,
            <strong>false</strong> to always draw one sheet per page.</value>
      <remarks>
        <para>Depending on the current rasterization options set with <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />, the resulting
            physical render size of the page can hold more than one sheet. If the value of <see cref="P:Leadtools.Codecs.CodecsXlsLoadOptions.MultiPageSheet" /> is set to
            <strong>true</strong>, then as many sheets as possible will be rendered on the same page if the size permits. Otherwise,
            exactly one sheet per page will be used.</para>
        <para>Notice that if the sheet size is larger than the page size specified by the user, the sheet will be cropped
            regardless of the setting of this property.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsXlsLoadOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsXlsOptions">
      <summary>Provides the options for loading or saving Microsoft Excel 97-2003 (XLS) and Microsoft Excel 2007/2010 (XLSX) documents. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>XLS|XLSX|Excel</keywords>
      <remarks>
        <para>Microsoft Excel 97-2003 (XLS) and Microsoft Excel 2007/2010 (XLSX) 
            documents have no physical width or height in pixels. Use
            the <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentOptions" /> to control
            how render the final object as a raster image. For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
        <para>Currently, LEADTOOLS does not support saving raster images as XLS/XLSX documents.</para>
        <para>For more information, refer to 
            <see cref="T:L.Topics.FileFormatsXLS">File Formats - XLS/XLSX Format</see>.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsXlsLoadOptions" />.</example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsXlsOptions.Load">
      <summary>Gets the object to set the options for loading Microsoft Excel 97-2003 (XLS) and Microsoft Excel 2007/2010 (XLSX)documents as raster images. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <keywords>XLS|Excel|XLSX</keywords>
      <value>The XLS/XLSX options used to load Microsoft Excel 97-2003 (XLS) and Microsoft Excel 2007/2010 (XLSX) documents as a raster image.</value>
      <noremarks />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsXlsLoadOptions" />.</example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPsdLayerInfo">
      <summary>Describes the layer position within a PSD file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
            For more information on PSD layers, refer to the FILE FORMATS SPECIFICATION from Adobe.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see> and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>.
            </example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsPsdLayerInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Leadtools.Codecs.CodecsPsdLayerInfo" /> class. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see> and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>.
            </example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsPsdLayerInfo.GetBlendModeKey">
      <summary>Gets the blend mode key for the layer. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <para>A four byte character array that represents the blend mode key for the layer. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>'norm'</term>
            <description>Normal.</description>
          </item>
          <item>
            <term>'dark'</term>
            <description>Darken.</description>
          </item>
          <item>
            <term>'lite'</term>
            <description>Lighten.</description>
          </item>
          <item>
            <term>'hue '</term>
            <description>Hue.</description>
          </item>
          <item>
            <term>'sat '</term>
            <description>Saturation.</description>
          </item>
          <item>
            <term>'colr'</term>
            <description>Color.</description>
          </item>
          <item>
            <term>'lum '</term>
            <description>Luminosity.</description>
          </item>
          <item>
            <term>'mul '</term>
            <description>Multiply.</description>
          </item>
          <item>
            <term>'scrn'</term>
            <description>Screen.</description>
          </item>
          <item>
            <term>'diss'</term>
            <description>Dissolve.</description>
          </item>
          <item>
            <term>'over'</term>
            <description>Overlay.</description>
          </item>
          <item>
            <term>'hLit'</term>
            <description>Hard light.</description>
          </item>
          <item>
            <term>sLit'</term>
            <description>Soft light.</description>
          </item>
          <item>
            <term>'diff'</term>
            <description>Difference.</description>
          </item>
          <item>
            <term>'smud'</term>
            <description>Exclusion.</description>
          </item>
          <item>
            <term>'div '</term>
            <description>Dodge.</description>
          </item>
          <item>
            <term>'idiv'</term>
            <description>Color burn.</description>
          </item>
        </list>
      </value>
      <remarks>
            For more information, refer to the FILE FORMATS SPECIFICATION from Adobe.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see> and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>.
            </example>
    </member>
    <member name="M:Leadtools.Codecs.CodecsPsdLayerInfo.SetBlendModeKey(System.Byte[])">
      <summary>Sets the blend mode key for the layer. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="blendModeKey">
        <para>A four byte character array that represents the blend mode key for the layer. Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Meaning</description>
          </listheader>
          <item>
            <term>'norm'</term>
            <description>Normal.</description>
          </item>
          <item>
            <term>'dark'</term>
            <description>Darken.</description>
          </item>
          <item>
            <term>'lite'</term>
            <description>Lighten.</description>
          </item>
          <item>
            <term>'hue '</term>
            <description>Hue.</description>
          </item>
          <item>
            <term>'sat '</term>
            <description>Saturation.</description>
          </item>
          <item>
            <term>'colr'</term>
            <description>Color.</description>
          </item>
          <item>
            <term>'lum '</term>
            <description>Luminosity.</description>
          </item>
          <item>
            <term>'mul '</term>
            <description>Multiply.</description>
          </item>
          <item>
            <term>'scrn'</term>
            <description>Screen.</description>
          </item>
          <item>
            <term>'diss'</term>
            <description>Dissolve.</description>
          </item>
          <item>
            <term>'over'</term>
            <description>Overlay.</description>
          </item>
          <item>
            <term>'hLit'</term>
            <description>Hard light.</description>
          </item>
          <item>
            <term>sLit'</term>
            <description>Soft light.</description>
          </item>
          <item>
            <term>'diff'</term>
            <description>Difference.</description>
          </item>
          <item>
            <term>'smud'</term>
            <description>Exclusion.</description>
          </item>
          <item>
            <term>'div '</term>
            <description>Dodge.</description>
          </item>
          <item>
            <term>'idiv'</term>
            <description>Color burn.</description>
          </item>
        </list>
      </param>
      <remarks>
            For more information, refer to the FILE FORMATS SPECIFICATION from Adobe.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see> and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdLayerInfo.Left">
      <summary>Left layer position. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>An integer value that represents the left position of this <see cref="T:Leadtools.Codecs.CodecsPsdLayerInfo" /></value>
      <remarks>
            For more information, refer to the FILE FORMATS SPECIFICATION from Adobe.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see> and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdLayerInfo.Top">
      <summary>Top layer position. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>An integer value that represents the top position of this <see cref="T:Leadtools.Codecs.CodecsPsdLayerInfo" /></value>
      <remarks>
            For more information, refer to the FILE FORMATS SPECIFICATION from Adobe.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see> and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdLayerInfo.Opacity">
      <summary>Opacity value of the layer. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>Possible values are between 0 and 255, where a value of 0 is completely transparent and a value of 255 is
            completely opaque.</value>
      <remarks>
            For more information, refer to the FILE FORMATS SPECIFICATION from Adobe.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see> and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdLayerInfo.Clipping">
      <summary>Clipping value for the layer. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A value of 0 represents base. A value of 1 represents non-base.</value>
      <remarks>
            For more information, refer to the FILE FORMATS SPECIFICATION from Adobe.
            </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see> and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdLayerInfo.LoadMaskImage">
      <summary>Determines whether to load the mask image when loading PSD files with <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see>. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>true load to load the mask image when loading PSD files with <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see>;
            otherwise, false.</value>
      <remarks>
        <para>When the value of this property is true and you call <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see>
            to load a PSD file, then the transparency mask channel image will be in the <see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.MaskImage" /> property.</para>
        <para>This property is not used when calling <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>
            to save a PSD file.</para>
        <para>Default value is true.</para>
        <para>For more information, refer to the FILE FORMATS SPECIFICATION from Adobe.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see> and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdLayerInfo.MaskImage">
      <summary>The transparency mask channel of the saved PSD layer. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:Leadtools.RasterImage" /> object that specifies the transparency mask channel of the saved PSD layer.</value>
      <remarks>
        <para>This is an 8-bit grayscale image. The value of each pixel indicates the amount of transparency the data
            of the original image has at this point. For example, if the value is 0xFF at a certain point, the pixel value
            of the layer image at that point is not transparent at all. If the value was 0x00, the pixel value of the
            layer image at that point is fully transparent. If the value is between these two, it indicates the degree of
            transparency the pixel value of the layer image has at that point.</para>
        <para>When loading, if you set the <see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.LoadMaskImage" /> property to true, then this property will hold an
            <see cref="T:Leadtools.RasterImage" /> object that represents the transparency mask channel found in the PSD file.</para>
        <para>If the mask image does not need to be loaded, pass false to <see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.LoadMaskImage" />.  The value of
            <see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.MaskImage" /> will not be used.  Passing false to <see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.LoadMaskImage" /> saves the transparency mask
            as full white image, which represents full visibility of the layer.</para>
        <para>When saving, if this is a valid image, then it should be of the same width and height as the corresponding
            layer image. It should also be an 8-bit grayscale image.</para>
        <para>For more information, refer to FILE FORMATS SPECIFICATION from Adobe.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see> and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdLayerInfo.Name">
      <summary>Gets or sets the name for the layer. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.String" /> which contains the name for the layer.</value>
      <remarks>
        <para>The layer name will be stored in the file.  The maximum size for this string is 256 characters.</para>
        <para>For more information, refer to the FILE FORMATS SPECIFICATION from Adobe.</para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see> and
            <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdLayerInfo.TransparencyProtected">
      <summary>Gets a value that indicates whether the PSD layer transparency data is locked. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> if the PSD layer transparency data is locked, otherwise; <strong>false</strong></value>
      <remarks>
        <para>The following are values are only when layer information is obtained from a PSD file using <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see>. These properties
            are not used and will be ignored when saving PSD layers using <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>:
            <list type="bullet"><item><description><see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.TransparencyProtected" /></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.Visible" /></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.Obsolete" /></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.Psd5OrLater" /></description></item></list></para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdLayerInfo.Visible">
      <summary>Gets a value that indicates whether the PSD layer is visible. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> if the PSD layer is visible, otherwise; <strong>false</strong></value>
      <remarks>
        <para>The following are values are only when layer information is obtained from a PSD file using <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see>. These properties
            are not used and will be ignored when saving PSD layers using <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>:</para>
        <ul>
          <li>
            <see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.TransparencyProtected" />
          </li>
          <li>
            <see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.Visible" />
          </li>
          <li>
            <see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.Obsolete" />
          </li>
          <li>
            <see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.Psd5OrLater" />
          </li>
        </ul>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdLayerInfo.Obsolete">
      <summary>Gets a value that indicates whether the PSD layer is obsolete. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> if the PSD layer is obsolete, otherwise; <strong>false</strong></value>
      <remarks>
        <para>The following are values are only when layer information is obtained from a PSD file using <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see>. These properties
            are not used and will be ignored when saving PSD layers using <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>:
            <list type="bullet"><item><description><see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.TransparencyProtected" /></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.Visible" /></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.Obsolete" /></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.Psd5OrLater" /></description></item></list></para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see>.
            </example>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPsdLayerInfo.Psd5OrLater">
      <summary>Gets a value that indicates whether the PSD layer is generated or modified using Photoshop 5 or later. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>
        <strong>true</strong> if the PSD layer is generated or modified using Photoshop 5 or later, otherwise; <strong>false</strong></value>
      <remarks>
        <para>The following are values are only when layer information is obtained from a PSD file using <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see>. These properties
            are not used and will be ignored when saving PSD layers using <see cref="M:Leadtools.Codecs.RasterCodecs.SavePsdWithLayers(Leadtools.RasterImage,System.String,System.Int32,Leadtools.RasterImage,Leadtools.Codecs.CodecsPsdLayerInfo[])">RasterCodecs.SavePsdWithLayers</see>:
            <list type="bullet"><item><description><see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.TransparencyProtected" /></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.Visible" /></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.Obsolete" /></description></item><item><description><see cref="P:Leadtools.Codecs.CodecsPsdLayerInfo.Psd5OrLater" /></description></item></list></para>
      </remarks>
      <example>
            For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.LoadPsdLayer(System.String,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,Leadtools.Codecs.CodecsPsdLayerInfo)">RasterCodecs.LoadPsdLayer</see>.
            </example>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPageEventCommand">
      <summary>Indicates the action to take regarding the load/save operation. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>typedef enum LTCodecsPageEventCommand LTCodecsPageEventCommand;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsPageEventCommand</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPageEventCommand.Continue">
      <summary>
            Continue normally.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPageEventCommand.Skip">
      <summary>
            Skip the current page.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPageEventCommand.Stop">
      <summary>
            Abort the process.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPageEventState">
      <summary>Indicates the state of the page load/save process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>typedef enum LTCodecsPageEventState LTCodecsPageEventState;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsPageEventState</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPageEventState.Before">
      <summary>
            The page is about to be processed.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsPageEventState.After">
      <summary>
            The page has been processed.
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsPageEventArgs">
      <summary>Provides information for the <see cref="E:Leadtools.Codecs.RasterCodecs.LoadPage">RasterCodecs.LoadPage</see> event. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadPage">RasterCodecs.LoadPage</see>.</example>
      <objectivec>
        <pre>@interface LTCodecsPageEventArgs : NSObject</pre>
      </objectivec>
      <java>
        <pre>public class CodecsPageEvent extends LeadEvent</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPageEventArgs.Image">
      <summary>Gets the object being loaded from the image file page or the image that is being saved. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A <see cref="T:Leadtools.RasterImage" /> that specifies the object being loaded from the image file page or the image that
            is being saved.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadPage">RasterCodecs.LoadPage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, strong) LTRasterImage* image;</pre>
      </objectivec>
      <java>
        <pre>public RasterImage getImage()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPageEventArgs.Page">
      <summary>Gets the page number of the image being loaded or saved. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The 1-based index page number of the image being loaded or saved.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadPage">RasterCodecs.LoadPage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int page;</pre>
      </objectivec>
      <java>
        <pre>public int getPage()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPageEventArgs.PageCount">
      <summary>Gets the number of pages being loaded or saved. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The number of pages being loaded or saved.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadPage">RasterCodecs.LoadPage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) unsigned int pageCount;</pre>
      </objectivec>
      <java>
        <pre>public int getPageCount()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPageEventArgs.FileName">
      <summary>Gets the name of the file being loaded or saved. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The name of the file being loaded or saved.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadPage">RasterCodecs.LoadPage</see>.</example>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPageEventArgs.State">
      <summary>Gets the state of the load or save process. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>The state of the load or save process.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadPage">RasterCodecs.LoadPage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, readonly, assign) LTCodecsPageEventState state;</pre>
      </objectivec>
      <java>
        <pre>public CodecsPageEventState getState()</pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPageEventArgs.Command">
      <summary>Gets or sets a value indicating how the load or save process should continue. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a><a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="silverlight.png" alt="Silverlight support" border="0" /></a></summary>
      <value>A value indicating how the load or save process should continue.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadPage">RasterCodecs.LoadPage</see>.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsPageEventCommand command;</pre>
      </objectivec>
      <java>
        <pre>
public CodecsPageEventCommand getCommand()
public void setCommand(CodecsPageEventCommand value)            </pre>
      </java>
      <keywords>Silverlight</keywords>
    </member>
    <member name="P:Leadtools.Codecs.CodecsPageEventArgs.Stream">
      <summary>
            Gets the stream used by the load process.
            </summary>
      <value>The <see cref="T:Leadtools.ILeadStream" /> object used by the load process.</value>
      <noremarks />
      <example>For an example, refer to <see cref="E:Leadtools.Codecs.RasterCodecs.LoadInformation">RasterCodecs.LoadInformation</see>.</example>
      <winrt />
      <objectivec>
        <pre>@property (nonatomic, readonly, strong) LTLeadStream* stream;</pre>
      </objectivec>
      <java>
        <pre>public ILeadStream getStream() </pre>
      </java>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions">
      <summary>Contains set options for loading a document file as a raster image (rasterization). <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>LEADTOOLS provides support for loading a document as a raster image. Document formats such as PDF, XPS, DOC/DOCX(2007/2010), PPT/PPTX(2007/2010), XLS/XLSX(2007/2010), RTF and Text
             do not contain physical width, height or resolution information. It is up to the loader (in this case, the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object) to
             specify the transformation from logical coordinates to physical pixels through a process called rasterization.</para>
        <para>Rasterization is the process through which a document is converted into a raster image. To check whether a certain file on disk (or in a .NET stream)
             contains a document file rather than a regular raster image, call the <see cref="M:Leadtools.Codecs.RasterCodecs.GetInformation(System.String,System.Boolean)">RasterCodecs.GetInformation</see><see cref="M:Leadtools.Codecs.RasterCodecs.GetInformationAsync(System.String,System.Boolean,System.Int32,System.Object)">RasterCodecs.GetInformationAsync</see> method and
             check the <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.IsDocumentFile">CodecsDocumentImageInfo.IsDocumentFile</see> property. Here is a code
             snippet:</para>
        <para>
          <pre>
            <code>
             CodecsImageInfo imageInfo = rasterCodecsInstance.GetInformation(fileName, true);
             if(imageInfo.Document.IsDocumentFile)
             {
                // A document file (PDF, XPS, DOC/DOCX(2007/2010), PPT/PPTX(2007/2010), XLS/XLSX(2007/2010), etc), show the original document size:
                Console.WriteLine("Document file, original size is {0} by {1} {2}",
                   imageInfo.Document.PageWidth, imageInfo.Document.PageHeight, imageInfo.Document.Unit);
            
                // Your code specific to rasterization based on the original document size goes here
             }
             </code>
          </pre>
        </para>
        <para>To rasterize a document file, set the properties of the <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" /> to the required values.
             For example, the following code snippet will instruct LEADTOOLS to fit any document files into 8.5 by 11 inches paper size at 300 dpi resolution.
             Every document file loaded with the <see cref="M:Leadtools.Codecs.RasterCodecs.Load(System.String)">RasterCodecs.Load</see> or <see cref="M:Leadtools.Codecs.RasterCodecs.LoadAsync(System.String,Leadtools.LeadRect,System.Int32,Leadtools.Codecs.CodecsLoadByteOrder,System.Int32,System.Int32,System.Object)">RasterCodecs.LoadAsync</see> methods will have width/height of no more
             than 2550 by 3300 pixels with a resolution of 300 by 300:</para>
        <para>
          <pre>
            <code>
             CodecsRasterizeDocumentLoadOptions rasterDocumentLoadOptions = rasterCodecsInstance.Options.RasterizeDocument.Load;
             // Set the size mode, we want to fit
             rasterDocumentLoadOptions.SizeMode = CodecsRasterizeDocumentSizeMode.Fit;
             // Set the page size
             rasterDocumentLoadOptions.PageWidth = 8.5;
             rasterDocumentLoadOptions.PageHeight = 11;
             rasterDocumentLoadOptions.Unit = CodecsRasterizeDocumentUnit.Inch;
             // And the resolution
             rasterDocumentLoadOptions.XResolution = 300;
             rasterDocumentLoadOptions.YResolution = 300;
            
             // Load the image
             RasterImage image = rasterCodecsInstance.Load(fileName);
            
             // Show its pixel size, it should be less than or equal to
             // 2550 by 3300 pixels (8.5 * 300 by 11 * 300)
             Console.WriteLine("Loaded image size: {0} by {1} pixels at {2} by {3}",
             image.ImageWidth, image.ImageHeight, image.XResolution, image.YResolution);
             </code>
          </pre>
        </para>
        <para>The <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" /> class contains the following properties:</para>
        <list type="table">
          <listheader>
            <term>Property</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" /></term>
            <description>
              <para>The resulting page width and height (in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit" />). The value of the resulting raster image width and height
             in pixels depends on the current resolution and size mode values.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.LeftMargin" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.TopMargin" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.RightMargin" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.BottomMargin" /></term>
            <description>
              <para>The size of the margins to leave on the left, top, right and bottom margins using <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit" /> as the unit of measure. Currently, only
             <see cref="T:Leadtools.Codecs.CodecsRtfLoadOptions">RTF</see> and <see cref="T:Leadtools.Codecs.CodecsTxtLoadOptions">TXT</see> documents support margins.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit" />
            </term>
            <description>
              <para>The units to use for the <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.LeftMargin" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.TopMargin" />,
             <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.RightMargin" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.BottomMargin" /> values.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.XResolution" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.YResolution" /></term>
            <description>
              <para>The resolution to use when rasterizing the document files. A value of 0 means to use the current screen resolution 
             (usually 96). The resolution controls the pixel density of the resulting raster image. For example, if you specify 8.5 by 11 inches
             page width and height and a resolution of 96, the resulting image will have a pixel width and height of (8.5 * 96 = 816) and
             (11 * 96 = 1056) pixels. This is suitable for viewing at a 100 percent zoom but when you start zooming in, the image
             will get pixelated. Pixelation may also occur if you send the raster image to a printer, since printers usually have
             much higher resolution than a monitor.</para>
              <para>If zooming in or high quality printing is a requirement in your code, then a higher resolution value must be specified (for
             example, 300 by 300). For an 8.5 by 11 inch document, this results in a raster image size of (8.5 * 300 = 2550) and
             (11 * 300 = 3300) pixels, which is more than suitable for printing or zooming in. Keep in mind that increasing the resolution will increase
             the memory used to hold the image data. Finding the right balance between pixel density and memory consumption depends upon your
             application needs.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.SizeMode" />
            </term>
            <description>
              <para>Controls the transformation used when converting the logical size specified in page width and height to the physical raster image
             size. Refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode" /> for more information.</para>
            </description>
          </item>
        </list>
        <para>Refer to the C# and VB Rasterize Document Demo that ships with your version of LEADTOOLS for an interactive demonstration of
             <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
      </remarks>
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <keywords>PDFv14|PDFv15|PDFA|PDF/A|PDF v1.4|PDF v1.5|DOC|Word</keywords>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsPdfOptions" />.</example>
      <example>
        <para>This example will load a PDF document using different rasterize document options and show its effect on the resulting raster image
             width, height and resolution.</para>
        <!--CodecsRasterizeDocumentLoadOptions-->
      </example>
      <objectivec>
        <pre>@interface LTCodecsRasterizeDocumentLoadOptions : NSObject</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">
      <summary>Gets or sets the resulting raster image suggested width in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.Double" /> value that indicates the resulting <see cref="T:Leadtools.RasterImage" /> suggested width in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit" />.
            Default value is <strong>8.5</strong> inches. The value of <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth" /> must be greater than 0.</value>
      <remarks>
        <para>The value of the resulting raster image width and height in pixels depends on the current resolution and size mode values. For
            more information refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
        <para>Use <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" /> to set the resulting raster image suggested height. <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth" /> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" /> are in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit" />.</para>
        <para>When the value of <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.SizeMode" /> is set to
            <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.None</see>, the original document size
            is kept and hence <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" /> will not be used.</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) double pageWidth;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">
      <summary>Gets or sets the resulting raster image suggested height in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit" />. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.Double" /> value that indicate the resulting <see cref="T:Leadtools.RasterImage" /> 
            suggested height in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit" />.
            Default value is <strong>11</strong> inches. The value of <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" /> must be greater than 0.</value>
      <remarks>
        <para>The values of the resulting raster image width and height in pixels depend 
            on the current resolution and size mode values. For
            more information refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
        <para>Use <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" /> to set the resulting raster image suggested height. 
            Both <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth" /> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" /> are in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit" />.</para>
        <para>When the value of <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.SizeMode" /> is set to
            <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.None</see>, 
            the original document size
            is kept and hence <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" /> will not be used.</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) double pageHeight;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.LeftMargin">
      <summary>Gets or sets the left margin value when rasterizing a document to a raster image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.Double" /> value that indicates the margin value in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit" /> 
            to use when rasterizing a document to
            a raster image. Default value is <strong>1.25</strong> inches. The value of <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.LeftMargin" /> 
            must be greater than or
            equal to 0.</value>
      <remarks>
        <para>The values of the <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.LeftMargin" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.TopMargin" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.RightMargin" /> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.BottomMargin" /> are only used when loading RTF and TXT documents. They are not used when loading
            other document formats such as PDF, XPS, DOC/DOCX(2007/2010), PPT/PPTX(2007/2010) and XLS/XLSX(2007/2010).</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) double leftMargin;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.TopMargin">
      <summary>Gets or sets the top margin value when rasterizing a document to a raster image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.Double" /> value that indicates the margin value in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit" /> to 
            use when rasterizing a document to
            a raster image. Default value is <strong>1.0</strong> inches. The value of <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.TopMargin" /> 
            must be greater than or
            equal to 0.</value>
      <remarks>
        <para>The values of <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.LeftMargin" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.TopMargin" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.RightMargin" /> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.BottomMargin" /> are only used when loading RTF and TXT documents. They are not used when 
            loading
            other document formats such as PDF, XPS, DOC/DOCX(2007/2010), PPT/PPTX(2007/2010) and XLS/XLSX(2007/2010).</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) double topMargin;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.RightMargin">
      <summary>Gets or sets the right margin value when rasterizing a document to a raster image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.Double" /> value that indicates the margin value in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit" /> to
            use when rasterizing a document to
            a raster image. Default value is <strong>1.25</strong> inches. The value of <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.RightMargin" /> 
            must be greater than or
            equal to 0.</value>
      <remarks>
        <para>The value of the <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.LeftMargin" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.TopMargin" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.RightMargin" /> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.BottomMargin" /> are only used when loading RTF and TXT documents. They are not used when loading
            other document formats such as PDF, XPS, DOC/DOCX(2007/2010), PPT/PPTX(2007/2010) and XLS/XLSX(2007/2010).</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) double rightMargin;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.BottomMargin">
      <summary>Gets or sets the bottom margin value when rasterizing a document to a raster image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:System.Double" /> value that indicate the margin value in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit" /> 
            to use when rasterizing a document to
            a raster image. Default value is <strong>1.0</strong> inches. The value of <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.BottomMargin" /> 
            must be greater than or
            equal to 0.</value>
      <remarks>
        <para>The value of the <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.LeftMargin" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.TopMargin" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.RightMargin" /> 
            and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.BottomMargin" /> are only used when loading RTF and TXT documents. They are not used when 
            loading
            other document formats such as PDF, XPS, DOC/DOCX(2007/2010), PPT/PPTX(2007/2010) and XLS/XLSX(2007/2010).</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) double bottomMargin;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.Unit">
      <summary>Gets or sets the units to use for <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.LeftMargin" />,
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.TopMargin" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.RightMargin" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.BottomMargin" /> values. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentUnit" /> enumeration member that specify the unit to use for
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.LeftMargin" />,
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.TopMargin" />, <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.RightMargin" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.BottomMargin" /> values. Default value
            is <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentUnit">CodecsRasterizeDocumentUnit.Inch</see></value>
      <remarks>
        <para>When using a pixel unit (<see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentUnit">CodecsRasterizeDocumentUnit.Pixel</see>), 
            the
            page width and height are multiplied by the current resolution(<see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.XResolution" /> and 
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.YResolution" />) to
            determine the final physical page size).</para>
        <para>Possible values are:</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentUnit">CodecsRasterizeDocumentUnit.Pixel</see>
            </term>
            <description>
              <para>The page width, height or margins are in pixels</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentUnit">CodecsRasterizeDocumentUnit.Inch</see>
            </term>
            <description>
              <para>The page width, height or margins are in inches</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentUnit">CodecsRasterizeDocumentUnit.Millimeter</see>
            </term>
            <description>
              <para>The page width, height or margins are in millimeters</para>
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsRasterizeDocumentUnit unit;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.XResolution">
      <summary>Gets or sets the horizontal resolution to use when rasterization document files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>An <see cref="T:System.Int32" /> value that indicates the horizontal resolution to use when rasterization 
            occurs on document files such
            as PDF and XPS. A value of 0 means use the current screen resolution. The default value is 150.</value>
      <remarks>
        <para>The resolution controls the pixel density of the resulting raster image. For example, if you 
            specify 8.5 by 11 inches
            page width and height and a resolution of 96, the resulting image will have a pixel width and height 
            of (8.5 * 96 = 816) and
            (11 * 96 = 1056) pixels. This is suitable for viewing at a 100 percent zoom but when you start 
            zooming in, the image
            will get pixelated. Pixelation can also occur when sending the raster image to a printer, since printers usually have
            much higher resolution than a screen.</para>
        <para>If zooming in or high quality printing is a requirement in your code, 
            then a higher resolution value must be specified, for
            example 300 by 300. For an 8.5 by 11 inches document, this results in a raster image
            size if (8.5 * 300 = 2550) and
            (11 * 300 = 3300) pixels. More than suitable for printing or zooming in. Keep in mind 
            that increasing the resolution will increase
            the memory used to hold the image data. Finding the right balance between pixel density 
            and memory consumption depends on your
            application needs.</para>
        <para>After the <see cref="T:Leadtools.RasterImage" /> is loaded, the image resolution set in
            <see cref="P:Leadtools.RasterImage.XResolution">RasterImage.XResolution</see> and 
            <see cref="P:Leadtools.RasterImage.YResolution">RasterImage.YResolution</see>
            will be the same as <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.XResolution" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.YResolution" />.</para>
        <para>The vertical resolution is specified in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.YResolution" />. For most normal usage, the values of
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.XResolution" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.YResolution" /> should be equal.</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int xResolution;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.YResolution">
      <summary>Gets or sets the vertical resolution to use for rasterization document files. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>An <see cref="T:System.Int32" /> value that indicates the vertical resolution to use for 
            rasterization document files such
            as PDF and XPS. A value of 0 means to use the current screen resolution. The default value is 150.</value>
      <remarks>
        <para>The resolution controls the pixel density of the resulting raster image. For example, 
            if you specify 8.5 by 11 inches
            page width and height and a resolution of 96, the resulting image will 
            have a pixel width and height of (8.5 * 96 = 816) and
            (11 * 96 = 1056) pixels. This is suitable for viewing at a 100 percent zoom but 
            when you start zooming in, the image
            will get pixelated. Pixelation can also occur if you send the raster image to a printer, 
            since printers usually have
            much higher resolution than a screen.</para>
        <para>If zooming in or high quality printing is a requirement in your code, then a 
            higher resolution value must be specified, for
            example 300 by 300. For an 8.5 by 11 inch document, this results in a raster image size 
            if (8.5 * 300 = 2550) and
            (11 * 300 = 3300) pixels. More than suitable for printing or zooming in. Keep in mind that 
            increasing the resolution increases
            the memory used to hold the image data. Finding the right balance between pixel density and 
            memory consumption depends on the
            application's needs.</para>
        <para>After the <see cref="T:Leadtools.RasterImage" /> is loaded, the image resolution set in
            <see cref="P:Leadtools.RasterImage.XResolution">RasterImage.XResolution</see> and 
            <see cref="P:Leadtools.RasterImage.YResolution">RasterImage.YResolution</see>
            will be the same as <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.XResolution" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.YResolution" />.</para>
        <para>The horizontal resolution is specified in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.XResolution" />. 
            For most normal usage, the value of
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.XResolution" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.YResolution" /> should be equal.</para>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) unsigned int yResolution;</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.SizeMode">
      <summary>Gets or sets a value that indicates the transformation to use when converting the logical size specified in
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" /> to the final physical raster image size. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>A <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode" /> enumeration member that indicates the transformation to use when
            converting the logical size specified in <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth" /> and <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" /> to the final physical
            raster image size. Default value is <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.None</see>.
            </value>
      <remarks>
        <para>LEADTOOLS provides support for loading a document as a raster image. 
            Document formats such as PDF, XPS, DOC/DOCX(2007/2010), PPT/PPTX(2007/2010), XLS/XLSX(2007/2010), RTF and Text
            do not contain physical width, height or resolution. It is up to the loader 
            (in this case, the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object) to
            specify the transformation from logical coordinates to physical pixels through a process called rasterization.
            For more information, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</para>
        <para>You can use the <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.SizeMode" /> property to specify how to use <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth" /> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight" /> to control the final raster image size. LEADTOOLS will determine 
            the original document size (a value
            that can be obtained in <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageWidth">CodecsDocumentImageInfo.PageWidth</see> and
            <see cref="P:Leadtools.Codecs.CodecsDocumentImageInfo.PageHeight">CodecsDocumentImageInfo.PageHeight</see>) and then apply the transformation
            from this value to determine the final <see cref="T:Leadtools.RasterImage" /> width and height as follows:</para>
        <list type="table">
          <listheader>
            <term>
              <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.SizeMode">CodecsRasterizeDocumentLoadOptions.SizeMode</see>
            </term>
            <description>Description</description>
          </listheader>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.None</see>
            </term>
            <description>
              <para>Use the original document width and height. No transformation will be performed and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">CodecsRasterizeDocumentLoadOptions.PageWidth</see> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">CodecsRasterizeDocumentLoadOptions.PageHeight</see> are not used.</para>
              <para>The final <see cref="T:Leadtools.RasterImage" /> will have a width or height value equals to the original document size.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.Fit</see>
            </term>
            <description>
              <para>Fit the resulting raster image into
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">CodecsRasterizeDocumentLoadOptions.PageWidth</see> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">CodecsRasterizeDocumentLoadOptions.PageHeight</see> while
            maintaining the aspect ratio. If the original document size is smaller than the requested page size, no transformation is performed.</para>
              <para>The final <see cref="T:Leadtools.RasterImage" /> will have a width or height equal to or less than the requested
            page width or height but not greater.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.FitAlways</see>
            </term>
            <description>
              <para>Always fit the resulting raster image into
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">CodecsRasterizeDocumentLoadOptions.PageWidth</see> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">CodecsRasterizeDocumentLoadOptions.PageHeight</see> while
            maintaining the aspect ratio. If the original document size is smaller than the requested page size, then the resulting
            image is scaled up.</para>
              <para>The final <see cref="T:Leadtools.RasterImage" /> will have a width or height equal to the requested
            page width or height. Not less and not greater.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.FitWidth</see>
            </term>
            <description>
              <para>Fit the resulting raster image width into
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">CodecsRasterizeDocumentLoadOptions.PageWidth</see> while
            maintaining the aspect ratio. The image height will be calculated based on the transformation and 
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">CodecsRasterizeDocumentLoadOptions.PageHeight</see> 
            is not used.</para>
              <para>The final <see cref="T:Leadtools.RasterImage" /> will have a width equal to the requested
            page width. The height depends on the original document height.</para>
            </description>
          </item>
          <item>
            <term>
              <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentSizeMode">CodecsRasterizeDocumentSizeMode.Stretch</see>
            </term>
            <description>
              <para>The resulting raster image width and height will be exactly equal to
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageWidth">CodecsRasterizeDocumentLoadOptions.PageWidth</see> and
            <see cref="P:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions.PageHeight">CodecsRasterizeDocumentLoadOptions.PageHeight</see>. 
            The aspect ratio
            can be different than the original document.</para>
              <para>The final <see cref="T:Leadtools.RasterImage" /> will have a width and height equal to the requested
            page width and height.</para>
            </description>
          </item>
        </list>
      </remarks>
      <seealso cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />
      <seealso cref="T:L.Topics.ImplementingPDFPluginFeatures">Implementing PDF Plug in Features</seealso>
      <seealso cref="T:Leadtools.Codecs.CodecsDocumentImageInfo" />
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, assign) LTCodecsRasterizeDocumentSizeMode sizeMode;</pre>
      </objectivec>
    </member>
    <member name="T:Leadtools.Codecs.CodecsRasterizeDocumentOptions">
      <summary>Provides support for loading or saving a document file. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <remarks>
        <para>LEADTOOLS provides support for loading a document as a raster image. 
            Document formats such as PDF, XPS, DOC/DOCX(2007/2010), PPT/PPTX(2007/2010), XLS/XLSX(2007/2010), RTF and Text
            do not contain physical width, height or resolution. It is up to the loader (in this case, the 
            <see cref="T:Leadtools.Codecs.RasterCodecs" /> object) to
            specify the transformation from logical coordinates to physical pixels through a process called rasterization.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@interface LTCodecsRasterizeDocumentOptions : NSObject</pre>
      </objectivec>
    </member>
    <member name="P:Leadtools.Codecs.CodecsRasterizeDocumentOptions.Load">
      <summary>Gets the object used to set the options for loading a document file as a raster image. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <value>An instance of <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" /> object that contains the options
            to use for loading a document file as a raster image.</value>
      <remarks>
        <para>LEADTOOLS provides support for loading a document as a raster image. 
            Documents formats such as PDF, XPS, DOC/DOCX(2007/2010), PPT/PPTX(2007/2010), XLS/XLSX(2007/2010), 
            RTF and Text
            do not contain physical width, height or resolution. It is up to the loader (in this case, 
            the <see cref="T:Leadtools.Codecs.RasterCodecs" /> object) to
            specify the transformation from logical coordinates to physical pixels through a process called 
            rasterization.</para>
      </remarks>
      <example>For an example, refer to <see cref="T:Leadtools.Codecs.CodecsRasterizeDocumentLoadOptions" />.</example>
      <objectivec>
        <pre>@property (nonatomic, strong, readonly) LTCodecsRasterizeDocumentLoadOptions* load;</pre>
      </objectivec>
    </member>
    <member name="T:Leadtools.Codecs.CodecsCompression">
      <summary>Indicates the compression type. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <noremarks />
      <noexample />
      <objectivec>
        <pre>typedef enum LTCodecsCompression LTCodecsCompression;</pre>
      </objectivec>
      <java>
        <pre>public enum CodecsCompression</pre>
      </java>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.Cmp">
      <summary>
            LEAD CMP.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.Jpeg444">
      <summary>
            JPEG 4:4:4.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.TifJpeg444">
      <summary>
            TIFF with JPEG 4:4:4.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.Jpeg411">
      <summary>
            JPEG 4:1:1.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.TifJpeg411">
      <summary>
            TIFF with JPEG 4:1:1.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.Jpeg422">
      <summary>
            JPEG 4:2:2.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.TifJpeg422">
      <summary>
            TIFF with JPEG 4:2:2.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.Lead0">
      <summary>
            LEAD 1 bit, lossless compression.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.Lead1">
      <summary>
            LEAD 1 bit, excellent compression.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.TiffCcitt">
      <summary>
            TIFF CCITT.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.TiffCcittG3Fax1Dim">
      <summary>
            CCITT Group 3 one dimensional.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.TiffCcittG3Fax2Dim">
      <summary>
            CCITT Group 3 two dimensional.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.TiffCcittG4Fax">
      <summary>
            CCITT Group 4 two dimensional.
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.J2k">
      <summary>
            JPEG 2000 file
            </summary>
    </member>
    <member name="F:Leadtools.Codecs.CodecsCompression.Jp2">
      <summary>
            JPEG 2000 stream
            </summary>
    </member>
    <member name="T:Leadtools.Codecs.CodecsCompressDataCallback">
      <summary>Provides a callback method that gets called when compressed data is available. <a href="ms-xhelp:///?id=Leadtools.Topics~Leadtools.Topics.LEADTOOLSDocumentation"><img src="dotnet.png" alt=".NET support" border="0" /></a>
</summary>
      <param name="width">The image being compressed width in pixels.</param>
      <param name="height">The image being compressed height in pixels.</param>
      <param name="bitsPerPixel">The image being compressed bits/pixel value.</param>
      <param name="order">The image being compressed byte order.</param>
      <param name="viewPerspective">The image being compressed view perspective value.</param>
      <param name="buffer">A pointer to the memory buffer containing compressed data.</param>
      <returns>true to continue compressing the data, false to abort.</returns>
      <remarks>
            The <see cref="T:Leadtools.Codecs.CodecsCompressDataCallback" /> delegate is passed to
            <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)">RasterCodecs.StartCompress</see> and will get called compressed data is available.
            </remarks>
      <example>For an example, refer to <see cref="M:Leadtools.Codecs.RasterCodecs.StartCompress(System.Int32,System.Int32,System.Int32,Leadtools.RasterByteOrder,Leadtools.RasterViewPerspective,System.Int32,System.Byte[],System.Int32,System.Int32,Leadtools.Codecs.CodecsCompression,Leadtools.Codecs.CodecsCompressDataCallback)">RasterCodecs.StartCompress</see>.</example>
      <objectivec>
        <pre>typedef BOOL (^LTCodecsCompressDataCallback)(unsigned int width, unsigned int height, unsigned int bitsPerPixel, LTRasterByteOrder order, LTRasterViewPerspective viewPerspective, unsigned char* data, size_t dataLength);</pre>
      </objectivec>
    </member>
  </members>
</doc>